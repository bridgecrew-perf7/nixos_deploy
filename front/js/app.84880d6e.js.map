{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/views/Signup.vue?17f2","webpack:///./src/views/Login.vue?fe86","webpack:///./src/assets/logo_round.png","webpack:///./src/App.vue?7d98","webpack:///./src/App.vue","webpack:///./src/App.vue?dfb6","webpack:///./src/registerServiceWorker.ts","webpack:///./src/views/Home.vue?c263","webpack:///./properties.ts","webpack:///./src/services/api/openApi/base.ts","webpack:///./src/services/api/openApi/common.ts","webpack:///./src/services/api/openApi/api.ts","webpack:///./src/services/api/apis.ts","webpack:///./src/utils/Time.ts","webpack:///./src/services/AccountService.ts","webpack:///./src/services/BudgetService.ts","webpack:///./src/services/CategoryService.ts","webpack:///./src/services/MasterCategoryService.ts","webpack:///./src/store/StoreHandler.ts","webpack:///./src/components/BudgetCmpt.vue?6a27","webpack:///./src/services/BudgetDataService.ts","webpack:///./src/services/AllocationService.ts","webpack:///./src/model/model.ts","webpack:///./src/components/MasterCategoryCmpt.vue?c1f8","webpack:///./src/utils/Utils.ts","webpack:///./src/components/forms/CategoryForm.vue?50cc","webpack:///./src/components/forms/CategoryForm.vue","webpack:///./src/components/forms/CategoryForm.vue?2b8b","webpack:///./src/components/forms/MasterCategoryForm.vue?046a","webpack:///./src/components/forms/MasterCategoryForm.vue","webpack:///./src/components/forms/MasterCategoryForm.vue?046f","webpack:///./src/components/MasterCategoryCmpt.vue","webpack:///./src/components/MasterCategoryCmpt.vue?bb05","webpack:///./src/components/BudgetCmpt.vue","webpack:///./src/components/BudgetCmpt.vue?8789","webpack:///./src/components/AccountsWidget.vue?7987","webpack:///./src/components/forms/AccountCreationForm.vue?cde0","webpack:///./src/components/forms/AccountCreationForm.vue","webpack:///./src/components/forms/AccountCreationForm.vue?1ffd","webpack:///./src/components/AccountsWidget.vue","webpack:///./src/components/AccountsWidget.vue?5889","webpack:///./src/services/PersonService.ts","webpack:///./src/components/utils/Loader.vue?714f","webpack:///./src/components/utils/Loader.vue","webpack:///./src/components/utils/Loader.vue?f372","webpack:///./src/components/ButtonMenu.vue?a788","webpack:///./src/components/ButtonMenu.vue","webpack:///./src/components/ButtonMenu.vue?2683","webpack:///./src/views/Home.vue","webpack:///./src/views/Home.vue?ab8c","webpack:///./src/views/Login.vue?0697","webpack:///./src/views/Login.vue","webpack:///./src/views/Login.vue?e63b","webpack:///./src/views/Profile.vue?a239","webpack:///./src/views/Profile.vue","webpack:///./src/views/Profile.vue?5937","webpack:///./src/views/Signup.vue?9d98","webpack:///./src/views/Signup.vue","webpack:///./src/views/Signup.vue?c77e","webpack:///./src/views/RedirectAtAccountPage.vue?f8a7","webpack:///./src/views/RedirectAtAccountPage.vue","webpack:///./src/views/RedirectAtAccountPage.vue?ce93","webpack:///./src/views/AccountPage.vue?a2ea","webpack:///./src/services/OperationService.ts","webpack:///./src/components/forms/OperationForm.vue?942e","webpack:///./src/components/forms/OperationForm.vue","webpack:///./src/components/forms/OperationForm.vue?6ade","webpack:///./src/views/AccountPage.vue","webpack:///./src/views/AccountPage.vue?f8d0","webpack:///./src/router/index.ts","webpack:///./src/store/index.ts","webpack:///./src/main.ts","webpack:///./src/assets/logo.png"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","jsonpScriptSrc","p","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","class","__exports__","render","ready","log","registered","cached","updatefound","updated","offline","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_ctx","_cache","$props","$setup","$data","$options","_component_BudgetCmpt","_component_AccountsWidget","_component_BtnMenu","_component_Loader","this","$store","state","css","storeLoaded","month","currentMonth","page","Properties","makeSuper","superTokenAxios","init","refreshTokenUrl","refreshUrl","server","replace","configuration","basePath","axios","field","msg","DUMMY_BASE_URL","functionName","paramName","paramValue","url","searchParams","URLSearchParams","search","objects","Array","isArray","delete","item","append","set","toString","toPathString","pathname","hash","axiosArgs","globalAxios","BASE_PATH","axiosRequestArgs","options","addAccount","budgetId","amount","day","localVarPath","localVarUrlObj","URL","baseOptions","localVarRequestOptions","method","localVarHeaderParameter","localVarQueryParameter","query","headersFromBaseOptions","headers","deleteAccount","accountId","findAccountsByBudget","updateAccount","newName","localVarAxiosParamCreator","localVarAxiosArgs","then","addAllocation","categoryId","addBudget","deleteBudget","findBudgetsByUser","updateBudget","findBudgetData","startMonth","endMonth","findTotalBudgetAmount","addCategory","masterCategoryId","getCategoriesByBudget","updateCategory","id","newMasterCategoryId","newArchived","newDeleted","addMasterCategory","getMasterCategoriesByBudget","updateMasterCategory","addOperation","memo","deleteOperation","operationId","findOperationsByAccount","findOperationsByBudget","updateOperation","newAccountId","newDay","newCategoryId","newAmount","newMemo","createBillingPortalSession","createPerson","password","email","createSession","deleteSession","personApi","budgetApi","budgetDataApi","accountApi","operationApi","allocationApi","categoryApi","masterCategoryApi","dateTime","Date","year","getFullYear","getMonth","monthAsInt","getDayFromDate","getCurrentDate","formatDate","date","setMonth","setFullYear","getDate","dateString","dayAsInt","getMonthAsDate","setDate","getDateFromDay","currentYear","toISOString","split","budget","response","store","getCurrentDay","updateAccounts","catch","redirectOnApiError","masterCategory","initBudget","dispatch","updateMasterCategories","updateCategories","getAccounts","accounts","getCategories","categories","getMasterCategories","masterCategories","getDefaultBudget","category","archived","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_component_master_category_cmpt","onClick","$event","goToLastMonth","toBeBudgetedClass","$d","budgetMonth","isThisYear","toBeBudgeted","getEurosAmount","$t","goToNextMonth","totalBudgetData","allocated","spent","available","onUpdateAllocation","updateAllocation","categoryDataList","createMasterCategory","archiveVisible","_component_MasterCategoryForm","_component_CategoryForm","focusOn","onLoosesFocus","loosesFocus","onCreateCategory","createCategory","putFocusOn","masterCategoryData","onChange","updateAllocationOnChange","centsAmount","eurosAmount","Math","round","unarchiveCategory","$emit","archiveCategory","props","required","emits","methods","unarchiveMasterCategory","archiveMasterCategory","renameMasterCategory","components","CategoryForm","MasterCategoryForm","Boolean","default","computed","getCategoriesByMasterCategory","getCentsAmount","MasterCategoryCmpt","Number","created","getBudgetData","watch","account","formerAllocations","amountInBudget","monthIsThisYear","getBudgetDataForMonth","initFormerAllocation","getBudgetAmount","newAllocation","getNextMonth","getLastMonth","_component_AccountCreationForm","totalOnAccounts","goToAccountPage","accountCreationFormIsDisplayed","changeAccountCreationFormDisplay","onUpdateAccountList","onCloseForm","for","placeholder","number","createAccount","AccountCreationForm","total","path","RouterPages","home","a","isAxiosError","JSON","parse","billingUrl","location","href","alert","billingPortalUrl","redirectToLoginPageIfNotLogged","fromPage","title","goHomePage","goChooseAccount","logout","String","redirectAtAccountPage","beforeCreate","initStore","BudgetCmpt","AccountsWidget","Loader","BtnMenu","getCurrentMonth","goToProfile","profile","_withId","alt","login","errorMsg","goToSignUp","responseData","unlockingDate","minutes","lockingDuration","getTime","signup","goToBillingPortal","redirectToBillingPortalUrl","passwordConfirm","goToLogin","logged","testForm","regex","passwordCheckSecurity","match","regExp","validPassword","test","_component_OperationForm","editingTitle","currentName","updateName","cancelEditing","displayTitleEditing","onUpdateOperationList","getAccountOperation","operations","operation","editing","getDayAsDate","getCategoryById","setAsEditing","disabled","style","incomeCategoryId","transfertCategoryId","label","getArchivedCategories","incoming","rebootAddOperationForm","getDateStringFromDay","getCurrentDateString","abs","signedCentsAmount","getDayFromDateString","getCategoriesByArchivedStatus","OperationForm","getOperations","operationToEditableOperation","editableOperations","forEach","routes","component","Home","Login","Signup","Profile","RedirectAtAccountPage","AccountPage","route","about","router","history","status","doesSessionExist","mutations","updateLogged","resetStore","updateOnBudgetChange","sort","b","toLowerCase","updateStoreLoaded","actions","context","commit","messages","fr","en","i18n","locale","fallbackLocale","datetimeFormats","commitHash","App","use","mount"],"mappings":"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","file":"js/app.84880d6e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"about\":\"about\"}[chunkId]||chunkId) + \".\" + {\"about\":\"2d6bf34f\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Signup.vue?vue&type=style&index=0&id=01136d40&scoped=true&lang=less\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Login.vue?vue&type=style&index=0&id=10671a15&scoped=true&lang=less\"","module.exports = __webpack_public_path__ + \"img/logo_round.87e0efea.png\";","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=03f1f332&lang=less\"","<template>\n<div class=\"main container-fluid\">\n  <div class=\"main-row\">\n  <router-view/>\n  </div>\n</div>\n</template>\n<style lang=\"less\">\n.main {\n  height: 100vh;\n};\n.main-row {\n  height: 100%;\n};\n@import \"~bootstrap/dist/css/bootstrap.min.css\";\n@import \"style/all.less\";\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=03f1f332\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=03f1f332&lang=less\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"home row\" }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { class: \"widgetsAtHome\" }\nconst _hoisted_4 = { class: \"col-3 offset-0 col-xl-3 offset-xl-1 col-xxl-2 offset-xxl-1\" }\nconst _hoisted_5 = { class: \"accountWidgetAtHome\" }\nconst _hoisted_6 = { class: \"buttonsAtHome\" }\nconst _hoisted_7 = { key: 1 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_BudgetCmpt = _resolveComponent(\"BudgetCmpt\")\n  const _component_AccountsWidget = _resolveComponent(\"AccountsWidget\")\n  const _component_BtnMenu = _resolveComponent(\"BtnMenu\")\n  const _component_Loader = _resolveComponent(\"Loader\")\n\n  return (_openBlock(), _createBlock(\"div\", {\n    class: this.$store.state.css\n  }, [\n    _createVNode(\"div\", _hoisted_1, [\n      (this.$store.state.storeLoaded)\n        ? (_openBlock(), _createBlock(\"div\", _hoisted_2, [\n            _createVNode(\"div\", _hoisted_3, [\n              _createVNode(_component_BudgetCmpt, {\n                month: this.currentMonth\n              }, null, 8, [\"month\"]),\n              _createVNode(\"div\", _hoisted_4, [\n                _createVNode(\"div\", _hoisted_5, [\n                  _createVNode(_component_AccountsWidget)\n                ]),\n                _createVNode(\"div\", _hoisted_6, [\n                  _createVNode(_component_BtnMenu, { page: 'home' })\n                ])\n              ])\n            ])\n          ]))\n        : (_openBlock(), _createBlock(\"div\", _hoisted_7, [\n            _createVNode(_component_Loader, { class: \"loader\" })\n          ]))\n    ])\n  ], 2))\n}","enum Properties {\n    server = 'https://api.agatha-budget.fr/',\n    refreshUrl = 'https://api.agatha-budget.fr/session/refresh',\n    commitHash = ''\n}\n\nexport default Properties\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Tresorier\n * Trésorier api front to back\n *\n * The version of the OpenAPI document: 2.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport { Configuration } from \"./configuration\";\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport SuperTokensRequest from 'supertokens-website/axios';\nimport Properties from '@/../properties';\n\n\nSuperTokensRequest.makeSuper(globalAxios);\nexport const superTokenAxios = globalAxios;\n\nSuperTokensRequest.init({\n    refreshTokenUrl: Properties.refreshUrl\n});\n\nexport const BASE_PATH = Properties.server.replace(/\\/+$/, \"\");\n\n/**\n *\n * @export\n */\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\n/**\n *\n * @export\n * @interface RequestArgs\n */\nexport interface RequestArgs {\n    url: string;\n    options: any;\n}\n\n/**\n *\n * @export\n * @class BaseAPI\n */\nexport class BaseAPI {\n    protected configuration: Configuration | undefined;\n\n    constructor(configuration?: Configuration, protected basePath: string = BASE_PATH, protected axios: AxiosInstance = superTokenAxios) {\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath || this.basePath;\n        }\n    }\n};\n\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nexport class RequiredError extends Error {\n    name: \"RequiredError\" = \"RequiredError\";\n    constructor(public field: string, msg?: string) {\n        super(msg);\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Tresorier\n * Trésorier api front to back\n *\n * The version of the OpenAPI document: 2.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport { Configuration } from \"./configuration\";\nimport { RequiredError, RequestArgs } from \"./base\";\nimport { AxiosInstance, AxiosResponse } from 'axios';\n\n/**\n *\n * @export\n */\nexport const DUMMY_BASE_URL = 'https://example.com'\n\n/**\n *\n * @throws {RequiredError}\n * @export\n */\nexport const assertParamExists = function (functionName: string, paramName: string, paramValue: unknown) {\n    if (paramValue === null || paramValue === undefined) {\n        throw new RequiredError(paramName, `Required parameter ${paramName} was null or undefined when calling ${functionName}.`);\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setApiKeyToObject = async function (object: any, keyParamName: string, configuration?: Configuration) {\n    if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue = typeof configuration.apiKey === 'function'\n            ? await configuration.apiKey(keyParamName)\n            : await configuration.apiKey;\n        object[keyParamName] = localVarApiKeyValue;\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setBasicAuthToObject = function (object: any, configuration?: Configuration) {\n    if (configuration && (configuration.username || configuration.password)) {\n        object[\"auth\"] = { username: configuration.username, password: configuration.password };\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setBearerAuthToObject = async function (object: any, configuration?: Configuration) {\n    if (configuration && configuration.accessToken) {\n        const accessToken = typeof configuration.accessToken === 'function'\n            ? await configuration.accessToken()\n            : await configuration.accessToken;\n        object[\"Authorization\"] = \"Bearer \" + accessToken;\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setOAuthToObject = async function (object: any, name: string, scopes: string[], configuration?: Configuration) {\n    if (configuration && configuration.accessToken) {\n        const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n            ? await configuration.accessToken(name, scopes)\n            : await configuration.accessToken;\n        object[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setSearchParams = function (url: URL, ...objects: any[]) {\n    const searchParams = new URLSearchParams(url.search);\n    for (const object of objects) {\n        for (const key in object) {\n            if (Array.isArray(object[key])) {\n                searchParams.delete(key);\n                for (const item of object[key]) {\n                    searchParams.append(key, item);\n                }\n            } else {\n                searchParams.set(key, object[key]);\n            }\n        }\n    }\n    url.search = searchParams.toString();\n}\n\n/**\n *\n * @export\n */\nexport const serializeDataIfNeeded = function (value: any, requestOptions: any, configuration?: Configuration) {\n    const nonString = typeof value !== 'string';\n    const needsSerialization = nonString && configuration && configuration.isJsonMime\n        ? configuration.isJsonMime(requestOptions.headers['Content-Type'])\n        : nonString;\n    return needsSerialization\n        ? JSON.stringify(value !== undefined ? value : {})\n        : (value || \"\");\n}\n\n/**\n *\n * @export\n */\nexport const toPathString = function (url: URL) {\n    return url.pathname + url.search + url.hash\n}\n\n/**\n *\n * @export\n */\nexport const createRequestFunction = function (axiosArgs: RequestArgs, globalAxios: AxiosInstance, BASE_PATH: string, configuration?: Configuration) {\n    return <T = unknown, R = AxiosResponse<T>>(axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n        const axiosRequestArgs = {...axiosArgs.options, url: (configuration?.basePath || basePath) + axiosArgs.url};\n        return axios.request<T, R>(axiosRequestArgs);\n    };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Tresorier\n * Trésorier api front to back\n *\n * The version of the OpenAPI document: 2.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport { Configuration } from './configuration';\nimport { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError, superTokenAxios as globalAxios} from './base';\n\n/**\n * \n * @export\n * @interface Account\n */\nexport interface Account {\n    /**\n     * \n     * @type {string}\n     * @memberof Account\n     */\n    name: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Account\n     */\n    id: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Account\n     */\n    amount: number;\n}\n/**\n * \n * @export\n * @interface Allocation\n */\nexport interface Allocation {\n    /**\n     * \n     * @type {number}\n     * @memberof Allocation\n     */\n    month: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Allocation\n     */\n    categoryId: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Allocation\n     */\n    amount: number;\n}\n/**\n * \n * @export\n * @interface Budget\n */\nexport interface Budget {\n    /**\n     * \n     * @type {string}\n     * @memberof Budget\n     */\n    id: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Budget\n     */\n    name: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Budget\n     */\n    isDefault?: boolean;\n}\n/**\n * \n * @export\n * @interface Category\n */\nexport interface Category {\n    /**\n     * \n     * @type {string}\n     * @memberof Category\n     */\n    name: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Category\n     */\n    id: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Category\n     */\n    masterCategoryId: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Category\n     */\n    archived: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Category\n     */\n    deleted: boolean;\n}\n/**\n * \n * @export\n * @interface CategoryData\n */\nexport interface CategoryData {\n    /**\n     * \n     * @type {number}\n     * @memberof CategoryData\n     */\n    allocated: number;\n    /**\n     * \n     * @type {number}\n     * @memberof CategoryData\n     */\n    spent: number;\n    /**\n     * \n     * @type {number}\n     * @memberof CategoryData\n     */\n    available: number;\n}\n/**\n * \n * @export\n * @interface MasterCategory\n */\nexport interface MasterCategory {\n    /**\n     * \n     * @type {string}\n     * @memberof MasterCategory\n     */\n    name: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MasterCategory\n     */\n    id: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MasterCategory\n     */\n    budgetId: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof MasterCategory\n     */\n    deleted: boolean;\n}\n/**\n * \n * @export\n * @interface Operation\n */\nexport interface Operation {\n    /**\n     * \n     * @type {string}\n     * @memberof Operation\n     */\n    id: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Operation\n     */\n    day: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Operation\n     */\n    accountId: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Operation\n     */\n    categoryId: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Operation\n     */\n    amount: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Operation\n     */\n    memo: string;\n}\n\n/**\n * AccountApi - axios parameter creator\n * @export\n */\nexport const AccountApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Add a new account\n         * @param {string} budgetId \n         * @param {string} name \n         * @param {number} amount \n         * @param {number} day day as seen by user in his/her timezone, format : 2 january 2021 &#x3D;&gt; 20210102\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addAccount: async (budgetId: string, name: string, amount: number, day: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('addAccount', 'budgetId', budgetId)\n            // verify required parameter 'name' is not null or undefined\n            assertParamExists('addAccount', 'name', name)\n            // verify required parameter 'amount' is not null or undefined\n            assertParamExists('addAccount', 'amount', amount)\n            // verify required parameter 'day' is not null or undefined\n            assertParamExists('addAccount', 'day', day)\n            const localVarPath = `/account`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budget_id'] = budgetId;\n            }\n\n            if (name !== undefined) {\n                localVarQueryParameter['name'] = name;\n            }\n\n            if (amount !== undefined) {\n                localVarQueryParameter['amount'] = amount;\n            }\n\n            if (day !== undefined) {\n                localVarQueryParameter['day'] = day;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Delete account\n         * @param {string} accountId id of the account you want to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteAccount: async (accountId: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'accountId' is not null or undefined\n            assertParamExists('deleteAccount', 'accountId', accountId)\n            const localVarPath = `/account`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (accountId !== undefined) {\n                localVarQueryParameter['account_id'] = accountId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Finds accounts by budget\n         * @param {string} budgetId id of the budget whose accounts you want to retrieve\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findAccountsByBudget: async (budgetId: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('findAccountsByBudget', 'budgetId', budgetId)\n            const localVarPath = `/account/budget`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budget_id'] = budgetId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Rename an account\n         * @param {string} accountId \n         * @param {string} newName \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateAccount: async (accountId: string, newName: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'accountId' is not null or undefined\n            assertParamExists('updateAccount', 'accountId', accountId)\n            // verify required parameter 'newName' is not null or undefined\n            assertParamExists('updateAccount', 'newName', newName)\n            const localVarPath = `/account`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (accountId !== undefined) {\n                localVarQueryParameter['account_id'] = accountId;\n            }\n\n            if (newName !== undefined) {\n                localVarQueryParameter['new_name'] = newName;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * AccountApi - functional programming interface\n * @export\n */\nexport const AccountApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = AccountApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new account\n         * @param {string} budgetId \n         * @param {string} name \n         * @param {number} amount \n         * @param {number} day day as seen by user in his/her timezone, format : 2 january 2021 &#x3D;&gt; 20210102\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async addAccount(budgetId: string, name: string, amount: number, day: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.addAccount(budgetId, name, amount, day, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Delete account\n         * @param {string} accountId id of the account you want to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async deleteAccount(accountId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteAccount(accountId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Finds accounts by budget\n         * @param {string} budgetId id of the budget whose accounts you want to retrieve\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async findAccountsByBudget(budgetId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Account>>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.findAccountsByBudget(budgetId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Rename an account\n         * @param {string} accountId \n         * @param {string} newName \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async updateAccount(accountId: string, newName: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.updateAccount(accountId, newName, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n    }\n};\n\n/**\n * AccountApi - factory interface\n * @export\n */\nexport const AccountApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = AccountApiFp(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new account\n         * @param {string} budgetId \n         * @param {string} name \n         * @param {number} amount \n         * @param {number} day day as seen by user in his/her timezone, format : 2 january 2021 &#x3D;&gt; 20210102\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addAccount(budgetId: string, name: string, amount: number, day: number, options?: any): AxiosPromise<string> {\n            return localVarFp.addAccount(budgetId, name, amount, day, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Delete account\n         * @param {string} accountId id of the account you want to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteAccount(accountId: string, options?: any): AxiosPromise<string> {\n            return localVarFp.deleteAccount(accountId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Finds accounts by budget\n         * @param {string} budgetId id of the budget whose accounts you want to retrieve\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findAccountsByBudget(budgetId: string, options?: any): AxiosPromise<Array<Account>> {\n            return localVarFp.findAccountsByBudget(budgetId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Rename an account\n         * @param {string} accountId \n         * @param {string} newName \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateAccount(accountId: string, newName: string, options?: any): AxiosPromise<string> {\n            return localVarFp.updateAccount(accountId, newName, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * AccountApi - object-oriented interface\n * @export\n * @class AccountApi\n * @extends {BaseAPI}\n */\nexport class AccountApi extends BaseAPI {\n    /**\n     * \n     * @summary Add a new account\n     * @param {string} budgetId \n     * @param {string} name \n     * @param {number} amount \n     * @param {number} day day as seen by user in his/her timezone, format : 2 january 2021 &#x3D;&gt; 20210102\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountApi\n     */\n    public addAccount(budgetId: string, name: string, amount: number, day: number, options?: any) {\n        return AccountApiFp(this.configuration).addAccount(budgetId, name, amount, day, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Delete account\n     * @param {string} accountId id of the account you want to delete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountApi\n     */\n    public deleteAccount(accountId: string, options?: any) {\n        return AccountApiFp(this.configuration).deleteAccount(accountId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Finds accounts by budget\n     * @param {string} budgetId id of the budget whose accounts you want to retrieve\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountApi\n     */\n    public findAccountsByBudget(budgetId: string, options?: any) {\n        return AccountApiFp(this.configuration).findAccountsByBudget(budgetId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Rename an account\n     * @param {string} accountId \n     * @param {string} newName \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountApi\n     */\n    public updateAccount(accountId: string, newName: string, options?: any) {\n        return AccountApiFp(this.configuration).updateAccount(accountId, newName, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n/**\n * AllocationApi - axios parameter creator\n * @export\n */\nexport const AllocationApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Add a new allocation or update an existing one\n         * @param {number} month day of the operation (march 2010 &#x3D;&gt; 201003)\n         * @param {string} categoryId \n         * @param {number} amount \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addAllocation: async (month: number, categoryId: string, amount: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'month' is not null or undefined\n            assertParamExists('addAllocation', 'month', month)\n            // verify required parameter 'categoryId' is not null or undefined\n            assertParamExists('addAllocation', 'categoryId', categoryId)\n            // verify required parameter 'amount' is not null or undefined\n            assertParamExists('addAllocation', 'amount', amount)\n            const localVarPath = `/allocation`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (month !== undefined) {\n                localVarQueryParameter['month'] = month;\n            }\n\n            if (categoryId !== undefined) {\n                localVarQueryParameter['category_id'] = categoryId;\n            }\n\n            if (amount !== undefined) {\n                localVarQueryParameter['amount'] = amount;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * AllocationApi - functional programming interface\n * @export\n */\nexport const AllocationApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = AllocationApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new allocation or update an existing one\n         * @param {number} month day of the operation (march 2010 &#x3D;&gt; 201003)\n         * @param {string} categoryId \n         * @param {number} amount \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async addAllocation(month: number, categoryId: string, amount: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Allocation>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.addAllocation(month, categoryId, amount, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n    }\n};\n\n/**\n * AllocationApi - factory interface\n * @export\n */\nexport const AllocationApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = AllocationApiFp(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new allocation or update an existing one\n         * @param {number} month day of the operation (march 2010 &#x3D;&gt; 201003)\n         * @param {string} categoryId \n         * @param {number} amount \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addAllocation(month: number, categoryId: string, amount: number, options?: any): AxiosPromise<Allocation> {\n            return localVarFp.addAllocation(month, categoryId, amount, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * AllocationApi - object-oriented interface\n * @export\n * @class AllocationApi\n * @extends {BaseAPI}\n */\nexport class AllocationApi extends BaseAPI {\n    /**\n     * \n     * @summary Add a new allocation or update an existing one\n     * @param {number} month day of the operation (march 2010 &#x3D;&gt; 201003)\n     * @param {string} categoryId \n     * @param {number} amount \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AllocationApi\n     */\n    public addAllocation(month: number, categoryId: string, amount: number, options?: any) {\n        return AllocationApiFp(this.configuration).addAllocation(month, categoryId, amount, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n/**\n * BudgetApi - axios parameter creator\n * @export\n */\nexport const BudgetApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Add a new budget\n         * @param {string} name name of the new budget\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addBudget: async (name: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'name' is not null or undefined\n            assertParamExists('addBudget', 'name', name)\n            const localVarPath = `/budget`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication accessToken required\n\n            // authentication refreshTokenId required\n\n            if (name !== undefined) {\n                localVarQueryParameter['name'] = name;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Delete budget\n         * @param {number} budgetId id of the budget you want to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteBudget: async (budgetId: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('deleteBudget', 'budgetId', budgetId)\n            const localVarPath = `/budget`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budget_id'] = budgetId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Finds budgets by user\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findBudgetsByUser: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/budget/user`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Update a budget\n         * @param {string} budgetId id of the updated budget\n         * @param {string} newName new name of the new budget\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateBudget: async (budgetId: string, newName: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('updateBudget', 'budgetId', budgetId)\n            // verify required parameter 'newName' is not null or undefined\n            assertParamExists('updateBudget', 'newName', newName)\n            const localVarPath = `/budget`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budget_id'] = budgetId;\n            }\n\n            if (newName !== undefined) {\n                localVarQueryParameter['new_name'] = newName;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * BudgetApi - functional programming interface\n * @export\n */\nexport const BudgetApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = BudgetApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new budget\n         * @param {string} name name of the new budget\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async addBudget(name: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.addBudget(name, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Delete budget\n         * @param {number} budgetId id of the budget you want to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async deleteBudget(budgetId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteBudget(budgetId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Finds budgets by user\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async findBudgetsByUser(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Budget>>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.findBudgetsByUser(options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Update a budget\n         * @param {string} budgetId id of the updated budget\n         * @param {string} newName new name of the new budget\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async updateBudget(budgetId: string, newName: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.updateBudget(budgetId, newName, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n    }\n};\n\n/**\n * BudgetApi - factory interface\n * @export\n */\nexport const BudgetApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = BudgetApiFp(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new budget\n         * @param {string} name name of the new budget\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addBudget(name: string, options?: any): AxiosPromise<string> {\n            return localVarFp.addBudget(name, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Delete budget\n         * @param {number} budgetId id of the budget you want to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteBudget(budgetId: number, options?: any): AxiosPromise<string> {\n            return localVarFp.deleteBudget(budgetId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Finds budgets by user\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findBudgetsByUser(options?: any): AxiosPromise<Array<Budget>> {\n            return localVarFp.findBudgetsByUser(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Update a budget\n         * @param {string} budgetId id of the updated budget\n         * @param {string} newName new name of the new budget\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateBudget(budgetId: string, newName: string, options?: any): AxiosPromise<string> {\n            return localVarFp.updateBudget(budgetId, newName, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * BudgetApi - object-oriented interface\n * @export\n * @class BudgetApi\n * @extends {BaseAPI}\n */\nexport class BudgetApi extends BaseAPI {\n    /**\n     * \n     * @summary Add a new budget\n     * @param {string} name name of the new budget\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof BudgetApi\n     */\n    public addBudget(name: string, options?: any) {\n        return BudgetApiFp(this.configuration).addBudget(name, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Delete budget\n     * @param {number} budgetId id of the budget you want to delete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof BudgetApi\n     */\n    public deleteBudget(budgetId: number, options?: any) {\n        return BudgetApiFp(this.configuration).deleteBudget(budgetId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Finds budgets by user\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof BudgetApi\n     */\n    public findBudgetsByUser(options?: any) {\n        return BudgetApiFp(this.configuration).findBudgetsByUser(options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Update a budget\n     * @param {string} budgetId id of the updated budget\n     * @param {string} newName new name of the new budget\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof BudgetApi\n     */\n    public updateBudget(budgetId: string, newName: string, options?: any) {\n        return BudgetApiFp(this.configuration).updateBudget(budgetId, newName, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n/**\n * BudgetDataApi - axios parameter creator\n * @export\n */\nexport const BudgetDataApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Find data by budget\n         * @param {string} budgetId \n         * @param {number} [startMonth] example : mars 2020 &#x3D; 202003\n         * @param {number} [endMonth] example : mars 2020 &#x3D; 202003\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findBudgetData: async (budgetId: string, startMonth?: number, endMonth?: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('findBudgetData', 'budgetId', budgetId)\n            const localVarPath = `/budget/data`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budget_id'] = budgetId;\n            }\n\n            if (startMonth !== undefined) {\n                localVarQueryParameter['start_month'] = startMonth;\n            }\n\n            if (endMonth !== undefined) {\n                localVarQueryParameter['end_month'] = endMonth;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Find amount on accounts by budget\n         * @param {string} budgetId \n         * @param {number} [month] example : mars 2020 &#x3D; 202003\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findTotalBudgetAmount: async (budgetId: string, month?: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('findTotalBudgetAmount', 'budgetId', budgetId)\n            const localVarPath = `/budget/amount`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budget_id'] = budgetId;\n            }\n\n            if (month !== undefined) {\n                localVarQueryParameter['month'] = month;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * BudgetDataApi - functional programming interface\n * @export\n */\nexport const BudgetDataApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = BudgetDataApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @summary Find data by budget\n         * @param {string} budgetId \n         * @param {number} [startMonth] example : mars 2020 &#x3D; 202003\n         * @param {number} [endMonth] example : mars 2020 &#x3D; 202003\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async findBudgetData(budgetId: string, startMonth?: number, endMonth?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<{ [key: string]: { [key: string]: CategoryData; }; }>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.findBudgetData(budgetId, startMonth, endMonth, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Find amount on accounts by budget\n         * @param {string} budgetId \n         * @param {number} [month] example : mars 2020 &#x3D; 202003\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async findTotalBudgetAmount(budgetId: string, month?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.findTotalBudgetAmount(budgetId, month, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n    }\n};\n\n/**\n * BudgetDataApi - factory interface\n * @export\n */\nexport const BudgetDataApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = BudgetDataApiFp(configuration)\n    return {\n        /**\n         * \n         * @summary Find data by budget\n         * @param {string} budgetId \n         * @param {number} [startMonth] example : mars 2020 &#x3D; 202003\n         * @param {number} [endMonth] example : mars 2020 &#x3D; 202003\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findBudgetData(budgetId: string, startMonth?: number, endMonth?: number, options?: any): AxiosPromise<{ [key: string]: { [key: string]: CategoryData; }; }> {\n            return localVarFp.findBudgetData(budgetId, startMonth, endMonth, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Find amount on accounts by budget\n         * @param {string} budgetId \n         * @param {number} [month] example : mars 2020 &#x3D; 202003\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findTotalBudgetAmount(budgetId: string, month?: number, options?: any): AxiosPromise<number> {\n            return localVarFp.findTotalBudgetAmount(budgetId, month, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * BudgetDataApi - object-oriented interface\n * @export\n * @class BudgetDataApi\n * @extends {BaseAPI}\n */\nexport class BudgetDataApi extends BaseAPI {\n    /**\n     * \n     * @summary Find data by budget\n     * @param {string} budgetId \n     * @param {number} [startMonth] example : mars 2020 &#x3D; 202003\n     * @param {number} [endMonth] example : mars 2020 &#x3D; 202003\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof BudgetDataApi\n     */\n    public findBudgetData(budgetId: string, startMonth?: number, endMonth?: number, options?: any) {\n        return BudgetDataApiFp(this.configuration).findBudgetData(budgetId, startMonth, endMonth, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Find amount on accounts by budget\n     * @param {string} budgetId \n     * @param {number} [month] example : mars 2020 &#x3D; 202003\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof BudgetDataApi\n     */\n    public findTotalBudgetAmount(budgetId: string, month?: number, options?: any) {\n        return BudgetDataApiFp(this.configuration).findTotalBudgetAmount(budgetId, month, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n/**\n * CategoryApi - axios parameter creator\n * @export\n */\nexport const CategoryApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Add a new category\n         * @param {string} name \n         * @param {string} masterCategoryId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addCategory: async (name: string, masterCategoryId: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'name' is not null or undefined\n            assertParamExists('addCategory', 'name', name)\n            // verify required parameter 'masterCategoryId' is not null or undefined\n            assertParamExists('addCategory', 'masterCategoryId', masterCategoryId)\n            const localVarPath = `/category`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (name !== undefined) {\n                localVarQueryParameter['name'] = name;\n            }\n\n            if (masterCategoryId !== undefined) {\n                localVarQueryParameter['master_category_id'] = masterCategoryId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary get categories by budget\n         * @param {string} budgetId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCategoriesByBudget: async (budgetId: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('getCategoriesByBudget', 'budgetId', budgetId)\n            const localVarPath = `/category/budget`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budget_id'] = budgetId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Update a category\n         * @param {string} id \n         * @param {string} [newName] \n         * @param {number} [newMasterCategoryId] \n         * @param {boolean} [newArchived] \n         * @param {boolean} [newDeleted] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateCategory: async (id: string, newName?: string, newMasterCategoryId?: number, newArchived?: boolean, newDeleted?: boolean, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            assertParamExists('updateCategory', 'id', id)\n            const localVarPath = `/category`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (id !== undefined) {\n                localVarQueryParameter['id'] = id;\n            }\n\n            if (newName !== undefined) {\n                localVarQueryParameter['new_name'] = newName;\n            }\n\n            if (newMasterCategoryId !== undefined) {\n                localVarQueryParameter['new_master_category_id'] = newMasterCategoryId;\n            }\n\n            if (newArchived !== undefined) {\n                localVarQueryParameter['new_archived'] = newArchived;\n            }\n\n            if (newDeleted !== undefined) {\n                localVarQueryParameter['new_deleted'] = newDeleted;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * CategoryApi - functional programming interface\n * @export\n */\nexport const CategoryApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = CategoryApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new category\n         * @param {string} name \n         * @param {string} masterCategoryId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async addCategory(name: string, masterCategoryId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.addCategory(name, masterCategoryId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary get categories by budget\n         * @param {string} budgetId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getCategoriesByBudget(budgetId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Category>>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.getCategoriesByBudget(budgetId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Update a category\n         * @param {string} id \n         * @param {string} [newName] \n         * @param {number} [newMasterCategoryId] \n         * @param {boolean} [newArchived] \n         * @param {boolean} [newDeleted] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async updateCategory(id: string, newName?: string, newMasterCategoryId?: number, newArchived?: boolean, newDeleted?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.updateCategory(id, newName, newMasterCategoryId, newArchived, newDeleted, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n    }\n};\n\n/**\n * CategoryApi - factory interface\n * @export\n */\nexport const CategoryApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = CategoryApiFp(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new category\n         * @param {string} name \n         * @param {string} masterCategoryId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addCategory(name: string, masterCategoryId: string, options?: any): AxiosPromise<string> {\n            return localVarFp.addCategory(name, masterCategoryId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary get categories by budget\n         * @param {string} budgetId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCategoriesByBudget(budgetId: string, options?: any): AxiosPromise<Array<Category>> {\n            return localVarFp.getCategoriesByBudget(budgetId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Update a category\n         * @param {string} id \n         * @param {string} [newName] \n         * @param {number} [newMasterCategoryId] \n         * @param {boolean} [newArchived] \n         * @param {boolean} [newDeleted] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateCategory(id: string, newName?: string, newMasterCategoryId?: number, newArchived?: boolean, newDeleted?: boolean, options?: any): AxiosPromise<string> {\n            return localVarFp.updateCategory(id, newName, newMasterCategoryId, newArchived, newDeleted, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * CategoryApi - object-oriented interface\n * @export\n * @class CategoryApi\n * @extends {BaseAPI}\n */\nexport class CategoryApi extends BaseAPI {\n    /**\n     * \n     * @summary Add a new category\n     * @param {string} name \n     * @param {string} masterCategoryId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CategoryApi\n     */\n    public addCategory(name: string, masterCategoryId: string, options?: any) {\n        return CategoryApiFp(this.configuration).addCategory(name, masterCategoryId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary get categories by budget\n     * @param {string} budgetId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CategoryApi\n     */\n    public getCategoriesByBudget(budgetId: string, options?: any) {\n        return CategoryApiFp(this.configuration).getCategoriesByBudget(budgetId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Update a category\n     * @param {string} id \n     * @param {string} [newName] \n     * @param {number} [newMasterCategoryId] \n     * @param {boolean} [newArchived] \n     * @param {boolean} [newDeleted] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CategoryApi\n     */\n    public updateCategory(id: string, newName?: string, newMasterCategoryId?: number, newArchived?: boolean, newDeleted?: boolean, options?: any) {\n        return CategoryApiFp(this.configuration).updateCategory(id, newName, newMasterCategoryId, newArchived, newDeleted, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n/**\n * MasterCategoryApi - axios parameter creator\n * @export\n */\nexport const MasterCategoryApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Add a new master category\n         * @param {string} name \n         * @param {string} budgetId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addMasterCategory: async (name: string, budgetId: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'name' is not null or undefined\n            assertParamExists('addMasterCategory', 'name', name)\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('addMasterCategory', 'budgetId', budgetId)\n            const localVarPath = `/mcategory`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (name !== undefined) {\n                localVarQueryParameter['name'] = name;\n            }\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budget_id'] = budgetId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary get master categories by budget\n         * @param {string} budgetId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getMasterCategoriesByBudget: async (budgetId: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('getMasterCategoriesByBudget', 'budgetId', budgetId)\n            const localVarPath = `/mcategory/budget`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budget_id'] = budgetId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Update master category\n         * @param {string} id \n         * @param {string} [newName] \n         * @param {boolean} [newArchived] \n         * @param {boolean} [newDeleted] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateMasterCategory: async (id: string, newName?: string, newArchived?: boolean, newDeleted?: boolean, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            assertParamExists('updateMasterCategory', 'id', id)\n            const localVarPath = `/mcategory`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (id !== undefined) {\n                localVarQueryParameter['id'] = id;\n            }\n\n            if (newName !== undefined) {\n                localVarQueryParameter['new_name'] = newName;\n            }\n\n            if (newArchived !== undefined) {\n                localVarQueryParameter['new_archived'] = newArchived;\n            }\n\n            if (newDeleted !== undefined) {\n                localVarQueryParameter['new_deleted'] = newDeleted;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * MasterCategoryApi - functional programming interface\n * @export\n */\nexport const MasterCategoryApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = MasterCategoryApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new master category\n         * @param {string} name \n         * @param {string} budgetId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async addMasterCategory(name: string, budgetId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.addMasterCategory(name, budgetId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary get master categories by budget\n         * @param {string} budgetId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getMasterCategoriesByBudget(budgetId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<MasterCategory>>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.getMasterCategoriesByBudget(budgetId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Update master category\n         * @param {string} id \n         * @param {string} [newName] \n         * @param {boolean} [newArchived] \n         * @param {boolean} [newDeleted] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async updateMasterCategory(id: string, newName?: string, newArchived?: boolean, newDeleted?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.updateMasterCategory(id, newName, newArchived, newDeleted, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n    }\n};\n\n/**\n * MasterCategoryApi - factory interface\n * @export\n */\nexport const MasterCategoryApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = MasterCategoryApiFp(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new master category\n         * @param {string} name \n         * @param {string} budgetId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addMasterCategory(name: string, budgetId: string, options?: any): AxiosPromise<string> {\n            return localVarFp.addMasterCategory(name, budgetId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary get master categories by budget\n         * @param {string} budgetId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getMasterCategoriesByBudget(budgetId: string, options?: any): AxiosPromise<Array<MasterCategory>> {\n            return localVarFp.getMasterCategoriesByBudget(budgetId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Update master category\n         * @param {string} id \n         * @param {string} [newName] \n         * @param {boolean} [newArchived] \n         * @param {boolean} [newDeleted] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateMasterCategory(id: string, newName?: string, newArchived?: boolean, newDeleted?: boolean, options?: any): AxiosPromise<string> {\n            return localVarFp.updateMasterCategory(id, newName, newArchived, newDeleted, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * MasterCategoryApi - object-oriented interface\n * @export\n * @class MasterCategoryApi\n * @extends {BaseAPI}\n */\nexport class MasterCategoryApi extends BaseAPI {\n    /**\n     * \n     * @summary Add a new master category\n     * @param {string} name \n     * @param {string} budgetId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof MasterCategoryApi\n     */\n    public addMasterCategory(name: string, budgetId: string, options?: any) {\n        return MasterCategoryApiFp(this.configuration).addMasterCategory(name, budgetId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary get master categories by budget\n     * @param {string} budgetId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof MasterCategoryApi\n     */\n    public getMasterCategoriesByBudget(budgetId: string, options?: any) {\n        return MasterCategoryApiFp(this.configuration).getMasterCategoriesByBudget(budgetId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Update master category\n     * @param {string} id \n     * @param {string} [newName] \n     * @param {boolean} [newArchived] \n     * @param {boolean} [newDeleted] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof MasterCategoryApi\n     */\n    public updateMasterCategory(id: string, newName?: string, newArchived?: boolean, newDeleted?: boolean, options?: any) {\n        return MasterCategoryApiFp(this.configuration).updateMasterCategory(id, newName, newArchived, newDeleted, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n/**\n * OperationApi - axios parameter creator\n * @export\n */\nexport const OperationApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Add a new operation\n         * @param {string} accountId \n         * @param {number} [day] day of the operation (2 march 2010 &#x3D;&gt; 20100302)\n         * @param {string} [categoryId] \n         * @param {number} [amount] \n         * @param {string} [memo] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addOperation: async (accountId: string, day?: number, categoryId?: string, amount?: number, memo?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'accountId' is not null or undefined\n            assertParamExists('addOperation', 'accountId', accountId)\n            const localVarPath = `/operation`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (accountId !== undefined) {\n                localVarQueryParameter['account_id'] = accountId;\n            }\n\n            if (day !== undefined) {\n                localVarQueryParameter['day'] = day;\n            }\n\n            if (categoryId !== undefined) {\n                localVarQueryParameter['category_id'] = categoryId;\n            }\n\n            if (amount !== undefined) {\n                localVarQueryParameter['amount'] = amount;\n            }\n\n            if (memo !== undefined) {\n                localVarQueryParameter['memo'] = memo;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Delete operation\n         * @param {string} operationId id of the operation you want to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteOperation: async (operationId: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'operationId' is not null or undefined\n            assertParamExists('deleteOperation', 'operationId', operationId)\n            const localVarPath = `/operation`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (operationId !== undefined) {\n                localVarQueryParameter['operation_id'] = operationId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Find operation by account\n         * @param {string} accountId id of the account whose operations you want to retrieve\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findOperationsByAccount: async (accountId: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'accountId' is not null or undefined\n            assertParamExists('findOperationsByAccount', 'accountId', accountId)\n            const localVarPath = `/operation/account`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (accountId !== undefined) {\n                localVarQueryParameter['account_id'] = accountId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Find operation by budget\n         * @param {string} accountId id of the budget whose operations you want to retrieve\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findOperationsByBudget: async (accountId: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'accountId' is not null or undefined\n            assertParamExists('findOperationsByBudget', 'accountId', accountId)\n            const localVarPath = `/operation/budget`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (accountId !== undefined) {\n                localVarQueryParameter['account_id'] = accountId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Update an operation\n         * @param {string} operationId \n         * @param {string} [newAccountId] \n         * @param {number} [newDay] day of the operation (2 march 2010 &#x3D;&gt; 20100302)\n         * @param {string} [newCategoryId] \n         * @param {number} [newAmount] \n         * @param {string} [newMemo] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateOperation: async (operationId: string, newAccountId?: string, newDay?: number, newCategoryId?: string, newAmount?: number, newMemo?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'operationId' is not null or undefined\n            assertParamExists('updateOperation', 'operationId', operationId)\n            const localVarPath = `/operation`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (operationId !== undefined) {\n                localVarQueryParameter['operation_id'] = operationId;\n            }\n\n            if (newAccountId !== undefined) {\n                localVarQueryParameter['new_account_id'] = newAccountId;\n            }\n\n            if (newDay !== undefined) {\n                localVarQueryParameter['new_day'] = newDay;\n            }\n\n            if (newCategoryId !== undefined) {\n                localVarQueryParameter['new_category_id'] = newCategoryId;\n            }\n\n            if (newAmount !== undefined) {\n                localVarQueryParameter['new_amount'] = newAmount;\n            }\n\n            if (newMemo !== undefined) {\n                localVarQueryParameter['new_memo'] = newMemo;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * OperationApi - functional programming interface\n * @export\n */\nexport const OperationApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = OperationApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new operation\n         * @param {string} accountId \n         * @param {number} [day] day of the operation (2 march 2010 &#x3D;&gt; 20100302)\n         * @param {string} [categoryId] \n         * @param {number} [amount] \n         * @param {string} [memo] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async addOperation(accountId: string, day?: number, categoryId?: string, amount?: number, memo?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Operation>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.addOperation(accountId, day, categoryId, amount, memo, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Delete operation\n         * @param {string} operationId id of the operation you want to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async deleteOperation(operationId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteOperation(operationId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Find operation by account\n         * @param {string} accountId id of the account whose operations you want to retrieve\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async findOperationsByAccount(accountId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Operation>>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.findOperationsByAccount(accountId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Find operation by budget\n         * @param {string} accountId id of the budget whose operations you want to retrieve\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async findOperationsByBudget(accountId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Operation>>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.findOperationsByBudget(accountId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Update an operation\n         * @param {string} operationId \n         * @param {string} [newAccountId] \n         * @param {number} [newDay] day of the operation (2 march 2010 &#x3D;&gt; 20100302)\n         * @param {string} [newCategoryId] \n         * @param {number} [newAmount] \n         * @param {string} [newMemo] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async updateOperation(operationId: string, newAccountId?: string, newDay?: number, newCategoryId?: string, newAmount?: number, newMemo?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Operation>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.updateOperation(operationId, newAccountId, newDay, newCategoryId, newAmount, newMemo, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n    }\n};\n\n/**\n * OperationApi - factory interface\n * @export\n */\nexport const OperationApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = OperationApiFp(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new operation\n         * @param {string} accountId \n         * @param {number} [day] day of the operation (2 march 2010 &#x3D;&gt; 20100302)\n         * @param {string} [categoryId] \n         * @param {number} [amount] \n         * @param {string} [memo] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addOperation(accountId: string, day?: number, categoryId?: string, amount?: number, memo?: string, options?: any): AxiosPromise<Operation> {\n            return localVarFp.addOperation(accountId, day, categoryId, amount, memo, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Delete operation\n         * @param {string} operationId id of the operation you want to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteOperation(operationId: string, options?: any): AxiosPromise<string> {\n            return localVarFp.deleteOperation(operationId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Find operation by account\n         * @param {string} accountId id of the account whose operations you want to retrieve\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findOperationsByAccount(accountId: string, options?: any): AxiosPromise<Array<Operation>> {\n            return localVarFp.findOperationsByAccount(accountId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Find operation by budget\n         * @param {string} accountId id of the budget whose operations you want to retrieve\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findOperationsByBudget(accountId: string, options?: any): AxiosPromise<Array<Operation>> {\n            return localVarFp.findOperationsByBudget(accountId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Update an operation\n         * @param {string} operationId \n         * @param {string} [newAccountId] \n         * @param {number} [newDay] day of the operation (2 march 2010 &#x3D;&gt; 20100302)\n         * @param {string} [newCategoryId] \n         * @param {number} [newAmount] \n         * @param {string} [newMemo] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateOperation(operationId: string, newAccountId?: string, newDay?: number, newCategoryId?: string, newAmount?: number, newMemo?: string, options?: any): AxiosPromise<Operation> {\n            return localVarFp.updateOperation(operationId, newAccountId, newDay, newCategoryId, newAmount, newMemo, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * OperationApi - object-oriented interface\n * @export\n * @class OperationApi\n * @extends {BaseAPI}\n */\nexport class OperationApi extends BaseAPI {\n    /**\n     * \n     * @summary Add a new operation\n     * @param {string} accountId \n     * @param {number} [day] day of the operation (2 march 2010 &#x3D;&gt; 20100302)\n     * @param {string} [categoryId] \n     * @param {number} [amount] \n     * @param {string} [memo] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OperationApi\n     */\n    public addOperation(accountId: string, day?: number, categoryId?: string, amount?: number, memo?: string, options?: any) {\n        return OperationApiFp(this.configuration).addOperation(accountId, day, categoryId, amount, memo, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Delete operation\n     * @param {string} operationId id of the operation you want to delete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OperationApi\n     */\n    public deleteOperation(operationId: string, options?: any) {\n        return OperationApiFp(this.configuration).deleteOperation(operationId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Find operation by account\n     * @param {string} accountId id of the account whose operations you want to retrieve\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OperationApi\n     */\n    public findOperationsByAccount(accountId: string, options?: any) {\n        return OperationApiFp(this.configuration).findOperationsByAccount(accountId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Find operation by budget\n     * @param {string} accountId id of the budget whose operations you want to retrieve\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OperationApi\n     */\n    public findOperationsByBudget(accountId: string, options?: any) {\n        return OperationApiFp(this.configuration).findOperationsByBudget(accountId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Update an operation\n     * @param {string} operationId \n     * @param {string} [newAccountId] \n     * @param {number} [newDay] day of the operation (2 march 2010 &#x3D;&gt; 20100302)\n     * @param {string} [newCategoryId] \n     * @param {number} [newAmount] \n     * @param {string} [newMemo] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OperationApi\n     */\n    public updateOperation(operationId: string, newAccountId?: string, newDay?: number, newCategoryId?: string, newAmount?: number, newMemo?: string, options?: any) {\n        return OperationApiFp(this.configuration).updateOperation(operationId, newAccountId, newDay, newCategoryId, newAmount, newMemo, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n/**\n * PersonApi - axios parameter creator\n * @export\n */\nexport const PersonApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary get billing portal URL, new subscription if not subscribed, billing management if already subscribed\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createBillingPortalSession: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/billing`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication accessToken required\n\n            // authentication refreshTokenId required\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Create a person\n         * @param {string} name \n         * @param {string} password \n         * @param {string} email \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPerson: async (name: string, password: string, email: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'name' is not null or undefined\n            assertParamExists('createPerson', 'name', name)\n            // verify required parameter 'password' is not null or undefined\n            assertParamExists('createPerson', 'password', password)\n            // verify required parameter 'email' is not null or undefined\n            assertParamExists('createPerson', 'email', email)\n            const localVarPath = `/person`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (name !== undefined) {\n                localVarQueryParameter['name'] = name;\n            }\n\n            if (password !== undefined) {\n                localVarQueryParameter['password'] = password;\n            }\n\n            if (email !== undefined) {\n                localVarQueryParameter['email'] = email;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Login\n         * @param {string} email \n         * @param {string} password \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createSession: async (email: string, password: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'email' is not null or undefined\n            assertParamExists('createSession', 'email', email)\n            // verify required parameter 'password' is not null or undefined\n            assertParamExists('createSession', 'password', password)\n            const localVarPath = `/login`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (email !== undefined) {\n                localVarQueryParameter['email'] = email;\n            }\n\n            if (password !== undefined) {\n                localVarQueryParameter['password'] = password;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Logout\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteSession: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/logout`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication accessToken required\n\n            // authentication refreshTokenId required\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * PersonApi - functional programming interface\n * @export\n */\nexport const PersonApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = PersonApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @summary get billing portal URL, new subscription if not subscribed, billing management if already subscribed\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async createBillingPortalSession(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.createBillingPortalSession(options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Create a person\n         * @param {string} name \n         * @param {string} password \n         * @param {string} email \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async createPerson(name: string, password: string, email: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.createPerson(name, password, email, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Login\n         * @param {string} email \n         * @param {string} password \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async createSession(email: string, password: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.createSession(email, password, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Logout\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async deleteSession(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSession(options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n    }\n};\n\n/**\n * PersonApi - factory interface\n * @export\n */\nexport const PersonApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = PersonApiFp(configuration)\n    return {\n        /**\n         * \n         * @summary get billing portal URL, new subscription if not subscribed, billing management if already subscribed\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createBillingPortalSession(options?: any): AxiosPromise<string> {\n            return localVarFp.createBillingPortalSession(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Create a person\n         * @param {string} name \n         * @param {string} password \n         * @param {string} email \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPerson(name: string, password: string, email: string, options?: any): AxiosPromise<string> {\n            return localVarFp.createPerson(name, password, email, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Login\n         * @param {string} email \n         * @param {string} password \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createSession(email: string, password: string, options?: any): AxiosPromise<string> {\n            return localVarFp.createSession(email, password, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Logout\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteSession(options?: any): AxiosPromise<string> {\n            return localVarFp.deleteSession(options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * PersonApi - object-oriented interface\n * @export\n * @class PersonApi\n * @extends {BaseAPI}\n */\nexport class PersonApi extends BaseAPI {\n    /**\n     * \n     * @summary get billing portal URL, new subscription if not subscribed, billing management if already subscribed\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PersonApi\n     */\n    public createBillingPortalSession(options?: any) {\n        return PersonApiFp(this.configuration).createBillingPortalSession(options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Create a person\n     * @param {string} name \n     * @param {string} password \n     * @param {string} email \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PersonApi\n     */\n    public createPerson(name: string, password: string, email: string, options?: any) {\n        return PersonApiFp(this.configuration).createPerson(name, password, email, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Login\n     * @param {string} email \n     * @param {string} password \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PersonApi\n     */\n    public createSession(email: string, password: string, options?: any) {\n        return PersonApiFp(this.configuration).createSession(email, password, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Logout\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PersonApi\n     */\n    public deleteSession(options?: any) {\n        return PersonApiFp(this.configuration).deleteSession(options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n","import { PersonApi, AccountApi, BudgetApi, AllocationApi, BudgetDataApi, OperationApi, CategoryApi, MasterCategoryApi } from './openApi/api'\n\nexport const personApi = new PersonApi()\nexport const budgetApi = new BudgetApi()\nexport const budgetDataApi = new BudgetDataApi()\nexport const accountApi = new AccountApi()\nexport const operationApi = new OperationApi()\nexport const allocationApi = new AllocationApi()\nexport const categoryApi = new CategoryApi()\nexport const masterCategoryApi = new MasterCategoryApi()\n","export default class Time {\n  public static getCurrentMonth (): number {\n    const dateTime = new Date()\n    const year = dateTime.getFullYear()\n    const month = dateTime.getMonth() + 1 // by default from 0 to 11\n    return year * 100 + month\n  }\n\n  public static getNextMonth (monthAsInt: number): number {\n    let month = monthAsInt % 100\n    let year = (monthAsInt - month) / 100\n    if (month < 12) {\n      month += 1\n    } else {\n      year += 1\n      month = 1\n    }\n    return year * 100 + month\n  }\n\n  public static getLastMonth (monthAsInt: number): number {\n    let month = monthAsInt % 100\n    let year = (monthAsInt - month) / 100\n    if (month > 1) {\n      month -= 1\n    } else {\n      year -= 1\n      month = 12\n    }\n    return year * 100 + month\n  }\n\n  public static getCurrentDay (): number {\n    return this.getDayFromDate(this.getCurrentDate())\n  }\n\n  public static getCurrentDate (): Date {\n    return new Date()\n  }\n\n  public static getCurrentDateString (): string {\n    return this.formatDate(this.getCurrentDate())\n  }\n\n  public static getMonthAsDate (monthAsInt: number): Date {\n    const date = new Date()\n    const month = monthAsInt % 100\n    const year = (monthAsInt - month) / 100\n    date.setMonth(month - 1)\n    date.setFullYear(year)\n    return date\n  }\n\n  public static getDayFromDate (dateTime: Date): number {\n    const year = dateTime.getFullYear()\n    const month = dateTime.getMonth() + 1 // because the form count month from 0 - 11\n    const day = dateTime.getDate()\n    return year * 10000 + month * 100 + day\n  }\n\n  public static getDayFromDateString (dateString: string): number {\n    const date = new Date(dateString)\n    return this.getDayFromDate(date)\n  }\n\n  public static getDateFromDay (dayAsInt: number): Date {\n    const day = dayAsInt % 100\n    const monthAsInt = ((dayAsInt - day) / 100)\n    const date = this.getMonthAsDate(monthAsInt)\n    date.setDate(day)\n    return date\n  }\n\n  public static getDateStringFromDay (dayAsInt: number): string {\n    const date = this.getDateFromDay(dayAsInt)\n    return this.formatDate(date)\n  }\n\n  public static monthIsThisYear (monthAsInt: number): boolean {\n    const year = this.getMonthAsDate(monthAsInt).getFullYear()\n    const currentYear = new Date().getFullYear()\n    return year === currentYear\n  }\n\n  private static formatDate (date: Date): string {\n    return date.toISOString().split('T')[0]\n  }\n}\n","import { Budget, Account } from '@/model/model'\nimport { accountApi } from '@/services/api/apis'\nimport StoreHandler from '@/store/StoreHandler'\nimport Time from '@/utils/Time'\nimport { redirectOnApiError } from '@/router'\nimport { Store } from 'vuex'\nimport { StoreState } from '@/store/index'\n\nexport default class AccountService {\n  public static async getAccounts (budget: Budget): Promise<Account[]> {\n    const data: Account[] = []\n    if (budget.id) {\n      const response = await accountApi.findAccountsByBudget(budget.id)\n      return response.data\n    }\n    return data\n  }\n\n  public static async createAccount (store: Store<StoreState>, budget: Budget, name: string, amount: number) {\n    await accountApi.addAccount(budget.id, name, amount, Time.getCurrentDay()).then(\n      (response) => {\n        StoreHandler.updateAccounts(store)\n      }\n    )\n  }\n\n  public static async updateAccount (store: Store<StoreState>, id: string, newName: string) {\n    await accountApi.updateAccount(id, newName).then(\n      (response) => {\n        StoreHandler.updateAccounts(store)\n      }\n    )\n  }\n}\n","import { Budget } from '@/model/model'\nimport { budgetApi } from './api/apis'\nimport { redirectOnApiError } from '@/router'\nimport { AxiosError, AxiosResponse } from 'axios'\n\nexport default class BudgetService {\n  public static async getDefaultBudget (): Promise<Budget> {\n    return budgetApi.findBudgetsByUser()\n      .then((r: AxiosResponse) => {\n        return r.data[0]\n      })\n      .catch((e: AxiosError) => {\n        redirectOnApiError(e)\n      })\n  }\n}\n","import { Budget, Category, MasterCategory } from '@/model/model'\nimport { categoryApi } from '@/services/api/apis'\nimport { redirectOnApiError } from '@/router'\n\nexport default class CategoryService {\n  public static async createCategory (name: string, masterCategory: MasterCategory) {\n    const response = await categoryApi.addCategory(name, masterCategory.id)\n  }\n\n  public static async updateCategory (categoryId: string, newName: string) {\n    const response = await categoryApi.updateCategory(categoryId, newName)\n  }\n\n  public static async archiveCategory (categoryId: string) {\n    const response = await categoryApi.updateCategory(categoryId, undefined, undefined, true)\n  }\n\n  public static async unarchiveCategory (categoryId: string) {\n    const response = await categoryApi.updateCategory(categoryId, undefined, undefined, false)\n  }\n\n  public static async getCategories (budget: Budget): Promise<Category[]> {\n    const data: Category[] = []\n    if (budget.id) {\n      const response = await categoryApi.getCategoriesByBudget(budget.id)\n      return response.data\n    }\n    return data\n  }\n}\n","import { Budget, MasterCategory } from '@/model/model'\nimport { masterCategoryApi } from '@/services/api/apis'\nimport { redirectOnApiError } from '@/router'\n\nexport default class MasterCategoryService {\n  public static async createMasterCategory (name: string, budget: Budget) {\n    await masterCategoryApi.addMasterCategory(name, budget.id)\n  }\n\n  public static async renameMasterCategory (masterCategoryId: string, newName: string) {\n    const response = await masterCategoryApi.updateMasterCategory(masterCategoryId, newName)\n  }\n\n  public static async archiveMasterCategory (masterCategoryId: string) {\n    const response = await masterCategoryApi.updateMasterCategory(masterCategoryId, undefined, true)\n  }\n\n  public static async unarchiveMasterCategory (masterCategoryId: string) {\n    const response = await masterCategoryApi.updateMasterCategory(masterCategoryId, undefined, false)\n  }\n\n  public static async getMasterCategories (budget: Budget): Promise<MasterCategory[]> {\n    const data: MasterCategory[] = []\n    if (budget.id) {\n      const response = await masterCategoryApi.getMasterCategoriesByBudget(budget.id)\n      return response.data\n    }\n    return data\n  }\n}\n","import { Budget, Account, Category, MasterCategory } from '@/model/model'\nimport AccountService from '@/services/AccountService'\nimport BudgetService from '@/services/BudgetService'\nimport CategoryService from '@/services/CategoryService'\nimport MasterCategoryService from '@/services/MasterCategoryService'\nimport { StoreState } from '@/store/index'\nimport { Store } from 'vuex'\n\nexport default class StoreHandler {\n  public static async initStore (store: Store<StoreState>) {\n    await this.initBudget(store)\n  }\n\n  public static resetStore (store: Store<StoreState>) {\n    store.dispatch('updateBudget', null)\n    store.dispatch('updateAccounts', [])\n    store.dispatch('updateCategories', [])\n    store.dispatch('updateMasterCategories', [])\n    store.dispatch('updateStoreLoaded', false)\n  }\n\n  public static async updateOnBudgetChange (store: Store<StoreState>) {\n    this.updateAccounts(store)\n    this.updateMasterCategories(store)\n    this.updateCategories(store)\n    store.dispatch('updateStoreLoaded', true)\n  }\n\n  public static async updateAccounts (store: Store<StoreState>) {\n    if (store.state.budget) {\n      AccountService.getAccounts(store.state.budget).then(\n        (accounts: Account[]) => {\n          store.dispatch('updateAccounts', accounts)\n        }\n      )\n    }\n  }\n\n  public static async updateCategories (store: Store<StoreState>) {\n    if (store.state.budget) {\n      CategoryService.getCategories(store.state.budget).then(\n        (categories: Category[]) => {\n          store.dispatch('updateCategories', categories)\n        }\n      )\n    }\n  }\n\n  public static async updateMasterCategories (store: Store<StoreState>) {\n    if (store.state.budget) {\n      MasterCategoryService.getMasterCategories(store.state.budget).then(\n        (masterCategories: MasterCategory[]) => {\n          store.dispatch('updateMasterCategories', masterCategories)\n        }\n      )\n    }\n  }\n\n  public static async initBudget (store: Store<StoreState>) {\n    BudgetService.getDefaultBudget().then(\n      (budget: Budget) => {\n        store.dispatch('updateBudget', budget)\n      }\n    )\n  }\n\n  public static getCategoryById (store: Store<StoreState>, categoryId: string): Category | null {\n    for (const category of store.state.categories) {\n      if (category.id === categoryId) {\n        return category\n      }\n    }\n    return null\n  }\n\n  public static getCategoriesByMasterCategory (store: Store<StoreState>, masterCategory: MasterCategory, archived: boolean): Category[] {\n    const categories: Category[] = []\n    for (const category of store.state.categories) {\n      if (category.masterCategoryId === masterCategory.id && category.archived === archived) {\n        categories.push(category)\n      }\n    }\n    return categories\n  }\n\n  public static getCategoriesByArchivedStatus (store: Store<StoreState>, archived: boolean): Category[] {\n    const categories: Category[] = []\n    for (const category of store.state.categories) {\n      if (category.archived === archived) {\n        categories.push(category)\n      }\n    }\n    return categories\n  }\n}\n","import { createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent } from \"vue\"\n\nconst _hoisted_1 = {\n  id: \"budgetCmpt\",\n  class: \"container-fluid col-12 offset-0 col-sm-10 offset-sm-1 col-md-8 offset-md-2 col-lg-6 offset-lg-1 col-xl-5 offset-xl-2\"\n}\nconst _hoisted_2 = { class: \"fixed\" }\nconst _hoisted_3 = { id: \"budgetHeader\" }\nconst _hoisted_4 = { class: \"row date\" }\nconst _hoisted_5 = { class: \"col-2 d-flex justify-content-center\" }\nconst _hoisted_6 = { class: \"month\" }\nconst _hoisted_7 = { key: 0 }\nconst _hoisted_8 = {\n  key: 0,\n  class: \"toBeBudgeted\"\n}\nconst _hoisted_9 = {\n  key: 1,\n  class: \"toBePulledOut\"\n}\nconst _hoisted_10 = { class: \"col-2 d-flex justify-content-center\" }\nconst _hoisted_11 = {\n  id: \"totalTable\",\n  class: \"table\"\n}\nconst _hoisted_12 = /*#__PURE__*/_createVNode(\"th\", { class: \"col-6 name\" }, null, -1)\nconst _hoisted_13 = { class: \"col-2 allocated\" }\nconst _hoisted_14 = { class: \"col-2 spent\" }\nconst _hoisted_15 = { class: \"col-2 available\" }\nconst _hoisted_16 = { class: \"name\" }\nconst _hoisted_17 = { class: \"allocated\" }\nconst _hoisted_18 = { class: \"spent\" }\nconst _hoisted_19 = { class: \"available\" }\nconst _hoisted_20 = { class: \"scrollable\" }\nconst _hoisted_21 = { id: \"budgetTables\" }\nconst _hoisted_22 = /*#__PURE__*/_createVNode(\"div\", { class: \"rectangleTop\" }, null, -1)\nconst _hoisted_23 = { class: \"budget-tools\" }\nconst _hoisted_24 = { class: \"tooltiped\" }\nconst _hoisted_25 = { class: \"tooltiptext\" }\nconst _hoisted_26 = {\n  key: 0,\n  type: \"button\"\n}\nconst _hoisted_27 = {\n  key: 1,\n  type: \"button\"\n}\nconst _hoisted_28 = {\n  key: 0,\n  id: \"archive_section\"\n}\nconst _hoisted_29 = { class: \"title\" }\nconst _hoisted_30 = /*#__PURE__*/_createVNode(\"div\", { class: \"rectangleBottom\" }, null, -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_master_category_cmpt = _resolveComponent(\"master-category-cmpt\")\n\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(\"div\", _hoisted_2, [\n      _createVNode(\"div\", _hoisted_3, [\n        _createVNode(\"div\", _hoisted_4, [\n          _createVNode(\"div\", _hoisted_5, [\n            _createVNode(\"button\", {\n              type: \"button\",\n              class: \"btn fas fa-chevron-left\",\n              onClick: _cache[1] || (_cache[1] = ($event: any) => (this.goToLastMonth()))\n            })\n          ]),\n          _createVNode(\"div\", {\n            class: [\"col-8 date-label\", this.toBeBudgetedClass]\n          }, [\n            _createVNode(\"p\", _hoisted_6, [\n              _createTextVNode(_toDisplayString(_ctx.$d(this.getMonthAsDate(_ctx.budgetMonth), 'monthString')) + \" \", 1),\n              (!this.isThisYear)\n                ? (_openBlock(), _createBlock(\"span\", _hoisted_7, _toDisplayString(_ctx.$d(this.getMonthAsDate(_ctx.budgetMonth), 'year')), 1))\n                : _createCommentVNode(\"\", true)\n            ]),\n            (this.toBeBudgeted > 0)\n              ? (_openBlock(), _createBlock(\"p\", _hoisted_8, _toDisplayString(_ctx.getEurosAmount(this.toBeBudgeted)) + \" € \" + _toDisplayString(_ctx.$t('TO_BE_BUDGETED')), 1))\n              : (this.toBeBudgeted < 0)\n                ? (_openBlock(), _createBlock(\"p\", _hoisted_9, _toDisplayString(_ctx.getEurosAmount(-1*this.toBeBudgeted)) + \" € \" + _toDisplayString(_ctx.$t('TO_BE_PULLED_OUT')), 1))\n                : _createCommentVNode(\"\", true)\n          ], 2),\n          _createVNode(\"div\", _hoisted_10, [\n            _createVNode(\"button\", {\n              type: \"button\",\n              class: \"btn fas fa-chevron-right\",\n              onClick: _cache[2] || (_cache[2] = ($event: any) => (this.goToNextMonth()))\n            })\n          ])\n        ]),\n        _createVNode(\"table\", _hoisted_11, [\n          _createVNode(\"tr\", null, [\n            _hoisted_12,\n            _createVNode(\"th\", _hoisted_13, [\n              _createVNode(\"div\", null, _toDisplayString(_ctx.$t(\"ALLOCATED\")), 1)\n            ]),\n            _createVNode(\"th\", _hoisted_14, [\n              _createVNode(\"div\", null, _toDisplayString(_ctx.$t(\"SPENT\")), 1)\n            ]),\n            _createVNode(\"th\", _hoisted_15, [\n              _createVNode(\"div\", null, _toDisplayString(_ctx.$t(\"AVAILABLE\")), 1)\n            ])\n          ]),\n          _createVNode(\"tbody\", null, [\n            _createVNode(\"tr\", null, [\n              _createVNode(\"td\", _hoisted_16, [\n                _createVNode(\"div\", null, _toDisplayString(_ctx.$t(\"TOTAL\")), 1)\n              ]),\n              _createVNode(\"td\", _hoisted_17, _toDisplayString(_ctx.getEurosAmount(this.totalBudgetData.allocated)), 1),\n              _createVNode(\"td\", _hoisted_18, _toDisplayString(_ctx.getEurosAmount(this.totalBudgetData.spent)), 1),\n              _createVNode(\"td\", _hoisted_19, _toDisplayString(_ctx.getEurosAmount(this.totalBudgetData.available)), 1)\n            ])\n          ])\n        ])\n      ])\n    ]),\n    _createVNode(\"div\", _hoisted_20, [\n      _createVNode(\"div\", _hoisted_21, [\n        _hoisted_22,\n        (_openBlock(true), _createBlock(_Fragment, null, _renderList(this.$store.state.masterCategories, (masterCategory) => {\n          return (_openBlock(), _createBlock(\"table\", {\n            class: \"budgetTable table\",\n            key: masterCategory\n          }, [\n            _createVNode(_component_master_category_cmpt, {\n              onUpdateAllocation: _ctx.updateAllocation,\n              masterCategory: masterCategory,\n              categoryDataList: this.categoryDataList\n            }, null, 8, [\"onUpdateAllocation\", \"masterCategory\", \"categoryDataList\"])\n          ]))\n        }), 128)),\n        _createVNode(\"div\", _hoisted_23, [\n          _createVNode(\"div\", null, [\n            _createVNode(\"span\", {\n              type: \"button\",\n              onClick: _cache[3] || (_cache[3] = ($event: any) => (this.createMasterCategory()))\n            }, \" > \" + _toDisplayString(_ctx.$t(\"ADD_MASTER_CATEGORY\")), 1)\n          ]),\n          _createVNode(\"div\", null, [\n            _createVNode(\"span\", _hoisted_24, [\n              _createTextVNode(\" > \" + _toDisplayString(_ctx.$t(\"ADD_CATEGORY\")), 1),\n              _createVNode(\"span\", _hoisted_25, _toDisplayString(_ctx.$t(\"CLICK_ON_THE_MASTER_CATEGORY\")), 1)\n            ])\n          ]),\n          _createVNode(\"div\", {\n            onClick: _cache[4] || (_cache[4] = ($event: any) => (this.archiveVisible = !this.archiveVisible))\n          }, [\n            (this.archiveVisible)\n              ? (_openBlock(), _createBlock(\"span\", _hoisted_26, \" > \" + _toDisplayString(_ctx.$t(\"HIDE_ARCHIVE\")), 1))\n              : (_openBlock(), _createBlock(\"span\", _hoisted_27, \" > \" + _toDisplayString(_ctx.$t(\"SHOW_ARCHIVE\")), 1))\n          ])\n        ]),\n        (this.archiveVisible)\n          ? (_openBlock(), _createBlock(\"div\", _hoisted_28, [\n              _createVNode(\"div\", _hoisted_29, _toDisplayString(_ctx.$t(\"ARCHIVE\")), 1),\n              (_openBlock(true), _createBlock(_Fragment, null, _renderList(this.$store.state.masterCategories, (masterCategory) => {\n                return (_openBlock(), _createBlock(\"table\", {\n                  class: \"budgetArchiveTable table\",\n                  key: masterCategory\n                }, [\n                  _createVNode(_component_master_category_cmpt, {\n                    onUpdateAllocation: _ctx.updateAllocation,\n                    masterCategory: masterCategory,\n                    categoryDataList: this.categoryDataList,\n                    archived: true\n                  }, null, 8, [\"onUpdateAllocation\", \"masterCategory\", \"categoryDataList\"])\n                ]))\n              }), 128))\n            ]))\n          : _createCommentVNode(\"\", true),\n        _hoisted_30\n      ])\n    ])\n  ]))\n}","import { Budget, BudgetData, CategoryDataList } from '@/model/model'\nimport { budgetApi, budgetDataApi } from './api/apis'\nimport { redirectOnApiError } from '@/router'\n\nexport default class BudgetDataService {\n  public static async getDefaultBudget (): Promise<Budget> {\n    const response = await budgetApi.findBudgetsByUser()\n    return response.data[0]\n  }\n\n  public static async getBudgetData (budget: Budget): Promise<BudgetData> {\n    if (budget.id == null) { return [] }\n    const response = await budgetDataApi.findBudgetData(budget.id)\n    return response.data\n  }\n\n  public static async getBudgetDataForMonth (budget: Budget, month: number): Promise<CategoryDataList> {\n    if (budget.id == null) { return {} }\n    const response = await budgetDataApi.findBudgetData(budget.id, month, month)\n    return response.data[month]\n  }\n\n  public static async getBudgetAmount (budget: Budget, month: number): Promise<number> {\n    if (budget.id == null) { return 0 }\n    const response = await budgetDataApi.findTotalBudgetAmount(budget.id, month)\n    return response.data\n  }\n}\n","import { allocationApi } from './api/apis'\nimport { redirectOnApiError } from '@/router'\n\nexport default class AllocationService {\n  public static async updateAllocation (month: number, categoryId: string, amount: number) {\n    const response = await allocationApi.addAllocation(month, categoryId, amount)\n  }\n}\n","import { Operation, Account, Budget, Category, CategoryData as ICategoryData, MasterCategory } from '@/services/api/openApi/api'\n\ninterface BudgetData {\n    [monthComparable: number]: CategoryDataList;\n}\n\ninterface CategoryDataList {\n    [categoryId: string]: CategoryData;\n}\n\nclass CategoryData implements ICategoryData {\n    allocated = 0;\n    spent = 0;\n    available = 0;\n}\n\nconst incomeCategoryId = 'universal_income_category'\nconst transfertCategoryId = 'universal_transfert_category'\n\nexport {\n  Operation, CategoryData, BudgetData, Account, Budget, Category, MasterCategory, CategoryDataList, incomeCategoryId, transfertCategoryId\n}\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = { class: \"masterCategory\" }\nconst _hoisted_2 = { class: \"col-6 name\" }\nconst _hoisted_3 = {\n  key: 1,\n  class: \"editable-master-category\"\n}\nconst _hoisted_4 = /*#__PURE__*/_createVNode(\"button\", { class: \"btn fas fa-pen\" }, null, -1)\nconst _hoisted_5 = { class: \"col-2 allocated\" }\nconst _hoisted_6 = { class: \"col-2 spent\" }\nconst _hoisted_7 = { class: \"col-2 available\" }\nconst _hoisted_8 = { class: \"name\" }\nconst _hoisted_9 = /*#__PURE__*/_createVNode(\"button\", { class: \"btn fas fa-pen\" }, null, -1)\nconst _hoisted_10 = { class: \"allocated\" }\nconst _hoisted_11 = { key: 0 }\nconst _hoisted_12 = { class: \"spent\" }\nconst _hoisted_13 = { class: \"available\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_MasterCategoryForm = _resolveComponent(\"MasterCategoryForm\")\n  const _component_CategoryForm = _resolveComponent(\"CategoryForm\")\n\n  return (this.categories.length > 0)\n    ? (_openBlock(), _createBlock(_Fragment, { key: 0 }, [\n        _createVNode(\"tr\", _hoisted_1, [\n          _createVNode(\"th\", _hoisted_2, [\n            _createVNode(\"div\", null, [\n              (_ctx.focusOn === _ctx.masterCategory.id)\n                ? (_openBlock(), _createBlock(_component_MasterCategoryForm, {\n                    key: 0,\n                    masterCategory: _ctx.masterCategory,\n                    archived: _ctx.archived,\n                    onLoosesFocus: _ctx.loosesFocus,\n                    onCreateCategory: _ctx.createCategory\n                  }, null, 8, [\"masterCategory\", \"archived\", \"onLoosesFocus\", \"onCreateCategory\"]))\n                : (_openBlock(), _createBlock(\"div\", _hoisted_3, [\n                    _createVNode(\"a\", {\n                      onClick: _cache[1] || (_cache[1] = ($event: any) => (this.putFocusOn(_ctx.masterCategory.id)))\n                    }, [\n                      _createTextVNode(_toDisplayString(_ctx.masterCategory?.name) + \" \", 1),\n                      _hoisted_4\n                    ]),\n                    _createVNode(\"button\", {\n                      class: \"btn fas fa-plus\",\n                      onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.createCategory && _ctx.createCategory(...args)))\n                    })\n                  ]))\n            ])\n          ]),\n          _createVNode(\"th\", _hoisted_5, _toDisplayString(_ctx.getEurosAmount(_ctx.masterCategoryData.allocated)), 1),\n          _createVNode(\"th\", _hoisted_6, _toDisplayString(_ctx.getEurosAmount(_ctx.masterCategoryData.spent)), 1),\n          _createVNode(\"th\", _hoisted_7, [\n            _createVNode(\"span\", {\n              class: _ctx.masterCategoryData.available < 0 ? 'negative' : 'positive'\n            }, _toDisplayString(_ctx.getEurosAmount(_ctx.masterCategoryData.available)), 3)\n          ])\n        ]),\n        _createVNode(\"tbody\", null, [\n          (_openBlock(true), _createBlock(_Fragment, null, _renderList(this.categories, (category) => {\n            return (_openBlock(), _createBlock(\"tr\", {\n              class: \"category\",\n              key: category\n            }, [\n              _createVNode(\"td\", _hoisted_8, [\n                _createVNode(\"div\", null, [\n                  (_ctx.focusOn === category.id)\n                    ? (_openBlock(), _createBlock(_component_CategoryForm, {\n                        key: 0,\n                        category: category,\n                        onLoosesFocus: _ctx.loosesFocus\n                      }, null, 8, [\"category\", \"onLoosesFocus\"]))\n                    : (_openBlock(), _createBlock(\"a\", {\n                        key: 1,\n                        class: \"editable-category\",\n                        onClick: ($event: any) => (this.putFocusOn(category.id))\n                      }, [\n                        _createTextVNode(_toDisplayString(category.name) + \" \", 1),\n                        _hoisted_9\n                      ], 8, [\"onClick\"]))\n                ])\n              ]),\n              _createVNode(\"td\", _hoisted_10, [\n                (_ctx.archived)\n                  ? (_openBlock(), _createBlock(\"span\", _hoisted_11, _toDisplayString(this.categoryDataList[category.id]?.allocated ?? \"\"), 1))\n                  : (_openBlock(), _createBlock(\"input\", {\n                      key: 1,\n                      type: \"number\",\n                      class: \"allocationInput\",\n                      value: this.getEurosAmount(this.categoryDataList[category.id]?.allocated ?? 0),\n                      onChange: ($event: any) => (_ctx.updateAllocationOnChange(category.id, $event.target.value))\n                    }, null, 40, [\"value\", \"onChange\"]))\n              ]),\n              _createVNode(\"td\", _hoisted_12, _toDisplayString(_ctx.getEurosAmount(this.categoryDataList[category.id]?.spent ?? \"\")), 1),\n              _createVNode(\"td\", _hoisted_13, [\n                (this.categoryDataList[category.id] && this.categoryDataList[category.id].available != 0)\n                  ? (_openBlock(), _createBlock(\"span\", {\n                      key: 0,\n                      class: this.categoryDataList[category.id]?.available < 0 ? 'negative' : 'positive'\n                    }, _toDisplayString(_ctx.getEurosAmount(this.categoryDataList[category.id]?.available)), 3))\n                  : _createCommentVNode(\"\", true)\n              ])\n            ]))\n          }), 128))\n        ])\n      ], 64))\n    : _createCommentVNode(\"\", true)\n}","export default class Utils {\n  public static getEurosAmount (centsAmount: number): number {\n    return (centsAmount / 100)\n  }\n\n  public static getCentsAmount (eurosAmount: number): number {\n    return Math.round(+eurosAmount * 100)\n  }\n}\n","import { toDisplayString as _toDisplayString, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  id: \"operationForm\",\n  class: \"operation\"\n}\nconst _hoisted_2 = { class: \"name\" }\nconst _hoisted_3 = { class: \"validation\" }\nconst _hoisted_4 = {\n  key: 1,\n  id: \"operationForm\",\n  class: \"operation\"\n}\nconst _hoisted_5 = { class: \"name\" }\nconst _hoisted_6 = { class: \"validation\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (this.category.archived)\n    ? (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n        _createVNode(\"span\", _hoisted_2, _toDisplayString(this.name), 1),\n        _createVNode(\"span\", _hoisted_3, [\n          _createVNode(\"button\", {\n            class: \"btn fas fa-level-up-alt\",\n            onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.unarchiveCategory && _ctx.unarchiveCategory(...args)))\n          }),\n          _createVNode(\"button\", {\n            class: \"btn fas fa-times\",\n            onClick: _cache[2] || (_cache[2] = ($event: any) => (this.$emit('loosesFocus')))\n          })\n        ])\n      ]))\n    : (_openBlock(), _createBlock(\"div\", _hoisted_4, [\n        _createVNode(\"span\", _hoisted_5, [\n          _withDirectives(_createVNode(\"input\", {\n            id: \"newName\",\n            class: \"form-control\",\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => (_ctx.name = $event))\n          }, null, 512), [\n            [_vModelText, _ctx.name]\n          ])\n        ]),\n        _createVNode(\"span\", _hoisted_6, [\n          _createVNode(\"button\", {\n            class: \"btn fas fa-check\",\n            onClick: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.updateCategory && _ctx.updateCategory(...args)))\n          }),\n          _createVNode(\"button\", {\n            class: \"btn fas fa-times\",\n            onClick: _cache[5] || (_cache[5] = ($event: any) => (this.$emit('loosesFocus')))\n          }),\n          _createVNode(\"button\", {\n            class: \"btn fas fa-archive\",\n            onClick: _cache[6] || (_cache[6] = \n//@ts-ignore\n(...args) => (_ctx.archiveCategory && _ctx.archiveCategory(...args)))\n          })\n        ])\n      ]))\n}","\nimport { defineComponent } from 'vue'\nimport CategoryService from '@/services/CategoryService'\nimport StoreHandler from '@/store/StoreHandler'\nimport { Category } from '@/model/model'\n\ninterface CategoryFormData {\n  name: string;\n}\n\nexport default defineComponent({\n  name: 'CategoryForm',\n  data (): CategoryFormData {\n    return {\n      name: this.category.name\n    }\n  },\n  props: {\n    category: {\n      type: Object as () => Category,\n      required: true\n    }\n  },\n  emits: ['loosesFocus'],\n  methods: {\n    updateCategory () {\n      CategoryService.updateCategory(this.category.id, this.name).then(\n        () => {\n          StoreHandler.updateCategories(this.$store)\n          this.$emit('loosesFocus')\n        }\n      )\n    },\n    archiveCategory () {\n      CategoryService.archiveCategory(this.category.id).then(\n        () => {\n          StoreHandler.updateCategories(this.$store)\n          this.$emit('loosesFocus')\n        }\n      )\n    },\n    unarchiveCategory () {\n      CategoryService.unarchiveCategory(this.category.id).then(\n        () => {\n          StoreHandler.updateCategories(this.$store)\n          this.$emit('loosesFocus')\n        }\n      )\n    }\n  }\n})\n","import { render } from \"./CategoryForm.vue?vue&type=template&id=c05ac20e&ts=true\"\nimport script from \"./CategoryForm.vue?vue&type=script&lang=ts\"\nexport * from \"./CategoryForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { toDisplayString as _toDisplayString, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  id: \"operationForm\",\n  class: \"operation\"\n}\nconst _hoisted_2 = { class: \"name\" }\nconst _hoisted_3 = { class: \"validation\" }\nconst _hoisted_4 = {\n  key: 1,\n  id: \"operationForm\",\n  class: \"operation\"\n}\nconst _hoisted_5 = { class: \"name\" }\nconst _hoisted_6 = { class: \"validation\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (this.archived)\n    ? (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n        _createVNode(\"span\", _hoisted_2, _toDisplayString(this.name), 1),\n        _createVNode(\"span\", _hoisted_3, [\n          _createVNode(\"button\", {\n            class: \"btn fas fa-level-up-alt\",\n            onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.unarchiveMasterCategory && _ctx.unarchiveMasterCategory(...args)))\n          }),\n          _createVNode(\"button\", {\n            class: \"btn fas fa-times\",\n            onClick: _cache[2] || (_cache[2] = ($event: any) => (this.$emit('loosesFocus')))\n          })\n        ])\n      ]))\n    : (_openBlock(), _createBlock(\"div\", _hoisted_4, [\n        _createVNode(\"span\", _hoisted_5, [\n          _withDirectives(_createVNode(\"input\", {\n            id: \"newName\",\n            class: \"form-control\",\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => (_ctx.name = $event))\n          }, null, 512), [\n            [_vModelText, _ctx.name]\n          ])\n        ]),\n        _createVNode(\"span\", _hoisted_6, [\n          _createVNode(\"button\", {\n            class: \"btn fas fa-check\",\n            onClick: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.updateMasterCategory && _ctx.updateMasterCategory(...args)))\n          }),\n          _createVNode(\"button\", {\n            class: \"btn fas fa-times\",\n            onClick: _cache[5] || (_cache[5] = ($event: any) => (this.$emit('loosesFocus')))\n          }),\n          _createVNode(\"button\", {\n            class: \"btn fas fa-archive\",\n            onClick: _cache[6] || (_cache[6] = \n//@ts-ignore\n(...args) => (_ctx.archiveMasterCategory && _ctx.archiveMasterCategory(...args)))\n          })\n        ])\n      ]))\n}","\nimport { defineComponent } from 'vue'\nimport StoreHandler from '@/store/StoreHandler'\nimport MasterCategoryService from '@/services/MasterCategoryService'\nimport { MasterCategory } from '@/model/model'\n\ninterface CategoryFormData {\n  name: string;\n}\n\nexport default defineComponent({\n  name: 'CategoryForm',\n  data (): CategoryFormData {\n    return {\n      name: this.masterCategory.name\n    }\n  },\n  props: {\n    masterCategory: {\n      type: Object as () => MasterCategory,\n      required: true\n    },\n    archived: {\n      type: Object as () => boolean,\n      required: false\n    }\n  },\n  emits: ['loosesFocus'],\n  methods: {\n    updateMasterCategory () {\n      MasterCategoryService.renameMasterCategory(this.masterCategory.id, this.name).then(\n        () => {\n          StoreHandler.updateMasterCategories(this.$store)\n          this.$emit('loosesFocus')\n        }\n      )\n    },\n    archiveMasterCategory () {\n      MasterCategoryService.archiveMasterCategory(this.masterCategory.id).then(\n        () => {\n          StoreHandler.updateCategories(this.$store)\n          this.$emit('loosesFocus')\n        }\n      )\n    },\n    unarchiveMasterCategory () {\n      MasterCategoryService.unarchiveMasterCategory(this.masterCategory.id).then(\n        () => {\n          StoreHandler.updateCategories(this.$store)\n          this.$emit('loosesFocus')\n        }\n      )\n    }\n  }\n})\n","import { render } from \"./MasterCategoryForm.vue?vue&type=template&id=640cc3a5&ts=true\"\nimport script from \"./MasterCategoryForm.vue?vue&type=script&lang=ts\"\nexport * from \"./MasterCategoryForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue'\nimport { MasterCategory, CategoryDataList, CategoryData, Category } from '@/model/model'\nimport Utils from '@/utils/Utils'\nimport CategoryService from '@/services/CategoryService'\nimport StoreHandler from '@/store/StoreHandler'\nimport CategoryForm from '@/components/forms/CategoryForm.vue'\nimport MasterCategoryForm from '@/components/forms/MasterCategoryForm.vue'\n\nexport default defineComponent({\n  name: 'MasterCategoryCmpt',\n  components: {\n    CategoryForm,\n    MasterCategoryForm\n  },\n  emits: ['updateAllocation'],\n  props: {\n    masterCategory: {\n      type: Object as () => MasterCategory,\n      required: true\n    },\n    categoryDataList: {\n      type: Object as () => CategoryDataList,\n      required: true\n    },\n    archived: {\n      type: Boolean as () => boolean,\n      required: false,\n      default: false\n    }\n  },\n  data () {\n    return {\n      focusOn: ''\n    }\n  },\n  computed: {\n    categories (): Category[] {\n      return StoreHandler.getCategoriesByMasterCategory(this.$store, this.masterCategory, this.archived)\n    },\n    masterCategoryData () {\n      const masterCategoryData = new CategoryData()\n      for (const category of this.categories) {\n        masterCategoryData.allocated += this.categoryDataList[category.id]?.allocated ?? 0\n        masterCategoryData.spent += this.categoryDataList[category.id]?.spent ?? 0\n        masterCategoryData.available += this.categoryDataList[category.id]?.available ?? 0\n      }\n      return masterCategoryData\n    }\n  },\n  methods: {\n    updateAllocationOnChange (categoryId: string, value: string) {\n      this.$emit('updateAllocation', categoryId, Utils.getCentsAmount(+value))\n    },\n    getEurosAmount (amount: number): number {\n      return Utils.getEurosAmount(amount)\n    },\n    createCategory () {\n      CategoryService.createCategory('New Category', this.masterCategory).then(\n        () => {\n          StoreHandler.updateCategories(this.$store)\n        }\n      )\n    },\n    putFocusOn (categoryId: string) {\n      this.focusOn = categoryId\n    },\n    loosesFocus () {\n      this.focusOn = ''\n    }\n  }\n})\n","import { render } from \"./MasterCategoryCmpt.vue?vue&type=template&id=e77cf8bc&ts=true\"\nimport script from \"./MasterCategoryCmpt.vue?vue&type=script&lang=ts\"\nexport * from \"./MasterCategoryCmpt.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue'\nimport BudgetDataService from '@/services/BudgetDataService'\nimport AllocationService from '@/services/AllocationService'\nimport { Account, Budget, CategoryData, CategoryDataList } from '@/model/model'\nimport MasterCategoryCmpt from './MasterCategoryCmpt.vue'\nimport Time from '@/utils/Time'\nimport Utils from '@/utils/Utils'\nimport MasterCategoryService from '@/services/MasterCategoryService'\nimport StoreHandler from '@/store/StoreHandler'\n\ninterface BudgetCmptData {\n    categoryDataList: CategoryDataList;\n    formerAllocations: {\n        [categoryId: string]: number;\n    };\n    budgetMonth: number;\n    amountInBudget: number;\n    archiveVisible: boolean;\n}\n\nexport default defineComponent({\n  name: 'BudgetCmpt',\n  components: {\n    MasterCategoryCmpt\n  },\n  props: {\n    month: {\n      type: Number,\n      required: true\n    }\n  },\n  created: async function () {\n    this.getBudgetData()\n  },\n  watch: {\n    account: async function () {\n      this.getBudgetData()\n    },\n    budget: async function () {\n      this.getBudgetData()\n    },\n    budgetMonth: async function () {\n      this.getBudgetData()\n    }\n  },\n  data (): BudgetCmptData {\n    return {\n      categoryDataList: {},\n      /* use former allocation to compute the new \"available\" value\n        newAvailable = available + newAllocation - formerAllocation\n        without asking the back-end to compute */\n      formerAllocations: {},\n      budgetMonth: this.$props.month,\n      amountInBudget: 0,\n      archiveVisible: false\n    }\n  },\n  computed: {\n    budget (): Budget | null {\n      return this.$store.state.budget\n    },\n    accounts (): Account[] | null {\n      return this.$store.state.accounts\n    },\n    totalBudgetData () {\n      const totalBudgetData = new CategoryData()\n      for (const categoryId in this.categoryDataList) {\n        totalBudgetData.allocated += this.categoryDataList[categoryId].allocated\n        totalBudgetData.spent += this.categoryDataList[categoryId].spent\n        totalBudgetData.available += this.categoryDataList[categoryId].available\n      }\n      return totalBudgetData\n    },\n    isThisYear (): boolean {\n      return Time.monthIsThisYear(this.budgetMonth)\n    },\n    toBeBudgeted (): number {\n      let toBeBudgeted = this.amountInBudget\n      for (const categoryId in this.categoryDataList) {\n        toBeBudgeted -= this.categoryDataList[categoryId].available\n      }\n      return toBeBudgeted\n    },\n    toBeBudgetedClass (): string {\n      if (this.toBeBudgeted > 0) {\n        return 'positive'\n      } else if (this.toBeBudgeted < 0) {\n        return 'negative'\n      } else {\n        return 'null'\n      }\n    }\n  },\n  methods: {\n    async getBudgetData () {\n      if (this.budget) {\n        BudgetDataService.getBudgetDataForMonth(this.budget, this.budgetMonth).then(\n          (categoryDataList) => {\n            this.categoryDataList = categoryDataList\n            this.initFormerAllocation()\n          }\n        )\n        BudgetDataService.getBudgetAmount(this.budget, this.budgetMonth).then(\n          (amount) => {\n            this.amountInBudget = amount\n          }\n        )\n      }\n    },\n    initFormerAllocation () {\n      let category\n      for (const categoryId in this.categoryDataList) {\n        category = this.categoryDataList[categoryId]\n        this.formerAllocations[categoryId] = category.allocated\n      }\n    },\n    updateAllocation (categoryId: string, newAllocation: number) {\n      if (!this.categoryDataList[categoryId]) {\n        this.categoryDataList[categoryId] = new CategoryData()\n      }\n      this.categoryDataList[categoryId].available +=\n        newAllocation - (this.formerAllocations[categoryId] || 0)\n      this.categoryDataList[categoryId].allocated = newAllocation\n      this.formerAllocations[categoryId] = newAllocation\n      AllocationService.updateAllocation(this.budgetMonth, categoryId, newAllocation)\n    },\n    getMonthAsDate (monthAsInt: number): Date {\n      return Time.getMonthAsDate(monthAsInt)\n    },\n    goToNextMonth () {\n      this.budgetMonth = Time.getNextMonth(this.budgetMonth)\n    },\n    goToLastMonth () {\n      this.budgetMonth = Time.getLastMonth(this.budgetMonth)\n    },\n    getEurosAmount (amount: number): number {\n      return Utils.getEurosAmount(amount)\n    },\n    createMasterCategory () {\n      if (this.budget) {\n        MasterCategoryService.createMasterCategory('New Master Category', this.budget).then(\n          () => {\n            StoreHandler.updateMasterCategories(this.$store)\n            StoreHandler.updateCategories(this.$store)\n          }\n        )\n      }\n    }\n  }\n})\n","import { render } from \"./BudgetCmpt.vue?vue&type=template&id=3a1d03eb&ts=true\"\nimport script from \"./BudgetCmpt.vue?vue&type=script&lang=ts\"\nexport * from \"./BudgetCmpt.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { toDisplayString as _toDisplayString, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent } from \"vue\"\n\nconst _hoisted_1 = { id: \"accountWidget\" }\nconst _hoisted_2 = { class: \"row\" }\nconst _hoisted_3 = { class: \"total\" }\nconst _hoisted_4 = { class: \"accountForm\" }\nconst _hoisted_5 = { key: 0 }\nconst _hoisted_6 = {\n  key: 1,\n  class: \"closeBtnContainer\"\n}\nconst _hoisted_7 = /*#__PURE__*/_createVNode(\"span\", null, \"x\", -1)\nconst _hoisted_8 = {\n  key: 2,\n  class: \"formContainer\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_AccountCreationForm = _resolveComponent(\"AccountCreationForm\")\n\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(\"div\", _hoisted_2, [\n      _createVNode(\"h1\", null, _toDisplayString(_ctx.$t('MY_ACCOUNTS')), 1)\n    ]),\n    _createVNode(\"span\", _hoisted_3, \" total : \" + _toDisplayString(this.getEurosAmount(this.totalOnAccounts)) + \" €\", 1),\n    _createVNode(\"ul\", null, [\n      (_openBlock(true), _createBlock(_Fragment, null, _renderList(this.$store.state.accounts, (account) => {\n        return (_openBlock(), _createBlock(\"li\", {\n          class: \"account\",\n          key: account\n        }, [\n          _createVNode(\"button\", {\n            class: \"btn\",\n            onClick: ($event: any) => (_ctx.goToAccountPage(account))\n          }, _toDisplayString(account.name) + \" : \" + _toDisplayString(this.getEurosAmount(account.amount)) + \" €\", 9, [\"onClick\"])\n        ]))\n      }), 128)),\n      _createVNode(\"li\", _hoisted_4, [\n        (!_ctx.accountCreationFormIsDisplayed)\n          ? (_openBlock(), _createBlock(\"div\", _hoisted_5, [\n              _createVNode(\"button\", {\n                class: \"btn displayFormBtn\",\n                onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.changeAccountCreationFormDisplay && _ctx.changeAccountCreationFormDisplay(...args)))\n              }, [\n                _createVNode(\"span\", null, _toDisplayString(_ctx.$t('ADD_ACCOUNT')), 1)\n              ])\n            ]))\n          : (_openBlock(), _createBlock(\"div\", _hoisted_6, [\n              _createVNode(\"button\", {\n                class: \"btn closeFormBtn\",\n                onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.changeAccountCreationFormDisplay && _ctx.changeAccountCreationFormDisplay(...args)))\n              }, [\n                _hoisted_7\n              ])\n            ])),\n        (_ctx.accountCreationFormIsDisplayed)\n          ? (_openBlock(), _createBlock(\"div\", _hoisted_8, [\n              _createVNode(_component_AccountCreationForm, {\n                onUpdateAccountList: _ctx.getAccounts,\n                onCloseForm: _ctx.changeAccountCreationFormDisplay\n              }, null, 8, [\"onUpdateAccountList\", \"onCloseForm\"])\n            ]))\n          : _createCommentVNode(\"\", true)\n      ])\n    ])\n  ]))\n}","import { toDisplayString as _toDisplayString, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { id: \"accountCreationForm\" }\nconst _hoisted_2 = { class: \"accountCreationInput\" }\nconst _hoisted_3 = { for: \"newAccountName\" }\nconst _hoisted_4 = { for: \"newAccountAmount\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(\"div\", _hoisted_2, [\n      _createVNode(\"label\", _hoisted_3, _toDisplayString(_ctx.$t('ACCOUNT_NAME')), 1),\n      _withDirectives(_createVNode(\"input\", {\n        id: \"newAccountName\",\n        class: \"form-control\",\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (_ctx.name = $event)),\n        placeholder: _ctx.$t('CHECKING_ACCOUNT')\n      }, null, 8, [\"placeholder\"]), [\n        [_vModelText, _ctx.name]\n      ]),\n      _createVNode(\"label\", _hoisted_4, _toDisplayString(_ctx.$t('INITIAL_AMOUNT')), 1),\n      _withDirectives(_createVNode(\"input\", {\n        id: \"newAccountAmount\",\n        class: \"form-control\",\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => (_ctx.amount = $event))\n      }, null, 512), [\n        [\n          _vModelText,\n          _ctx.amount,\n          void 0,\n          { number: true }\n        ]\n      ])\n    ]),\n    _createVNode(\"button\", {\n      class: \"btn\",\n      onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.createAccount && _ctx.createAccount(...args)))\n    }, _toDisplayString(_ctx.$t('CREATE_ACCOUNT')), 1)\n  ]))\n}","\nimport { defineComponent } from 'vue'\nimport AccountService from '@/services/AccountService'\nimport Utils from '@/utils/Utils'\n\nexport default defineComponent({\n  name: 'AccountCreationForm',\n  data () {\n    return {\n      name: '',\n      amount: 0\n    }\n  },\n  emits: ['updateAccountList', 'closeForm'],\n  methods: {\n    createAccount () {\n      if (this.$store.state.budget) {\n        AccountService.createAccount(this.$store, this.$store.state.budget, this.name, Utils.getCentsAmount(this.amount)).then(\n          () => {\n            this.$emit('updateAccountList')\n            this.$emit('closeForm')\n          }\n        )\n      }\n    }\n  }\n})\n","import { render } from \"./AccountCreationForm.vue?vue&type=template&id=6d5bfd79&ts=true\"\nimport script from \"./AccountCreationForm.vue?vue&type=script&lang=ts\"\nexport * from \"./AccountCreationForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue'\nimport AccountCreationForm from '@/components/forms/AccountCreationForm.vue'\nimport router, { RouterPages } from '@/router'\nimport { Account } from '@/model/model'\nimport Utils from '@/utils/Utils'\n\ninterface AccountsWidgetData {\n    accountCreationFormIsDisplayed: boolean;\n}\n\nexport default defineComponent({\n  name: 'AccountsWidget',\n  components: {\n    AccountCreationForm\n  },\n  data (): AccountsWidgetData {\n    return {\n      accountCreationFormIsDisplayed: false\n    }\n  },\n  computed: {\n    totalOnAccounts (): number {\n      let total = 0\n      for (const account of this.$store.state.accounts) {\n        total += account.amount\n      }\n      return total\n    }\n  },\n  methods: {\n    goToAccountPage (account: Account) {\n      router.push({ path: RouterPages.account, query: { accountId: account.id } })\n    },\n    changeAccountCreationFormDisplay () {\n      this.$data.accountCreationFormIsDisplayed = !this.$data.accountCreationFormIsDisplayed\n    },\n    getEurosAmount (amount: number): number {\n      return Utils.getEurosAmount(amount)\n    }\n  }\n})\n","import { render } from \"./AccountsWidget.vue?vue&type=template&id=50b363b3&ts=true\"\nimport script from \"./AccountsWidget.vue?vue&type=script&lang=ts\"\nexport * from \"./AccountsWidget.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { StoreState } from '@/store/index'\nimport { Store } from 'vuex'\nimport { personApi } from '@/services/api/apis'\nimport router, { RouterPages, redirectOnApiError, redirectToLoginPageIfNotLogged } from '@/router'\nimport axios from 'axios'\n\ninterface LoginResponse {\n    name: string;\n    unlockingDate: number;\n}\n\nexport default class PersonService {\n  public static async createSession (store: Store<StoreState>, email: string, password: string): Promise<LoginResponse> {\n    let data\n    let response\n    try {\n      response = await personApi.createSession(email, password)\n      data = response.data\n      store.dispatch('updateLogged')\n      router.push(RouterPages.home)\n    } catch (exception) {\n      if (axios.isAxiosError(exception)) {\n        response = exception.response\n        data = (response) ? response.data : {}\n      }\n    }\n    return JSON.parse(data)\n  }\n\n  public static async createPerson (store: Store<StoreState>, name: string, email: string, password: string) {\n    try {\n      const billingUrl = (await (personApi.createPerson(name, password, email))).data\n      window.location.href = billingUrl\n    } catch (exception) {\n      if (axios.isAxiosError(exception)) {\n        alert(exception.response?.data)\n      }\n    }\n  }\n\n  public static async redirectToBillingPortalUrl (store: Store<StoreState>) {\n    try {\n      const billingPortalUrl = (await (personApi.createBillingPortalSession())).data\n      window.location.href = billingPortalUrl\n    } catch (exception) {\n      if (axios.isAxiosError(exception)) {\n        alert(exception.response?.data)\n      }\n    }\n  }\n\n  public static async deleteSession (store: Store<StoreState>) {\n    const response = await personApi.deleteSession()\n    store.dispatch('updateLogged')\n    redirectToLoginPageIfNotLogged(store)\n  }\n}\n","import { createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\nimport _imports_0 from '@/assets/logo_round.png'\n\n\nconst _hoisted_1 = { class: \"image-spinner\" }\nconst _hoisted_2 = /*#__PURE__*/_createVNode(\"img\", { src: _imports_0 }, null, -1)\nconst _hoisted_3 = /*#__PURE__*/_createVNode(\"div\", { class: \"spin spinner\" }, null, -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _hoisted_3,\n    _createVNode(\"div\", null, _toDisplayString(_ctx.$t('LOADING')), 1)\n  ]))\n}","\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'LoaderCmpt'\n})\n","import { render } from \"./Loader.vue?vue&type=template&id=2a375deb&ts=true\"\nimport script from \"./Loader.vue?vue&type=script&lang=ts\"\nexport * from \"./Loader.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"buttonMenu\" }\nconst _hoisted_2 = {\n  id: \"actionsList\",\n  class: \"list-group list-group-horizontal d-flex\"\n}\nconst _hoisted_3 = { key: 0 }\nconst _hoisted_4 = { key: 1 }\nconst _hoisted_5 = { key: 2 }\nconst _hoisted_6 = { key: 3 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(\"ul\", _hoisted_2, [\n      (this.fromPage == 'home' )\n        ? (_openBlock(), _createBlock(\"li\", _hoisted_3, [\n            _createVNode(\"button\", {\n              class: \"btn fas fa-home disabled\",\n              title: _ctx.$t('HOME')\n            }, null, 8, [\"title\"])\n          ]))\n        : (_openBlock(), _createBlock(\"li\", _hoisted_4, [\n            _createVNode(\"button\", {\n              onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.goHomePage && _ctx.goHomePage(...args))),\n              class: \"btn fas fa-home\",\n              title: _ctx.$t('HOME')\n            }, null, 8, [\"title\"])\n          ])),\n      (this.fromPage == 'redirect' )\n        ? (_openBlock(), _createBlock(\"li\", _hoisted_5, [\n            _createVNode(\"button\", {\n              class: \"btn fas fa-euro-sign disabled\",\n              title: _ctx.$t('ACCOUNT')\n            }, null, 8, [\"title\"])\n          ]))\n        : (_openBlock(), _createBlock(\"li\", _hoisted_6, [\n            _createVNode(\"button\", {\n              onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.goChooseAccount && _ctx.goChooseAccount(...args))),\n              class: \"btn fas fa-euro-sign\",\n              title: _ctx.$t('ACCOUNT')\n            }, null, 8, [\"title\"])\n          ])),\n      _createVNode(\"li\", null, [\n        _createVNode(\"button\", {\n          class: \"btn fas fa-cog disabled\",\n          title: _ctx.$t('PREFERENCES')\n        }, null, 8, [\"title\"])\n      ]),\n      _createVNode(\"li\", null, [\n        _createVNode(\"button\", {\n          onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.logout && _ctx.logout(...args))),\n          class: \"btn fas fa-sign-out-alt\",\n          title: _ctx.$t('LOGOUT')\n        }, null, 8, [\"title\"])\n      ])\n    ])\n  ]))\n}","\nimport { defineComponent } from 'vue'\nimport PersonService from '@/services/PersonService'\nimport router, { RouterPages } from '@/router'\n\ninterface MenuData {\n    fromPage: string;\n}\n\nexport default defineComponent({\n  name: 'BtnMenu',\n  props: {\n    page: {\n      type: String,\n      required: true\n    }\n  },\n  data (): MenuData {\n    return {\n      fromPage: this.$props.page\n    }\n  },\n  methods: {\n    logout () {\n      PersonService.deleteSession(this.$store)\n    },\n    async goHomePage (): Promise<void> {\n      router.push(RouterPages.home)\n    },\n    async goChooseAccount () {\n      router.push(RouterPages.redirectAtAccountPage)\n    }\n  }\n})\n","import { render } from \"./ButtonMenu.vue?vue&type=template&id=60ecb462&ts=true\"\nimport script from \"./ButtonMenu.vue?vue&type=script&lang=ts\"\nexport * from \"./ButtonMenu.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue'\nimport StoreHandler from '@/store/StoreHandler'\nimport router, { RouterPages, redirectToLoginPageIfNotLogged } from '@/router'\nimport BudgetCmpt from '@/components/BudgetCmpt.vue' // @ is an alias to /src\nimport AccountsWidget from '@/components/AccountsWidget.vue'\nimport PersonService from '@/services/PersonService'\nimport Time from '@/utils/Time'\nimport Loader from '@/components/utils/Loader.vue'\nimport BtnMenu from '@/components/ButtonMenu.vue'\n\nexport default defineComponent({\n  name: 'Home',\n  beforeCreate: async function () {\n    redirectToLoginPageIfNotLogged(this.$store)\n  },\n  created: async function () {\n    StoreHandler.initStore(this.$store)\n  },\n  components: {\n    BudgetCmpt,\n    AccountsWidget,\n    Loader,\n    BtnMenu\n  },\n  data () {\n    return {\n      currentMonth: Time.getCurrentMonth()\n    }\n  },\n  methods: {\n    logout () {\n      PersonService.deleteSession(this.$store)\n    },\n    goToProfile () {\n      router.push(RouterPages.profile)\n    }\n  }\n})\n","import { render } from \"./Home.vue?vue&type=template&id=1ef1db56&ts=true\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nimport _imports_0 from '../assets/logo.png'\n\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-10671a15\")\n\n_pushScopeId(\"data-v-10671a15\")\nconst _hoisted_1 = { id: \"login_page\" }\nconst _hoisted_2 = /*#__PURE__*/_createVNode(\"img\", {\n  id: \"logo\",\n  alt: \"Vue logo\",\n  src: _imports_0\n}, null, -1)\nconst _hoisted_3 = { id: \"login_error_msg\" }\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId((_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) => {\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _withDirectives(_createVNode(\"input\", {\n      class: \"form-control\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (_ctx.email = $event)),\n      placeholder: _ctx.$t('EMAIL')\n    }, null, 8, [\"placeholder\"]), [\n      [_vModelText, _ctx.email]\n    ]),\n    _withDirectives(_createVNode(\"input\", {\n      class: \"form-control\",\n      type: \"password\",\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => (_ctx.password = $event)),\n      placeholder: _ctx.$t('PASSWORD')\n    }, null, 8, [\"placeholder\"]), [\n      [_vModelText, _ctx.password]\n    ]),\n    _createVNode(\"button\", {\n      class: \"btn btn-info\",\n      onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.login && _ctx.login(...args)))\n    }, _toDisplayString(_ctx.$t('LOGIN')), 1),\n    _createVNode(\"p\", _hoisted_3, _toDisplayString(_ctx.errorMsg), 1),\n    _createVNode(\"p\", null, [\n      _createVNode(\"a\", {\n        class: \"teamSelector\",\n        onClick: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.goToSignUp && _ctx.goToSignUp(...args)))\n      }, _toDisplayString(_ctx.$t('CREATE_ACCOUNT_HERE')), 1)\n    ])\n  ]))\n})","\nimport { defineComponent } from 'vue'\nimport PersonService from '@/services/PersonService'\nimport router, { RouterPages } from '@/router'\n\nexport default defineComponent({\n  name: 'Login',\n  components: {},\n  data () {\n    return {\n      email: '',\n      password: '',\n      errorMsg: ''\n    }\n  },\n  methods: {\n    async login () {\n      const responseData = await PersonService.createSession(this.$store, this.email, this.password)\n      if (responseData.unlockingDate !== null) {\n        const minutes = 1000 * 60\n        const lockingDuration = Math.round((responseData.unlockingDate - new Date().getTime()) / minutes)\n        if (lockingDuration > 0) {\n          this.$data.errorMsg = this.$t('SORRY_LOCKED_OUT', { lockingDuration: lockingDuration })\n        } else {\n          this.$data.errorMsg = this.$t('SORRY_WRONG_PASSWORD')\n        }\n      } else {\n        this.$data.errorMsg = this.$t('SORRY_WRONG_LOGIN')\n      }\n    },\n    async goToSignUp (): Promise<void> {\n      router.push(RouterPages.signup)\n    }\n  }\n\n})\n","import { render } from \"./Login.vue?vue&type=template&id=10671a15&scoped=true&ts=true\"\nimport script from \"./Login.vue?vue&type=script&lang=ts\"\nexport * from \"./Login.vue?vue&type=script&lang=ts\"\n\nimport \"./Login.vue?vue&type=style&index=0&id=10671a15&scoped=true&lang=less\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-10671a15\"]])\n\nexport default __exports__","import { createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { id: \"profile_page\" }\nconst _hoisted_2 = /*#__PURE__*/_createVNode(\"h1\", null, \"Profil utilisateur\", -1)\nconst _hoisted_3 = /*#__PURE__*/_createVNode(\"h3\", null, \"Cette page est encore en construction\", -1)\nconst _hoisted_4 = /*#__PURE__*/_createVNode(\"p\", null, \"Si vous avez été redirigé automatiquement ici, c'est que votre abonnement n'est pas à jour\", -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _hoisted_3,\n    _hoisted_4,\n    _createVNode(\"p\", null, [\n      _createVNode(\"a\", {\n        class: \"teamSelector\",\n        onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.goToBillingPortal && _ctx.goToBillingPortal(...args)))\n      }, _toDisplayString(_ctx.$t('BILLING_MANAGEMENT')), 1)\n    ]),\n    _createVNode(\"button\", {\n      onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.logout && _ctx.logout(...args))),\n      class: \"btn fas fa-sign-out-alt\",\n      title: _ctx.$t('LOGOUT')\n    }, null, 8, [\"title\"])\n  ]))\n}","\nimport { defineComponent } from 'vue'\nimport PersonService from '@/services/PersonService'\n\nexport default defineComponent({\n  name: 'Profile',\n  components: {},\n  data () {\n    return {}\n  },\n  methods: {\n    async goToBillingPortal (): Promise<void> {\n      PersonService.redirectToBillingPortalUrl(this.$store)\n    },\n    logout () {\n      PersonService.deleteSession(this.$store)\n    }\n  }\n\n})\n","import { render } from \"./Profile.vue?vue&type=template&id=4d070a77&ts=true\"\nimport script from \"./Profile.vue?vue&type=script&lang=ts\"\nexport * from \"./Profile.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nimport _imports_0 from '../assets/logo.png'\n\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-01136d40\")\n\n_pushScopeId(\"data-v-01136d40\")\nconst _hoisted_1 = { id: \"sign_up_page\" }\nconst _hoisted_2 = /*#__PURE__*/_createVNode(\"img\", {\n  id: \"logo\",\n  alt: \"Vue logo\",\n  src: _imports_0\n}, null, -1)\nconst _hoisted_3 = { id: \"login_error_msg\" }\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId((_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) => {\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createVNode(\"div\", null, [\n      _withDirectives(_createVNode(\"input\", {\n        class: \"form-control\",\n        type: \"text\",\n        id: \"name\",\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (_ctx.name = $event)),\n        placeholder: _ctx.$t('NAME')\n      }, null, 8, [\"placeholder\"]), [\n        [_vModelText, _ctx.name]\n      ]),\n      _withDirectives(_createVNode(\"input\", {\n        class: \"form-control\",\n        id: \"email\",\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => (_ctx.email = $event)),\n        placeholder: _ctx.$t('EMAIL')\n      }, null, 8, [\"placeholder\"]), [\n        [_vModelText, _ctx.email]\n      ]),\n      _withDirectives(_createVNode(\"input\", {\n        class: \"form-control\",\n        type: \"password\",\n        id: \"password\",\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => (_ctx.password = $event)),\n        placeholder: _ctx.$t('PASSWORD')\n      }, null, 8, [\"placeholder\"]), [\n        [_vModelText, _ctx.password]\n      ]),\n      _withDirectives(_createVNode(\"input\", {\n        class: \"form-control\",\n        type: \"password\",\n        id: \"passwordConfirm\",\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => (_ctx.passwordConfirm = $event)),\n        placeholder: _ctx.$t('PASSWORD_CONFIRMATION')\n      }, null, 8, [\"placeholder\"]), [\n        [_vModelText, _ctx.passwordConfirm]\n      ]),\n      _createVNode(\"button\", {\n        class: \"btn btn-info\",\n        onClick: _cache[5] || (_cache[5] = \n//@ts-ignore\n(...args) => (_ctx.create && _ctx.create(...args)))\n      }, _toDisplayString(_ctx.$t('CREATE_MY_ACCOUNT')), 1),\n      _createVNode(\"p\", _hoisted_3, _toDisplayString(_ctx.errorMsg), 1),\n      _createVNode(\"p\", null, [\n        _createVNode(\"a\", {\n          class: \"teamSelector\",\n          onClick: _cache[6] || (_cache[6] = \n//@ts-ignore\n(...args) => (_ctx.goToLogin && _ctx.goToLogin(...args)))\n        }, _toDisplayString(_ctx.$t('RETURN_TO_LOGIN')), 1)\n      ])\n    ])\n  ]))\n})","\nimport { defineComponent } from 'vue'\nimport PersonService from '@/services/PersonService'\nimport router, { RouterPages } from '@/router'\n\nexport default defineComponent({\n  name: 'Signup',\n  components: {},\n  data () {\n    return {\n      name: '',\n      email: '',\n      password: '',\n      passwordConfirm: '',\n      errorMsg: ''\n    }\n  },\n  computed: {\n    logged (): boolean {\n      return this.$store.state.logged\n    }\n  },\n  methods: {\n    async create () {\n      if (this.testForm()) {\n        PersonService.createPerson(this.$store, this.name, this.email, this.password)\n      }\n    },\n    testForm (): boolean {\n      // regex verify email have an email form\n      const regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\n      if (this.password !== this.passwordConfirm) {\n        this.$data.errorMsg = this.$t('DIFFERENT_PASSWORDS')\n        return false\n      }\n      if (!this.passwordCheckSecurity(this.password)) {\n        this.$data.errorMsg = this.$t('INSUFFICIENT_SECURITY')\n        return false\n      }\n      if (!this.email.match(regex)) {\n        this.$data.errorMsg = this.$t('INVALID_EMAIL')\n        return false\n      }\n      if (this.name === '') {\n        this.$data.errorMsg = this.$t('EMPTY_NAME')\n        return false\n      }\n      return true\n    },\n    passwordCheckSecurity (password: string): boolean {\n      // regExp verify password is enought complex (more than 8 caracters, with lower and capital letter and with special caracter !@#$%&*())\n      const regExp = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%&*()-_<>/\\\\]).{8,}/\n      const validPassword = regExp.test(password)\n      return validPassword\n    },\n    async goToLogin (): Promise<void> {\n      router.push(RouterPages.login)\n    }\n  }\n\n})\n","import { render } from \"./Signup.vue?vue&type=template&id=01136d40&scoped=true&ts=true\"\nimport script from \"./Signup.vue?vue&type=script&lang=ts\"\nexport * from \"./Signup.vue?vue&type=script&lang=ts\"\n\nimport \"./Signup.vue?vue&type=style&index=0&id=01136d40&scoped=true&lang=less\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-01136d40\"]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"RedirectAtAccountPage\" }\nconst _hoisted_2 = { class: \"col-12 offset-0 col-sm-8 offset-sm-2 col-md-6 offset-md-3 col-lg-4 offset-lg-4 col-xxl-2 offset-xxl-5 \" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_AccountsWidget = _resolveComponent(\"AccountsWidget\")\n  const _component_BtnMenu = _resolveComponent(\"BtnMenu\")\n\n  return (_openBlock(), _createBlock(\"div\", {\n    class: this.$store.state.css\n  }, [\n    _createVNode(\"div\", _hoisted_1, [\n      _createVNode(\"div\", _hoisted_2, [\n        _createVNode(_component_AccountsWidget),\n        _createVNode(_component_BtnMenu, { page: 'redirect' })\n      ])\n    ])\n  ], 2))\n}","\nimport { defineComponent } from 'vue'\nimport AccountsWidget from '@/components/AccountsWidget.vue'\nimport BtnMenu from '@/components/ButtonMenu.vue'\n\nexport default defineComponent({\n  name: 'RedirectAtAccountPage',\n  components: {\n    AccountsWidget,\n    BtnMenu\n  },\n  methods: {}\n})\n","import { render } from \"./RedirectAtAccountPage.vue?vue&type=template&id=21fdc8c4&ts=true\"\nimport script from \"./RedirectAtAccountPage.vue?vue&type=script&lang=ts\"\nexport * from \"./RedirectAtAccountPage.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { vModelText as _vModelText, createVNode as _createVNode, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = { class: \"accountPage row col-lg-10 offset-lg-1 col-xl-8 offset-xl-2\" }\nconst _hoisted_2 = { class: \"accountPageBody\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"editingNameAccount row\"\n}\nconst _hoisted_4 = { class: \"name col-9 offset-0 col-sm-8 offset-sm-1 col-md-6 offset-md-3 col-lg-4 offset-lg-4 col-xl-4 offset-xl-4 col-xxl-4 offset-xxl-4\" }\nconst _hoisted_5 = { class: \"validation col\" }\nconst _hoisted_6 = {\n  key: 1,\n  class: \"editableNameAccount\"\n}\nconst _hoisted_7 = /*#__PURE__*/_createVNode(\"button\", { class: \"btn fas fa-pen\" }, null, -1)\nconst _hoisted_8 = { class: \"scrollable operationTable table-hover\" }\nconst _hoisted_9 = /*#__PURE__*/_createVNode(\"div\", { class: \"rectangleTop\" }, null, -1)\nconst _hoisted_10 = {\n  key: 1,\n  class: \"operation storedOperation\"\n}\nconst _hoisted_11 = { class: \"date col-2 offset-1\" }\nconst _hoisted_12 = /*#__PURE__*/_createVNode(\"div\", { class: \"col-8\" }, null, -1)\nconst _hoisted_13 = { class: \"category col-3 offset-1\" }\nconst _hoisted_14 = { class: \"amount col-3 offset-2\" }\nconst _hoisted_15 = { class: \"action col-1\" }\nconst _hoisted_16 = { class: \"memo col-3 offset-1\" }\nconst _hoisted_17 = /*#__PURE__*/_createVNode(\"div\", { class: \"rectangleBottom\" }, null, -1)\nconst _hoisted_18 = { class: \"btnInAccountPage\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_OperationForm = _resolveComponent(\"OperationForm\")\n  const _component_BtnMenu = _resolveComponent(\"BtnMenu\")\n\n  return (_openBlock(), _createBlock(\"div\", {\n    class: this.$store.state.css\n  }, [\n    _createVNode(\"div\", _hoisted_1, [\n      _createVNode(\"div\", _hoisted_2, [\n        (this.editingTitle)\n          ? (_openBlock(), _createBlock(\"div\", _hoisted_3, [\n              _createVNode(\"span\", _hoisted_4, [\n                _withDirectives(_createVNode(\"input\", {\n                  id: \"accountName\",\n                  class: \"form-control\",\n                  placeholder: this.currentName,\n                  \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (_ctx.name = $event))\n                }, null, 8, [\"placeholder\"]), [\n                  [_vModelText, _ctx.name]\n                ])\n              ]),\n              _createVNode(\"span\", _hoisted_5, [\n                _createVNode(\"button\", {\n                  class: \"btn fas fa-check\",\n                  onClick: _cache[2] || (_cache[2] = ($event: any) => (_ctx.updateName()))\n                }),\n                _createVNode(\"button\", {\n                  class: \"btn fas fa-times\",\n                  onClick: _cache[3] || (_cache[3] = ($event: any) => (this.cancelEditing()))\n                })\n              ])\n            ]))\n          : (_openBlock(), _createBlock(\"div\", _hoisted_6, [\n              _createVNode(\"a\", {\n                onClick: _cache[4] || (_cache[4] = ($event: any) => (this.displayTitleEditing()))\n              }, [\n                _createVNode(\"h1\", null, [\n                  _createTextVNode(_toDisplayString(this.account ? this.account.name : \"\") + \" : \" + _toDisplayString(this.account ? _ctx.getEurosAmount(this.account.amount) : \"\") + \"€ \", 1),\n                  _hoisted_7\n                ])\n              ])\n            ])),\n        _createVNode(\"div\", _hoisted_8, [\n          _hoisted_9,\n          _createVNode(_component_OperationForm, {\n            class: \"operationCreate\",\n            onUpdateOperationList: _ctx.getAccountOperation,\n            accountId: this.accountId\n          }, null, 8, [\"onUpdateOperationList\", \"accountId\"]),\n          (_openBlock(true), _createBlock(_Fragment, null, _renderList(this.operations, (operation) => {\n            return (_openBlock(), _createBlock(_Fragment, { key: operation }, [\n              (operation.editing)\n                ? (_openBlock(), _createBlock(_component_OperationForm, {\n                    key: 0,\n                    onUpdateOperationList: _ctx.getAccountOperation,\n                    accountId: this.accountId,\n                    operation: operation\n                  }, null, 8, [\"onUpdateOperationList\", \"accountId\", \"operation\"]))\n                : (_openBlock(), _createBlock(\"div\", _hoisted_10, [\n                    _createVNode(\"div\", _hoisted_11, [\n                      _createVNode(\"div\", null, _toDisplayString(_ctx.$d(this.getDayAsDate(operation.day), \"day\")), 1)\n                    ]),\n                    _hoisted_12,\n                    _createVNode(\"div\", _hoisted_13, _toDisplayString(this.getCategoryById(operation.categoryId)?.name ?? _ctx.$t(\"UNKNOWN_CATEGORY\")), 1),\n                    _createVNode(\"div\", _hoisted_14, _toDisplayString(this.getEurosAmount(operation.amount)) + \" € \", 1),\n                    _createVNode(\"div\", _hoisted_15, [\n                      _createVNode(\"button\", {\n                        class: \"btn fas fa-pen\",\n                        onClick: ($event: any) => (_ctx.setAsEditing(operation)),\n                        title: _ctx.$t('EDIT')\n                      }, null, 8, [\"onClick\", \"title\"]),\n                      _createVNode(\"button\", {\n                        class: \"btn fas fa-trash\",\n                        onClick: ($event: any) => (_ctx.deleteOperation(operation)),\n                        title: _ctx.$t('DELETE')\n                      }, null, 8, [\"onClick\", \"title\"])\n                    ]),\n                    _createVNode(\"div\", _hoisted_16, _toDisplayString(operation.memo), 1)\n                  ]))\n            ], 64))\n          }), 128)),\n          _hoisted_17\n        ])\n      ]),\n      _createVNode(\"div\", _hoisted_18, [\n        _createVNode(_component_BtnMenu)\n      ])\n    ])\n  ], 2))\n}","import { Account, Operation } from '@/model/model'\nimport { operationApi } from '@/services/api/apis'\nimport StoreHandler from '@/store/StoreHandler'\nimport { StoreState } from '@/store/index'\nimport { Store } from 'vuex'\nimport { redirectOnApiError } from '@/router'\n\nexport default class OperationService {\n  public static async getOperations (account: Account): Promise<Operation[]> {\n    let data: Operation[] = []\n    if (account.id) {\n      const response = await operationApi.findOperationsByAccount(account.id)\n      data = response.data\n    }\n    return data\n  }\n\n  public static async addOperation (store: Store<StoreState>, accountId: string, day?: number, categoryId?: string, amount?: number, memo?: string) {\n    const response = await operationApi.addOperation(accountId, day, categoryId, amount, memo)\n    StoreHandler.updateAccounts(store)\n  }\n\n  public static async deleteOperation (store: Store<StoreState>, operation: Operation) {\n    const response = await operationApi.deleteOperation(operation.id)\n    StoreHandler.updateAccounts(store)\n  }\n\n  public static async updateOperation (store: Store<StoreState>, operation: Operation, accountId: string, day?: number, categoryId?: string, amount?: number, memo?: string) {\n    const response = await operationApi.updateOperation(operation.id, accountId, day, categoryId, amount, memo)\n    StoreHandler.updateAccounts(store)\n  }\n}\n","import { toDisplayString as _toDisplayString, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, vModelSelect as _vModelSelect, vModelCheckbox as _vModelCheckbox, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  id: \"operationForm\",\n  class: \"operation\"\n}\nconst _hoisted_2 = { class: \"dateTitle col-3 offset-1 col-sm-2 offset-sm-2 col-md-1 offset-md-1 col-lg-1 offset-lg-1 col-xl-1 offset-xl-1 col-xxl-1 offset-xxl-1\" }\nconst _hoisted_3 = { class: \"dateElement col-7 col-sm-6 col-md-3 col-lg-3 col-xl-3 col-xxl-2\" }\nconst _hoisted_4 = { class: \"categoryTitle col-3 offset-1 col-sm-2 offset-sm-2 col-md-2 offset-md-1 col-lg-2 offset-lg-1 col-xl-2 offset-xl-1 col-xxl-2 offset-xxl-1\" }\nconst _hoisted_5 = { class: \"categoryElement col-7 col-sm-6 col-md-3 col-lg-3 col-xl-3 col-xxl-4\" }\nconst _hoisted_6 = {\n  disabled: \"\",\n  value: \"\"\n}\nconst _hoisted_7 = { class: \"memoTitle col-3 offset-1 col-sm-2 offset-sm-2 col-md-1 offset-md-1 col-lg-1 offset-lg-1 col-xl-1 offset-xl-1 col-xxl-1 offset-xxl-1\" }\nconst _hoisted_8 = { class: \"memoElement col-7 col-sm-6 col-md-3 col-lg-3 col-xl-3 col-xxl-2\" }\nconst _hoisted_9 = { class: \"amountTitle col-3 offset-1 col-sm-2 offset-sm-2 col-md-2 offset-md-1 col-lg-2 offset-lg-1 col-xl-2 offset-xl-1 col-xxl-2 offset-xxl-1\" }\nconst _hoisted_10 = { class: \"amountElement col-7 col-sm-6 col-md-3 col-lg-3 col-xl-3 col-xxl-4\" }\nconst _hoisted_11 = { class: \"input-group flex-nowrap\" }\nconst _hoisted_12 = { class: \"switch\" }\nconst _hoisted_13 = /*#__PURE__*/_createVNode(\"span\", {\n  class: \"switch-label\",\n  \"data-on\": \"+\",\n  \"data-off\": \"-\",\n  style: {\"border-radius\":\"8px\"}\n}, null, -1)\nconst _hoisted_14 = /*#__PURE__*/_createVNode(\"span\", { class: \"switch-handle\" }, null, -1)\nconst _hoisted_15 = { class: \"action col-1 offset-6\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(\"div\", _hoisted_2, _toDisplayString(_ctx.$t(\"DATE\")), 1),\n    _createVNode(\"div\", _hoisted_3, [\n      _withDirectives(_createVNode(\"input\", {\n        id: \"newOperationDate\",\n        type: \"date\",\n        class: \"form-control\",\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (_ctx.date = $event))\n      }, null, 512), [\n        [_vModelText, _ctx.date]\n      ])\n    ]),\n    _createVNode(\"div\", _hoisted_4, _toDisplayString(_ctx.$t(\"CATEGORY\")), 1),\n    _createVNode(\"div\", _hoisted_5, [\n      _withDirectives(_createVNode(\"select\", {\n        id: \"newOperationCategory\",\n        class: \"form-control\",\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => (_ctx.categoryId = $event))\n      }, [\n        _createVNode(\"option\", _hoisted_6, _toDisplayString(_ctx.$t('SELECT_CATEGORY')), 1),\n        _createVNode(\"option\", { value: _ctx.incomeCategoryId }, _toDisplayString(_ctx.$t('I18N_INCOME')), 9, [\"value\"]),\n        _createVNode(\"option\", { value: _ctx.transfertCategoryId }, _toDisplayString(_ctx.$t('I18N_TRASNFERT')), 9, [\"value\"]),\n        (_openBlock(true), _createBlock(_Fragment, null, _renderList(this.$store.state.masterCategories, (masterCategory) => {\n          return (_openBlock(), _createBlock(\"optgroup\", {\n            key: masterCategory,\n            value: masterCategory.id,\n            label: masterCategory.name\n          }, [\n            (_openBlock(true), _createBlock(_Fragment, null, _renderList(this.getCategoriesByMasterCategory(masterCategory), (category) => {\n              return (_openBlock(), _createBlock(\"option\", {\n                key: category,\n                value: category.id\n              }, _toDisplayString(category.name), 9, [\"value\"]))\n            }), 128))\n          ], 8, [\"value\", \"label\"]))\n        }), 128)),\n        _createVNode(\"optgroup\", {\n          label: _ctx.$t('ARCHIVED_CATEGORIES')\n        }, [\n          (_openBlock(true), _createBlock(_Fragment, null, _renderList(this.getArchivedCategories(), (category) => {\n            return (_openBlock(), _createBlock(\"option\", {\n              key: category,\n              value: category.id\n            }, _toDisplayString(category.name), 9, [\"value\"]))\n          }), 128))\n        ], 8, [\"label\"])\n      ], 512), [\n        [_vModelSelect, _ctx.categoryId]\n      ])\n    ]),\n    _createVNode(\"div\", _hoisted_7, _toDisplayString(_ctx.$t(\"MEMO\")), 1),\n    _createVNode(\"div\", _hoisted_8, [\n      _withDirectives(_createVNode(\"input\", {\n        id: \"newOperationMemo\",\n        class: \"form-control\",\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => (_ctx.memo = $event))\n      }, null, 512), [\n        [_vModelText, _ctx.memo]\n      ])\n    ]),\n    _createVNode(\"div\", _hoisted_9, _toDisplayString(_ctx.$t(\"AMOUNT\")), 1),\n    _createVNode(\"div\", _hoisted_10, [\n      _createVNode(\"div\", _hoisted_11, [\n        _createVNode(\"label\", _hoisted_12, [\n          _withDirectives(_createVNode(\"input\", {\n            class: \"switch-input\",\n            type: \"checkbox\",\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => (_ctx.incoming = $event))\n          }, null, 512), [\n            [_vModelCheckbox, _ctx.incoming]\n          ]),\n          _hoisted_13,\n          _hoisted_14\n        ]),\n        _withDirectives(_createVNode(\"input\", {\n          id: \"newOperationAmount\",\n          class: \"form-control\",\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => (_ctx.amount = $event))\n        }, null, 512), [\n          [\n            _vModelText,\n            _ctx.amount,\n            void 0,\n            { number: true }\n          ]\n        ])\n      ])\n    ]),\n    _createVNode(\"div\", _hoisted_15, [\n      (this.operation)\n        ? (_openBlock(), _createBlock(\"button\", {\n            key: 0,\n            class: \"btn fas fa-check\",\n            onClick: _cache[6] || (_cache[6] = \n//@ts-ignore\n(...args) => (_ctx.updateOperation && _ctx.updateOperation(...args))),\n            title: _ctx.$t('UPDATE')\n          }, null, 8, [\"title\"]))\n        : (_openBlock(), _createBlock(\"button\", {\n            key: 1,\n            class: \"btn fas fa-check\",\n            onClick: _cache[7] || (_cache[7] = ($event: any) => {_ctx.addOperation(); _ctx.rebootAddOperationForm();}),\n            title: _ctx.$t('ADD')\n          }, null, 8, [\"title\"]))\n    ])\n  ]))\n}","\nimport { defineComponent } from 'vue'\nimport OperationService from '@/services/OperationService'\nimport { Category, MasterCategory, Operation, incomeCategoryId, transfertCategoryId } from '@/model/model'\nimport Time from '@/utils/Time'\nimport StoreHandler from '@/store/StoreHandler'\nimport Utils from '@/utils/Utils'\n\ninterface OperationFormData {\n  date: string;\n  categoryId: string;\n  memo: string;\n  incoming: boolean;\n  amount: number;\n}\n\nexport default defineComponent({\n  name: 'OperationForm',\n  data (): OperationFormData {\n    return {\n      date: this.operation ? Time.getDateStringFromDay(this.operation.day) : Time.getCurrentDateString(),\n      categoryId: this.operation?.categoryId || '',\n      memo: this.operation?.memo || '',\n      incoming: this.operation?.amount ? this.operation.amount > 0 : false,\n      amount: Utils.getEurosAmount(Math.abs(this.operation?.amount || 0))\n    }\n  },\n  props: {\n    accountId: {\n      type: String,\n      required: true\n    },\n    operation: {\n      type: Object as () => Operation\n    }\n  },\n  computed: {\n    incomeCategoryId (): string {\n      return incomeCategoryId\n    },\n    transfertCategoryId (): string {\n      return transfertCategoryId\n    },\n    signedCentsAmount (): number {\n      return Utils.getCentsAmount((this.incoming) ? Math.abs(this.amount) : Math.abs(this.amount) * -1)\n    }\n  },\n  emits: ['updateOperationList'],\n  methods: {\n    updateOperation () {\n      if (this.operation) {\n        OperationService.updateOperation(this.$store, this.operation, this.accountId, Time.getDayFromDateString(this.date), this.categoryId, this.signedCentsAmount, this.memo).then(\n          () => {\n            this.$emit('updateOperationList')\n          }\n        )\n      } else {\n        console.log('warning: tried to update without operation to update')\n      }\n    },\n    addOperation () {\n      OperationService.addOperation(this.$store, this.accountId, Time.getDayFromDateString(this.date), this.categoryId, this.signedCentsAmount, this.memo).then(\n        () => {\n          this.$emit('updateOperationList')\n        }\n      )\n    },\n    getCategoriesByMasterCategory (masterCategory: MasterCategory): Category[] {\n      return StoreHandler.getCategoriesByMasterCategory(this.$store, masterCategory, false)\n    },\n    getArchivedCategories (): Category[] {\n      return StoreHandler.getCategoriesByArchivedStatus(this.$store, true)\n    },\n    rebootAddOperationForm () {\n      this.memo = ''\n      this.amount = 0\n      this.categoryId = ''\n      this.incoming = false\n    }\n  }\n})\n","import { render } from \"./OperationForm.vue?vue&type=template&id=67186ffe&ts=true\"\nimport script from \"./OperationForm.vue?vue&type=script&lang=ts\"\nexport * from \"./OperationForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue'\nimport { redirectToLoginPageIfNotLogged } from '@/router'\nimport { Account, Category, Operation } from '@/model/model'\nimport Time from '@/utils/Time'\nimport StoreHandler from '@/store/StoreHandler'\nimport OperationService from '@/services/OperationService'\nimport AccountService from '@/services/AccountService'\nimport OperationForm from '@/components/forms/OperationForm.vue'\nimport Utils from '@/utils/Utils'\nimport BtnMenu from '@/components/ButtonMenu.vue'\n\ninterface AccountPageData {\n    operations: EditableOperation[];\n    name: string;\n    editingTitle: boolean;\n}\n\ninterface EditableOperation extends Operation {\n  editing: boolean;\n}\n\nexport default defineComponent({\n  name: 'AccountPage',\n  components: {\n    OperationForm,\n    BtnMenu\n  },\n  beforeCreate: async function () {\n    redirectToLoginPageIfNotLogged(this.$store)\n  },\n  created: async function () {\n    StoreHandler.initStore(this.$store)\n    this.getAccountOperation()\n  },\n  watch: {\n    account: async function () {\n      this.getAccountOperation()\n    }\n  },\n  props: {\n    accountId: {\n      type: String,\n      required: true\n    }\n  },\n  data (): AccountPageData {\n    return {\n      operations: [],\n      name: '',\n      editingTitle: false\n    }\n  },\n  computed: {\n    account (): Account | null {\n      for (const account of this.$store.state.accounts) {\n        if (account.id === this.accountId) {\n          return account\n        }\n      }\n      return null\n    },\n    currentName (): string {\n      return this.account?.name || ''\n    }\n  },\n  emits: ['loosesFocus'],\n  methods: {\n    async getAccountOperation () {\n      if (this.account) {\n        return OperationService.getOperations(this.account).then(\n          (operations) => {\n            this.operations = this.operationToEditableOperation(operations)\n          }\n        )\n      }\n    },\n    getDayAsDate (dayAsInt: number): Date {\n      return Time.getDateFromDay(dayAsInt)\n    },\n    deleteOperation (operation: Operation) {\n      OperationService.deleteOperation(this.$store, operation).then(() => {\n        this.getAccountOperation()\n      })\n    },\n    setAsEditing (operation: EditableOperation) {\n      operation.editing = true\n    },\n    operationToEditableOperation (operations: Operation[]): EditableOperation[] {\n      const editableOperations: EditableOperation[] = []\n      operations.forEach((operation) =>\n        editableOperations.push({\n          id: operation.id,\n          day: operation.day,\n          accountId: operation.accountId,\n          categoryId: operation.categoryId,\n          amount: operation.amount,\n          memo: operation.memo,\n          editing: false\n        })\n      )\n      return editableOperations\n    },\n    getCategoryById (categoryId: string): Category | null {\n      return StoreHandler.getCategoryById(this.$store, categoryId)\n    },\n    getEurosAmount (amount: number): number {\n      return Utils.getEurosAmount(amount)\n    },\n    updateName () {\n      AccountService.updateAccount(this.$store, this.accountId, this.name)\n      this.editingTitle = false\n    },\n    displayTitleEditing () {\n      this.editingTitle = true\n    },\n    cancelEditing () {\n      this.editingTitle = false\n    }\n  }\n})\n","import { render } from \"./AccountPage.vue?vue&type=template&id=435af5d5&ts=true\"\nimport script from \"./AccountPage.vue?vue&type=script&lang=ts\"\nexport * from \"./AccountPage.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router'\nimport Home from '../views/Home.vue'\nimport Login from '../views/Login.vue'\nimport Profile from '../views/Profile.vue'\nimport Signup from '../views/Signup.vue'\nimport RedirectAtAccountPage from '../views/RedirectAtAccountPage.vue'\nimport AccountPage from '../views/AccountPage.vue'\nimport { StoreState } from '@/store/index'\nimport { Store } from 'vuex'\nimport { AxiosError, AxiosResponse } from 'axios'\n\nexport enum RouterPages {\n  home = '/',\n  login = '/login',\n  signup = '/signup',\n  account = '/account',\n  about = '/about',\n  profile = '/profile',\n  redirectAtAccountPage = '/redirectAtAccountPage'\n}\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: RouterPages.home,\n    component: Home\n  },\n  {\n    path: RouterPages.login,\n    component: Login\n  },\n  {\n    path: RouterPages.signup,\n    component: Signup\n  },\n  {\n    path: RouterPages.profile,\n    component: Profile\n  },\n  {\n    path: RouterPages.redirectAtAccountPage,\n    component: RedirectAtAccountPage\n  },\n  {\n    path: RouterPages.account,\n    component: AccountPage,\n    props: route => ({ accountId: route.query.accountId })\n  },\n  {\n    path: RouterPages.about,\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/About.vue')\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nexport function redirectToLoginPageIfNotLogged (store: Store<StoreState>) {\n  if (!store.state.logged) {\n    router.push(RouterPages.login)\n  }\n}\n\nexport function redirectOnApiError (error: AxiosError) {\n  if (error.response!.status === 402) {\n    router.push(RouterPages.profile)\n  } else {\n    router.push(RouterPages.login)\n  }\n}\n\nexport default router\n","import { InjectionKey } from 'vue'\nimport { createStore, Store, useStore as baseUseStore } from 'vuex'\nimport SuperTokensRequest from 'supertokens-website/axios'\nimport { Budget, Account, Category, MasterCategory } from '@/model/model'\nimport StoreHandler from './StoreHandler'\n\nexport interface StoreState {\n  logged: boolean;\n  budget: Budget | null;\n  accounts: Account[];\n  categories: Category[];\n  masterCategories: MasterCategory[];\n  css: string;\n  storeLoaded: boolean;\n}\n\nexport const key: InjectionKey<Store<StoreState>> = Symbol('injectionKey')\n\nexport const store = createStore<StoreState>({\n  state: {\n    logged: SuperTokensRequest.doesSessionExist(),\n    budget: null,\n    accounts: [],\n    categories: [],\n    masterCategories: [],\n    css: 'default',\n    storeLoaded: false\n  },\n  mutations: {\n    updateLogged (state) {\n      state.logged = SuperTokensRequest.doesSessionExist()\n      if (state.logged) {\n        StoreHandler.initStore(store)\n      } else {\n        StoreHandler.resetStore(store)\n      }\n    },\n    updateBudget (state, budget: Budget) {\n      if (budget !== state.budget) {\n        state.budget = budget\n        StoreHandler.updateOnBudgetChange(store)\n      }\n    },\n    updateAccounts (state, accounts: Account[]) {\n      state.accounts = accounts\n    },\n    updateCategories (state, categories: Category[]) {\n      state.categories = categories.sort((a, b) => (a.name.toLowerCase() <= b.name.toLowerCase() ? -1 : 1))\n    },\n    updateMasterCategories (state, masterCategories: MasterCategory[]) {\n      state.masterCategories = masterCategories.sort((a, b) => (a.name.toLowerCase() <= b.name.toLowerCase() ? -1 : 1))\n    },\n    updateStoreLoaded (state, storeLoaded: boolean) {\n      state.storeLoaded = storeLoaded\n    }\n  },\n  actions: {\n    updateLogged (context) {\n      context.commit('updateLogged')\n    },\n    updateBudget (context, budget: Budget) {\n      context.commit('updateBudget', budget)\n    },\n    updateAccounts (context, accounts: Account[]) {\n      context.commit('updateAccounts', accounts)\n    },\n    updateCategories (context, categories: Category[]) {\n      context.commit('updateCategories', categories)\n    },\n    updateMasterCategories (context, masterCategories: MasterCategory[]) {\n      context.commit('updateMasterCategories', masterCategories)\n    },\n    updateStoreLoaded (context, storeLoaded: boolean) {\n      context.commit('updateStoreLoaded', storeLoaded)\n    }\n  },\n  modules: {\n  }\n})\n\nexport function useStore (): Store<StoreState> {\n  return baseUseStore(key)\n}\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport './registerServiceWorker'\nimport router from './router'\nimport { store, key } from './store'\nimport 'bootstrap'\nimport { createI18n } from 'vue-i18n'\nimport localeFR from '@/assets/locale/fr.json'\nimport localeEN from '@/assets/locale/en.json'\nimport localeDate from '@/assets/locale/dateformat.json'\nimport Properties from '@/../properties'\n\nconst messages = {\n  fr: localeFR,\n  en: localeEN\n}\n\nconst i18n = createI18n({ locale: 'fr', fallbackLocale: 'en', messages: messages, datetimeFormats: localeDate })\nconsole.log('version : ' + Properties.commitHash)\ncreateApp(App).use(store, key).use(router).use(i18n).mount('#app')\n","module.exports = __webpack_public_path__ + \"img/logo.0ca28574.png\";"],"sourceRoot":""}