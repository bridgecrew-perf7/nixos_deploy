{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/views/Signup.vue?a390","webpack:///./src/views/Login.vue?05bc","webpack:///./src/App.vue?d874","webpack:///./src/components/charts/BarChart.vue?b1bc","webpack:///./src/components/charts/BarChart.vue","webpack:///./src/components/charts/BarChart.vue?2edd","webpack:///./src/assets/logo_round.png","webpack:///./src/App.vue","webpack:///./src/App.vue?ae2f","webpack:///./src/registerServiceWorker.ts","webpack:///./src/views/Home.vue?44e0","webpack:///./properties.ts","webpack:///./src/services/api/openApi/base.ts","webpack:///./src/services/api/openApi/common.ts","webpack:///./src/services/api/openApi/api.ts","webpack:///./src/services/api/apis.ts","webpack:///./src/utils/Time.ts","webpack:///./src/services/AccountService.ts","webpack:///./src/services/BudgetService.ts","webpack:///./src/services/CategoryService.ts","webpack:///./src/services/MasterCategoryService.ts","webpack:///./src/services/PersonService.ts","webpack:///./src/store/StoreHandler.ts","webpack:///./src/components/BudgetCmpt.vue?44fd","webpack:///./src/services/BudgetDataService.ts","webpack:///./src/services/AllocationService.ts","webpack:///./src/model/model.ts","webpack:///./src/components/MasterCategoryCmpt.vue?fc0b","webpack:///./src/utils/Utils.ts","webpack:///./src/utils/Calcul.ts","webpack:///./src/components/forms/CategoryForm.vue?c2f7","webpack:///./src/components/forms/CategoryForm.vue","webpack:///./src/components/forms/CategoryForm.vue?d6e8","webpack:///./src/components/forms/MasterCategoryForm.vue?48b7","webpack:///./src/utils/Color.ts","webpack:///./src/components/forms/MasterCategoryForm.vue","webpack:///./src/components/forms/MasterCategoryForm.vue?434d","webpack:///./src/components/MasterCategoryCmpt.vue","webpack:///./src/components/MasterCategoryCmpt.vue?0a1b","webpack:///./src/components/headers/BudgetHeader.vue?d355","webpack:///./src/components/inputs/DateNavigation.vue?2cd2","webpack:///./src/components/inputs/DateNavigation.vue","webpack:///./src/components/inputs/DateNavigation.vue?1c20","webpack:///./src/components/headers/BudgetHeader.vue","webpack:///./src/components/headers/BudgetHeader.vue?5468","webpack:///./src/components/BudgetCmpt.vue","webpack:///./src/components/BudgetCmpt.vue?1b5e","webpack:///./src/components/AccountsWidget.vue?a237","webpack:///./src/components/forms/AccountCreationForm.vue?255a","webpack:///./src/components/forms/AccountCreationForm.vue","webpack:///./src/components/forms/AccountCreationForm.vue?6dc1","webpack:///./src/components/AccountsWidget.vue","webpack:///./src/components/AccountsWidget.vue?bb6f","webpack:///./src/components/utils/Loader.vue?3d00","webpack:///./src/components/utils/Loader.vue","webpack:///./src/components/utils/Loader.vue?bcc8","webpack:///./src/components/NavigationMenu.vue?3752","webpack:///./src/components/NavigationMenu.vue","webpack:///./src/components/NavigationMenu.vue?14f7","webpack:///./src/views/Home.vue","webpack:///./src/views/Home.vue?7720","webpack:///./src/views/Login.vue?fdde","webpack:///./src/views/Login.vue","webpack:///./src/views/Login.vue?c242","webpack:///./src/views/Profile.vue?38db","webpack:///./src/views/Profile.vue","webpack:///./src/views/Profile.vue?2d72","webpack:///./src/views/Banks.vue?6e90","webpack:///./src/services/BankingService.ts","webpack:///./src/views/Banks.vue","webpack:///./src/views/Banks.vue?254c","webpack:///./src/views/Signup.vue?6cb3","webpack:///./src/views/Signup.vue","webpack:///./src/views/Signup.vue?79f3","webpack:///./src/views/RedirectToAccountPage.vue?f6e5","webpack:///./src/views/RedirectToAccountPage.vue","webpack:///./src/views/RedirectToAccountPage.vue?d166","webpack:///./src/views/AccountPage.vue?5b08","webpack:///./src/services/OperationService.ts","webpack:///./src/components/forms/OperationForm.vue?1f87","webpack:///./src/components/forms/OperationForm.vue","webpack:///./src/components/forms/OperationForm.vue?5da4","webpack:///./src/components/headers/AccountPageHeader.vue?431b","webpack:///./src/components/headers/AccountPageHeader.vue","webpack:///./src/components/headers/AccountPageHeader.vue?d1bb","webpack:///./src/components/ImportOfx.vue?ec8a","webpack:///./src/components/ImportOfx.vue","webpack:///./src/components/ImportOfx.vue?c328","webpack:///./src/components/FilterCmpt.vue?5b82","webpack:///./src/components/FilterCmpt.vue","webpack:///./src/components/FilterCmpt.vue?40c4","webpack:///./src/views/AccountPage.vue","webpack:///./src/views/AccountPage.vue?f993","webpack:///./src/views/Subscription.vue?11c9","webpack:///./src/views/Subscription.vue","webpack:///./src/views/Subscription.vue?f4ac","webpack:///./src/views/ChartPage.vue?b777","webpack:///./src/components/headers/ChartPageHeader.vue?abcb","webpack:///./src/components/headers/ChartPageHeader.vue","webpack:///./src/components/headers/ChartPageHeader.vue?43ef","webpack:///./src/components/charts/PieChart.vue","webpack:///./src/components/charts/PieChart.vue?e5b1","webpack:///./src/components/inputs/RadioSelect.vue?a3e7","webpack:///./src/components/inputs/RadioSelect.vue","webpack:///./src/components/inputs/RadioSelect.vue?1d02","webpack:///./src/components/inputs/CheckboxSelect.vue?1bce","webpack:///./src/components/inputs/CheckboxSelect.vue","webpack:///./src/components/inputs/CheckboxSelect.vue?9ed9","webpack:///./src/views/ChartPage.vue","webpack:///./src/views/ChartPage.vue?7264","webpack:///./src/router/index.ts","webpack:///./src/store/index.ts","webpack:///./src/main.ts","webpack:///./src/assets/logo.png"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","render","_ctx","_cache","$props","$setup","$data","$options","_component_Bar","chartOptions","chartData","chartId","datasetIdKey","plugins","cssClasses","styles","width","height","register","components","Bar","props","String","default","Number","chartDataDefault","labels","datasets","label","backgroundColor","responsive","__exports__","class","ready","log","registered","cached","updatefound","updated","offline","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_component_BudgetCmpt","_component_AccountsWidget","_component_NavMenu","_component_Loader","this","$store","state","css","storeLoaded","month","currentMonth","page","Properties","makeSuper","superTokenAxios","init","refreshTokenUrl","refreshUrl","server","replace","configuration","basePath","axios","field","msg","DUMMY_BASE_URL","functionName","paramName","paramValue","setSearchParams","url","searchParams","URLSearchParams","search","objects","set","toString","serializeDataIfNeeded","requestOptions","nonString","needsSerialization","isJsonMime","headers","JSON","stringify","toPathString","pathname","hash","axiosArgs","globalAxios","BASE_PATH","axiosRequestArgs","options","addAccount","budgetId","amount","day","localVarPath","localVarUrlObj","URL","baseOptions","localVarRequestOptions","method","localVarHeaderParameter","localVarQueryParameter","query","headersFromBaseOptions","deleteAccount","accountId","findAccountsByBudget","updateAccount","updateAccountBankAssociation","importHistory","bankAccountId","localVarAxiosParamCreator","localVarAxiosArgs","addAllocation","categoryId","getAuthorizedAccounts","getAvailableBanks","getBankOperations","getLinkForBankAgreement","bankId","updateBankAccountList","bankAgreementId","addBudget","profile","deleteBudget","findBudgetsByUser","updateBudget","newName","findBudgetData","startMonth","endMonth","findTotalBudgetAmount","addCategory","masterCategoryId","getCategoriesByBudget","updateCategory","id","newMasterCategoryId","newArchived","newDeleted","addMasterCategory","getMasterCategoriesByBudget","updateMasterCategory","newColor","addOperation","memo","pending","motherOperationId","deleteOperation","operationId","findDaughterOperationsByMother","findMotherOperationsByAccount","findMotherOperationsByDaughter","findOperationsByAccount","findOperationsByBudget","importOfxFile","body","updateOperation","newAccountId","newDay","newCategoryId","newAmount","newMemo","newPending","newMotherOperationId","createBillingPortalSession","_package","createPerson","password","email","createSession","deleteSession","getPerson","updatePerson","newStyle","newDyslexia","personApi","budgetApi","budgetDataApi","accountApi","operationApi","allocationApi","categoryApi","masterCategoryApi","bankingApi","dateTime","Date","year","getFullYear","getMonth","monthAsInt","getDayFromDate","getCurrentDate","formatDate","date","setDate","setMonth","setFullYear","getDate","dateString","dayAsInt","getMonthAsDate","getDateFromDay","currentYear","timestamp","toISOString","split","budget","response","store","getCurrentDay","updateAccounts","catch","redirectOnApiError","masterCategory","dispatch","RouterPages","home","a","isAxiosError","parse","alert","selectedPackage","billingPortalUrl","location","redirectToLoginPageIfNotLogged","initBudget","initPerson","updateMasterCategories","updateCategories","getAccounts","accounts","getCategories","categories","getMasterCategories","masterCategories","getDefaultBudget","category","archived","account","person","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_component_BudgetHeader","_component_MasterCategoryCmpt","budgetMonth","totalAllocated","totalSpent","totalAvailable","money","moneyToAllocate","onChangeMonth","changeMonth","edit","onClick","saveChange","$t","editFunction","$event","createMasterCategory","onUpdateAllocation","updateAllocation","onEmptyCategory","emptyCategory","onEmptyMasterCategory","emptyMasterCategory","categoryDataList","archiveVisible","allocated","spent","available","newMasterCategoryName","newCategoryName","_hoisted_15","_component_MasterCategoryForm","_component_CategoryForm","onCreateCategory","createCategory","style","addSpacesInThousand","getEurosAmount","masterCategoryData","onEmptyEnvelope","emptyEnvelope","onChange","updateAllocationOnChange","entireCalcul","centsAmount","eurosAmount","Math","round","number","indexOf","parsed","calculation","newCalculation","includes","numberParenthesis","validityParenthesis","listParenthesis","separateParenthesis","calculParenthesis","basicCalcul","lastIndexOf","subtraction","addition","multiplication","division","parseComma","position","before","substring","after","counter","charAt","list","Array","indexList","indexInvers","indexParenthesis","ecart","priority","newList","unarchiveCategory","changeName","archiveCategory","required","emits","methods","$emit","unarchiveMasterCategory","color","colorPicker","removeColor","validColor","chooseColor","archiveMasterCategory","allocatedColor","spentColor","availableColor","redColor","blueColor","orangeColor","purpleColor","greenColor","yellowColor","navyColor","pinkColor","brownColor","blackColor","lightGreyColor","darkGreyColor","lightGreenColor","salmonColor","lavenderColor","bordeauxColor","navigationColor","percent","R","parseInt","G","B","RR","GG","BB","computed","shadeColor","renameMasterCategory","updateColorMasterCategory","CategoryForm","MasterCategoryForm","Boolean","getCategoriesByMasterCategory","getCentsAmount","_component_DateNav","fromPage","goToLastMonth","toBeBudgetedClass","$d","selectedMonth","isThisYear","goToNextMonth","getCurrentMonth","monthIsThisYear","getNextMonth","getLastMonth","DateNav","budgetMoney","MasterCategoryCmpt","BudgetHeader","created","getBudgetData","watch","formerAllocations","amountInBudget","totalBudgetData","toBeBudgeted","getBudgetDataForMonth","initFormerAllocation","getBudgetAmount","newAllocation","getMasterCategoryById","forEach","_component_AccountCreationForm","totalOnAccounts","goToAccountPage","accountCreationFormIsDisplayed","onUpdateAccountList","onCloseForm","changeAccountCreationFormDisplay","closeForm","placeholder","amountString","createAccount","AccountCreationForm","total","path","title","goHomePage","goChooseAccount","goChartPage","goProfilePage","redirectToAccountPage","chartPage","beforeCreate","initStore","BudgetCmpt","AccountsWidget","Loader","NavMenu","logout","goToProfile","_withId","alt","login","errorMsg","goToSignUp","responseData","unlockingDate","minutes","lockingDuration","getTime","signup","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","goToSubscriptionPage","goToBanksPage","subscription","banks","selected","for","_component_Multiselect","bankAssociation","bankAccounts","bankAccount","displayImportHistoryOption","saveAssociation","authorizedBanks","timestampList","getLogo","bankAccountArray","getExpirationDateFromTimestamp","modelValue","selectedBankId","groups","searchable","bankOptions","noResultsText","getBankAuthorization","bankAgreemendId","agreementUrl","Multiselect","updateIfAgreement","updateAssociationData","availableBanks","groupAccountByBankAndTimestamp","optionsList","bank","option","bankList","bankAccountList","goToBankAgreement","agreementId","bankIdList","timeStampList","logo","expirationTimestamp","after90Days","getDateStringFromTimestamp","disabled","passwordConfirm","goToLogin","logged","testForm","regex","passwordCheckSecurity","match","regExp","validPassword","test","_hoisted_23","_hoisted_24","_component_AccountPageHeader","_component_ImportOfx","_component_OperationForm","_component_FilterCmpt","totalAccount","existingPendingOperation","pendingOperation","realAmountOnAccount","realAmount","manualBloc","switchAddOperation","importBloc","onCloseImport","closeImport","onUpdateOperationList","getAccountOperation","onClickFilterButton","filterBloc","onCloseFilter","closeFilter","onFilteringCategory","filter","operations","operation","editing","onCloseUpdate","closeUpdate","daughters","setAsEditing","getDayAsDate","getClassDependingCategory","getCategoryById","getClassDependingOnAmount","filteringCategoryId","debited","daughter","getClassDependingCategoryDaughter","isPending","motheroperationId","ofxFileContent","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_component_btn","dataOperation","operationsData","incoming","_","rebootAddOperationForm","totalAmount","daughterOperation","removeCategory","updateOperationMultipleCategories","addOperationMultipleCategories","getDateStringFromDay","getCurrentDateString","abs","newOperationsData","incomeCategoryId","transfertCategoryId","allAccounts","createOptionTransfer","createOptionGroup","getAccountById","sum","getDayFromDateString","signedCentsAmount","accountForTransfer","categoryForTransfer","group","debitedAccount","creditedAccount","newOperationData","index","motherOperation","amountCent","getDaughtersFromMother","daughtersDB","difference","daughterOperations","editingTitle","currentName","updateName","cancelEditing","displayRealAmount","displayTitleEditing","displayAmount","fileImported","nbOperationImported","fileSelected","onFileChange","fileOfx","file","files","fr","FileReader","readAsText","evt","ofx","OperationForm","AccountPageHeader","ImportOfx","FilterCmpt","getDaughterOperations","getMotherOperationsByAccount","operationToEditableOperation","getAccountOperationFilter","getOperations","filteredOperations","getMotherFromDaughter","mother","editableOperations","operationPending","validSubscription","managementPage","billingStatus","getInformation","changePage","goToContactPage","goToBillingPortal","hasBillingId","redirectToBillingPortalUrl","manageSubscription","_component_ChartPageHeader","_component_PieChart","_component_BarChart","_component_RadioSelect","_component_CheckboxSelect","onChangeGraph","changeGraph","deficitMessage","currentGraph","pieChartData","barChartData","choices","choicesTypeInformationPie","onHadSelection","changeTypeInformationPie","choicesTypeInformationBar","changeTypeInformationBar","recalculate","onSelect","chart-options","chart-data","chart-id","dataset-id-key","css-classes","Pie","maintainAspectRatio","element","preSelected","checked","ChartPageHeader","BarChart","PieChart","RadioSelect","CheckboxSelect","getcolorsMasterCategories","typeInformationPie","drawPieChart","typeInformationBar","drawBarChart","deficitCategories","writeAlertMessage","predefinedListColor","colorListMasterCategories","newOption","getLegend","masterCategorySelectedId","listName","masterCategorySelected","archivedCategories","getDatas","listData","getCategoryDatas","indexColor","getColorsBarChart","labelList","dataList","colorList","getBarDatasets","legend","newDatasets","newGraph","newTypeInformationPie","newTypeInformationBar","routes","component","Home","Login","Signup","Profile","Banks","route","RedirectToAccountPage","Subscription","invalidSubscription","AccountPage","about","ChartPage","router","history","status","doesSessionExist","mutations","updateLogged","resetStore","updateOnBudgetChange","sort","b","toLowerCase","updateStoreLoaded","actions","context","commit","messages","en","i18n","locale","fallbackLocale","datetimeFormats","commitHash","App","use","mount"],"mappings":"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","file":"js/app.36ad0ecc.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"about\":\"about\"}[chunkId]||chunkId) + \".\" + {\"about\":\"a6df1809\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"about\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({\"about\":\"about\"}[chunkId]||chunkId) + \".\" + {\"about\":\"4e769f7e\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Signup.vue?vue&type=style&index=0&id=67025d24&scoped=true&lang=less\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Login.vue?vue&type=style&index=0&id=86160200&scoped=true&lang=less\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!./App.vue?vue&type=style&index=0&id=53551e04&lang=less\"","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Bar = _resolveComponent(\"Bar\")\n\n  return (_openBlock(), _createBlock(_component_Bar, {\n    \"chart-options\": $data.chartOptions,\n    \"chart-data\": $props.chartData,\n    \"chart-id\": $props.chartId,\n    \"dataset-id-key\": $props.datasetIdKey,\n    plugins: $props.plugins,\n    \"css-classes\": $props.cssClasses,\n    styles: $props.styles,\n    width: $props.width,\n    height: $props.height\n  }, null, 8, [\"chart-options\", \"chart-data\", \"chart-id\", \"dataset-id-key\", \"plugins\", \"css-classes\", \"styles\", \"width\", \"height\"]))\n}","\n\nimport { Bar } from 'vue-chartjs'\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js'\nimport pattern from 'patternomaly'\n\ninterface BarChartData {\n    chartDataDefault: Record<string, any>;\n    chartOptions: Record<string, any>;\n}\n\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale)\n\nexport default {\n  name: 'BarChart',\n  components: { Bar },\n  props: {\n    chartData: {\n      type: Object\n    },\n    chartId: {\n      type: String,\n      default: 'bar-chart'\n    },\n    datasetIdKey: {\n      type: String,\n      default: 'label'\n    },\n    width: {\n      type: Number,\n      default: 400\n    },\n    height: {\n      type: Number,\n      default: 400\n    },\n    cssClasses: {\n      default: '',\n      type: String\n    },\n    styles: {\n      type: Object\n    },\n    plugins: {\n      type: Object\n    }\n  },\n  data (): BarChartData {\n    return {\n      chartDataDefault: {\n        labels: [],\n        datasets: [\n          {\n            label: '',\n            backgroundColor: '',\n            data: []\n          }\n        ]\n      },\n      chartOptions: {\n        responsive: true\n      }\n    }\n  }\n}\n","import { render } from \"./BarChart.vue?vue&type=template&id=079b6be4&ts=true\"\nimport script from \"./BarChart.vue?vue&type=script&lang=ts\"\nexport * from \"./BarChart.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","module.exports = __webpack_public_path__ + \"img/logo_round.87e0efea.png\";","<template>\n<div class=\"main container-fluid\">\n  <div class=\"main-row\">\n  <router-view/>\n  </div>\n</div>\n</template>\n<style lang=\"less\">\n.main {\n  height: 100vh;\n};\n.main-row {\n  height: 100%;\n};\n@import \"~bootstrap/dist/css/bootstrap.min.css\";\n@import \"style/atomic_design/atomic_design.less\";\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=53551e04\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=53551e04&lang=less\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"row\" }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { class: \"home\" }\nconst _hoisted_4 = { class: \"col-3 offset-1 col-xl-3 offset-xl-1 col-xxl-3 offset-xxl-1\" }\nconst _hoisted_5 = { class: \"accountWidgetAtHome\" }\nconst _hoisted_6 = { key: 1 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_BudgetCmpt = _resolveComponent(\"BudgetCmpt\")\n  const _component_AccountsWidget = _resolveComponent(\"AccountsWidget\")\n  const _component_NavMenu = _resolveComponent(\"NavMenu\")\n  const _component_Loader = _resolveComponent(\"Loader\")\n\n  return (_openBlock(), _createBlock(\"div\", {\n    class: this.$store.state.css\n  }, [\n    _createVNode(\"div\", _hoisted_1, [\n      (this.$store.state.storeLoaded)\n        ? (_openBlock(), _createBlock(\"div\", _hoisted_2, [\n            _createVNode(\"div\", _hoisted_3, [\n              _createVNode(_component_BudgetCmpt, {\n                month: this.currentMonth\n              }, null, 8, [\"month\"]),\n              _createVNode(\"div\", _hoisted_4, [\n                _createVNode(\"div\", _hoisted_5, [\n                  _createVNode(_component_AccountsWidget, { page: 'home' })\n                ]),\n                _createVNode(_component_NavMenu, { page: 'home' })\n              ])\n            ])\n          ]))\n        : (_openBlock(), _createBlock(\"div\", _hoisted_6, [\n            _createVNode(_component_Loader, { class: \"loader\" })\n          ]))\n    ])\n  ], 2))\n}","enum Properties {\n    server = 'https://api.agatha-budget.fr/',\n    refreshUrl = 'https://api.agatha-budget.fr/session/refresh',\n    commitHash = '29c3c0a12d4ba9941aeda3fc9496b98370763a9d'\n}\n\nexport default Properties\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Tresorier\n * Trésorier api front to back\n *\n * The version of the OpenAPI document: 2.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport { Configuration } from \"./configuration\";\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport SuperTokensRequest from 'supertokens-website/axios';\nimport Properties from '@/../properties';\n\n\nSuperTokensRequest.makeSuper(globalAxios);\nexport const superTokenAxios = globalAxios;\n\nSuperTokensRequest.init({\n    refreshTokenUrl: Properties.refreshUrl\n});\n\nexport const BASE_PATH = Properties.server.replace(/\\/+$/, \"\");\n\n/**\n *\n * @export\n */\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\n/**\n *\n * @export\n * @interface RequestArgs\n */\nexport interface RequestArgs {\n    url: string;\n    options: any;\n}\n\n/**\n *\n * @export\n * @class BaseAPI\n */\nexport class BaseAPI {\n    protected configuration: Configuration | undefined;\n\n    constructor(configuration?: Configuration, protected basePath: string = BASE_PATH, protected axios: AxiosInstance = superTokenAxios) {\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath || this.basePath;\n        }\n    }\n};\n\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nexport class RequiredError extends Error {\n    name: \"RequiredError\" = \"RequiredError\";\n    constructor(public field: string, msg?: string) {\n        super(msg);\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Tresorier\n * Trésorier api front to back\n *\n * The version of the OpenAPI document: 2.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport { Configuration } from \"./configuration\";\nimport { RequiredError,　RequestArgs } from \"./base\";\nimport { AxiosInstance } from 'axios';\n\n/**\n *\n * @export\n */\nexport const DUMMY_BASE_URL = 'https://example.com'\n\n/**\n *\n * @throws {RequiredError}\n * @export\n */\nexport const assertParamExists = function (functionName: string, paramName: string, paramValue: unknown) {\n    if (paramValue === null || paramValue === undefined) {\n        throw new RequiredError(paramName, `Required parameter ${paramName} was null or undefined when calling ${functionName}.`);\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setApiKeyToObject = async function (object: any, keyParamName: string, configuration?: Configuration) {\n    if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue = typeof configuration.apiKey === 'function'\n            ? await configuration.apiKey(keyParamName)\n            : await configuration.apiKey;\n        object[keyParamName] = localVarApiKeyValue;\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setBasicAuthToObject = function (object: any, configuration?: Configuration) {\n    if (configuration && (configuration.username || configuration.password)) {\n        object[\"auth\"] = { username: configuration.username, password: configuration.password };\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setBearerAuthToObject = async function (object: any, configuration?: Configuration) {\n    if (configuration && configuration.accessToken) {\n        const accessToken = typeof configuration.accessToken === 'function'\n            ? await configuration.accessToken()\n            : await configuration.accessToken;\n        object[\"Authorization\"] = \"Bearer \" + accessToken;\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setOAuthToObject = async function (object: any, name: string, scopes: string[], configuration?: Configuration) {\n    if (configuration && configuration.accessToken) {\n        const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n            ? await configuration.accessToken(name, scopes)\n            : await configuration.accessToken;\n        object[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setSearchParams = function (url: URL, ...objects: any[]) {\n    const searchParams = new URLSearchParams(url.search);\n    for (const object of objects) {\n        for (const key in object) {\n            searchParams.set(key, object[key]);\n        }\n    }\n    url.search = searchParams.toString();\n}\n\n/**\n *\n * @export\n */\nexport const serializeDataIfNeeded = function (value: any, requestOptions: any, configuration?: Configuration) {\n    const nonString = typeof value !== 'string';\n    const needsSerialization = nonString && configuration && configuration.isJsonMime\n        ? configuration.isJsonMime(requestOptions.headers['Content-Type'])\n        : nonString;\n    return needsSerialization\n        ? JSON.stringify(value !== undefined ? value : {})\n        : (value || \"\");\n}\n\n/**\n *\n * @export\n */\nexport const toPathString = function (url: URL) {\n    return url.pathname + url.search + url.hash\n}\n\n/**\n *\n * @export\n */\nexport const createRequestFunction = function (axiosArgs: RequestArgs, globalAxios: AxiosInstance, BASE_PATH: string, configuration?: Configuration) {\n    return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n        const axiosRequestArgs = {...axiosArgs.options, url: (configuration?.basePath || basePath) + axiosArgs.url};\n        return axios.request(axiosRequestArgs);\n    };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Tresorier\n * Trésorier api front to back\n *\n * The version of the OpenAPI document: 2.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport { Configuration } from './configuration';\nimport { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError, superTokenAxios as globalAxios} from './base';\n\n/**\n * \n * @export\n * @interface Account\n */\nexport interface Account {\n    /**\n     * \n     * @type {string}\n     * @memberof Account\n     */\n    name: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Account\n     */\n    id: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Account\n     */\n    amount: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Account\n     */\n    bankAccountId?: string;\n}\n/**\n * \n * @export\n * @interface Allocation\n */\nexport interface Allocation {\n    /**\n     * \n     * @type {number}\n     * @memberof Allocation\n     */\n    month: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Allocation\n     */\n    categoryId: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Allocation\n     */\n    amount: number;\n}\n/**\n * \n * @export\n * @interface Bank\n */\nexport interface Bank {\n    /**\n     * \n     * @type {string}\n     * @memberof Bank\n     */\n    name: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Bank\n     */\n    id: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Bank\n     */\n    logo: string;\n}\n/**\n * \n * @export\n * @interface BankAccount\n */\nexport interface BankAccount {\n    /**\n     * \n     * @type {string}\n     * @memberof BankAccount\n     */\n    id: string;\n    /**\n     * \n     * @type {string}\n     * @memberof BankAccount\n     */\n    name: string;\n    /**\n     * \n     * @type {string}\n     * @memberof BankAccount\n     */\n    bankId: string;\n    /**\n     * \n     * @type {number}\n     * @memberof BankAccount\n     */\n    timestamp: number;\n}\n/**\n * \n * @export\n * @interface Budget\n */\nexport interface Budget {\n    /**\n     * \n     * @type {string}\n     * @memberof Budget\n     */\n    id: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Budget\n     */\n    name: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Budget\n     */\n    profile: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Budget\n     */\n    isDefault?: boolean;\n}\n/**\n * \n * @export\n * @interface Category\n */\nexport interface Category {\n    /**\n     * \n     * @type {string}\n     * @memberof Category\n     */\n    name: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Category\n     */\n    id: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Category\n     */\n    masterCategoryId: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Category\n     */\n    archived: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Category\n     */\n    deleted: boolean;\n}\n/**\n * \n * @export\n * @interface CategoryData\n */\nexport interface CategoryData {\n    /**\n     * \n     * @type {number}\n     * @memberof CategoryData\n     */\n    allocated: number;\n    /**\n     * \n     * @type {number}\n     * @memberof CategoryData\n     */\n    spent: number;\n    /**\n     * \n     * @type {number}\n     * @memberof CategoryData\n     */\n    available: number;\n}\n/**\n * \n * @export\n * @interface MasterCategory\n */\nexport interface MasterCategory {\n    /**\n     * \n     * @type {string}\n     * @memberof MasterCategory\n     */\n    name: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MasterCategory\n     */\n    id: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MasterCategory\n     */\n    budgetId: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof MasterCategory\n     */\n    deleted: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof MasterCategory\n     */\n    color: string;\n}\n/**\n * \n * @export\n * @interface Operation\n */\nexport interface Operation {\n    /**\n     * \n     * @type {string}\n     * @memberof Operation\n     */\n    id: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Operation\n     */\n    day: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Operation\n     */\n    accountId: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Operation\n     */\n    categoryId: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Operation\n     */\n    amount: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Operation\n     */\n    memo: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Operation\n     */\n    pending: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof Operation\n     */\n    motherOperationId: string;\n}\n/**\n * \n * @export\n * @interface Person\n */\nexport interface Person {\n    /**\n     * \n     * @type {string}\n     * @memberof Person\n     */\n    name: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Person\n     */\n    email: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Person\n     */\n    billingStatus: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof Person\n     */\n    style: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Person\n     */\n    dyslexia: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof Person\n     */\n    creationDate: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Person\n     */\n    hasBillingId: boolean;\n}\n/**\n * \n * @export\n * @interface PostIt\n */\nexport interface PostIt {\n    /**\n     * \n     * @type {number}\n     * @memberof PostIt\n     */\n    month: number;\n    /**\n     * \n     * @type {string}\n     * @memberof PostIt\n     */\n    budgetId: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PostIt\n     */\n    text: string;\n}\n\n/**\n * AccountApi - axios parameter creator\n * @export\n */\nexport const AccountApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Add a new account\n         * @param {string} budgetId \n         * @param {string} name \n         * @param {number} amount \n         * @param {number} day day as seen by user in his/her timezone, format : 2 january 2021 &#x3D;&gt; 20210102\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addAccount: async (budgetId: string, name: string, amount: number, day: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('addAccount', 'budgetId', budgetId)\n            // verify required parameter 'name' is not null or undefined\n            assertParamExists('addAccount', 'name', name)\n            // verify required parameter 'amount' is not null or undefined\n            assertParamExists('addAccount', 'amount', amount)\n            // verify required parameter 'day' is not null or undefined\n            assertParamExists('addAccount', 'day', day)\n            const localVarPath = `/account`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budget_id'] = budgetId;\n            }\n\n            if (name !== undefined) {\n                localVarQueryParameter['name'] = name;\n            }\n\n            if (amount !== undefined) {\n                localVarQueryParameter['amount'] = amount;\n            }\n\n            if (day !== undefined) {\n                localVarQueryParameter['day'] = day;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Delete account\n         * @param {string} accountId id of the account you want to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteAccount: async (accountId: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'accountId' is not null or undefined\n            assertParamExists('deleteAccount', 'accountId', accountId)\n            const localVarPath = `/account`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (accountId !== undefined) {\n                localVarQueryParameter['account_id'] = accountId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Finds accounts by budget\n         * @param {string} budgetId id of the budget whose accounts you want to retrieve\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findAccountsByBudget: async (budgetId: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('findAccountsByBudget', 'budgetId', budgetId)\n            const localVarPath = `/account/budget`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budget_id'] = budgetId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Rename an account\n         * @param {string} accountId \n         * @param {string} [name] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateAccount: async (accountId: string, name?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'accountId' is not null or undefined\n            assertParamExists('updateAccount', 'accountId', accountId)\n            const localVarPath = `/account`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (accountId !== undefined) {\n                localVarQueryParameter['account_id'] = accountId;\n            }\n\n            if (name !== undefined) {\n                localVarQueryParameter['name'] = name;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary edit bank association\n         * @param {string} accountId \n         * @param {boolean} importHistory \n         * @param {string} [bankAccountId] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateAccountBankAssociation: async (accountId: string, importHistory: boolean, bankAccountId?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'accountId' is not null or undefined\n            assertParamExists('updateAccountBankAssociation', 'accountId', accountId)\n            // verify required parameter 'importHistory' is not null or undefined\n            assertParamExists('updateAccountBankAssociation', 'importHistory', importHistory)\n            const localVarPath = `/account/bank`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (accountId !== undefined) {\n                localVarQueryParameter['account_id'] = accountId;\n            }\n\n            if (bankAccountId !== undefined) {\n                localVarQueryParameter['bank_account_id'] = bankAccountId;\n            }\n\n            if (importHistory !== undefined) {\n                localVarQueryParameter['import_history'] = importHistory;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * AccountApi - functional programming interface\n * @export\n */\nexport const AccountApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = AccountApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new account\n         * @param {string} budgetId \n         * @param {string} name \n         * @param {number} amount \n         * @param {number} day day as seen by user in his/her timezone, format : 2 january 2021 &#x3D;&gt; 20210102\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async addAccount(budgetId: string, name: string, amount: number, day: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.addAccount(budgetId, name, amount, day, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Delete account\n         * @param {string} accountId id of the account you want to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async deleteAccount(accountId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteAccount(accountId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Finds accounts by budget\n         * @param {string} budgetId id of the budget whose accounts you want to retrieve\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async findAccountsByBudget(budgetId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Account>>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.findAccountsByBudget(budgetId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Rename an account\n         * @param {string} accountId \n         * @param {string} [name] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async updateAccount(accountId: string, name?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.updateAccount(accountId, name, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary edit bank association\n         * @param {string} accountId \n         * @param {boolean} importHistory \n         * @param {string} [bankAccountId] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async updateAccountBankAssociation(accountId: string, importHistory: boolean, bankAccountId?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.updateAccountBankAssociation(accountId, importHistory, bankAccountId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n    }\n};\n\n/**\n * AccountApi - factory interface\n * @export\n */\nexport const AccountApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = AccountApiFp(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new account\n         * @param {string} budgetId \n         * @param {string} name \n         * @param {number} amount \n         * @param {number} day day as seen by user in his/her timezone, format : 2 january 2021 &#x3D;&gt; 20210102\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addAccount(budgetId: string, name: string, amount: number, day: number, options?: any): AxiosPromise<string> {\n            return localVarFp.addAccount(budgetId, name, amount, day, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Delete account\n         * @param {string} accountId id of the account you want to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteAccount(accountId: string, options?: any): AxiosPromise<string> {\n            return localVarFp.deleteAccount(accountId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Finds accounts by budget\n         * @param {string} budgetId id of the budget whose accounts you want to retrieve\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findAccountsByBudget(budgetId: string, options?: any): AxiosPromise<Array<Account>> {\n            return localVarFp.findAccountsByBudget(budgetId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Rename an account\n         * @param {string} accountId \n         * @param {string} [name] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateAccount(accountId: string, name?: string, options?: any): AxiosPromise<string> {\n            return localVarFp.updateAccount(accountId, name, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary edit bank association\n         * @param {string} accountId \n         * @param {boolean} importHistory \n         * @param {string} [bankAccountId] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateAccountBankAssociation(accountId: string, importHistory: boolean, bankAccountId?: string, options?: any): AxiosPromise<string> {\n            return localVarFp.updateAccountBankAssociation(accountId, importHistory, bankAccountId, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * AccountApi - object-oriented interface\n * @export\n * @class AccountApi\n * @extends {BaseAPI}\n */\nexport class AccountApi extends BaseAPI {\n    /**\n     * \n     * @summary Add a new account\n     * @param {string} budgetId \n     * @param {string} name \n     * @param {number} amount \n     * @param {number} day day as seen by user in his/her timezone, format : 2 january 2021 &#x3D;&gt; 20210102\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountApi\n     */\n    public addAccount(budgetId: string, name: string, amount: number, day: number, options?: any) {\n        return AccountApiFp(this.configuration).addAccount(budgetId, name, amount, day, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Delete account\n     * @param {string} accountId id of the account you want to delete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountApi\n     */\n    public deleteAccount(accountId: string, options?: any) {\n        return AccountApiFp(this.configuration).deleteAccount(accountId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Finds accounts by budget\n     * @param {string} budgetId id of the budget whose accounts you want to retrieve\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountApi\n     */\n    public findAccountsByBudget(budgetId: string, options?: any) {\n        return AccountApiFp(this.configuration).findAccountsByBudget(budgetId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Rename an account\n     * @param {string} accountId \n     * @param {string} [name] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountApi\n     */\n    public updateAccount(accountId: string, name?: string, options?: any) {\n        return AccountApiFp(this.configuration).updateAccount(accountId, name, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary edit bank association\n     * @param {string} accountId \n     * @param {boolean} importHistory \n     * @param {string} [bankAccountId] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccountApi\n     */\n    public updateAccountBankAssociation(accountId: string, importHistory: boolean, bankAccountId?: string, options?: any) {\n        return AccountApiFp(this.configuration).updateAccountBankAssociation(accountId, importHistory, bankAccountId, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n/**\n * AllocationApi - axios parameter creator\n * @export\n */\nexport const AllocationApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Add a new allocation or update an existing one\n         * @param {number} month day of the operation (march 2010 &#x3D;&gt; 201003)\n         * @param {string} categoryId \n         * @param {number} amount \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addAllocation: async (month: number, categoryId: string, amount: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'month' is not null or undefined\n            assertParamExists('addAllocation', 'month', month)\n            // verify required parameter 'categoryId' is not null or undefined\n            assertParamExists('addAllocation', 'categoryId', categoryId)\n            // verify required parameter 'amount' is not null or undefined\n            assertParamExists('addAllocation', 'amount', amount)\n            const localVarPath = `/allocation`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (month !== undefined) {\n                localVarQueryParameter['month'] = month;\n            }\n\n            if (categoryId !== undefined) {\n                localVarQueryParameter['category_id'] = categoryId;\n            }\n\n            if (amount !== undefined) {\n                localVarQueryParameter['amount'] = amount;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * AllocationApi - functional programming interface\n * @export\n */\nexport const AllocationApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = AllocationApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new allocation or update an existing one\n         * @param {number} month day of the operation (march 2010 &#x3D;&gt; 201003)\n         * @param {string} categoryId \n         * @param {number} amount \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async addAllocation(month: number, categoryId: string, amount: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Allocation>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.addAllocation(month, categoryId, amount, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n    }\n};\n\n/**\n * AllocationApi - factory interface\n * @export\n */\nexport const AllocationApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = AllocationApiFp(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new allocation or update an existing one\n         * @param {number} month day of the operation (march 2010 &#x3D;&gt; 201003)\n         * @param {string} categoryId \n         * @param {number} amount \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addAllocation(month: number, categoryId: string, amount: number, options?: any): AxiosPromise<Allocation> {\n            return localVarFp.addAllocation(month, categoryId, amount, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * AllocationApi - object-oriented interface\n * @export\n * @class AllocationApi\n * @extends {BaseAPI}\n */\nexport class AllocationApi extends BaseAPI {\n    /**\n     * \n     * @summary Add a new allocation or update an existing one\n     * @param {number} month day of the operation (march 2010 &#x3D;&gt; 201003)\n     * @param {string} categoryId \n     * @param {number} amount \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AllocationApi\n     */\n    public addAllocation(month: number, categoryId: string, amount: number, options?: any) {\n        return AllocationApiFp(this.configuration).addAllocation(month, categoryId, amount, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n/**\n * BankingApi - axios parameter creator\n * @export\n */\nexport const BankingApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary get authorized accounts list\n         * @param {string} budgetId budget\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getAuthorizedAccounts: async (budgetId: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('getAuthorizedAccounts', 'budgetId', budgetId)\n            const localVarPath = `/bank/accounts`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication accessToken required\n\n            // authentication refreshTokenId required\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budgetId'] = budgetId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary get availables banks list\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getAvailableBanks: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/banks`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary getBankOperations\n         * @param {string} [accountId] to synchronise a specific account\n         * @param {string} [budgetId] to synchronise all accounts from a budget (ignored if accountId is set)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getBankOperations: async (accountId?: string, budgetId?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/bank/operations`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication accessToken required\n\n            // authentication refreshTokenId required\n\n            if (accountId !== undefined) {\n                localVarQueryParameter['accountId'] = accountId;\n            }\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budgetId'] = budgetId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary get bank agreement portal URL\n         * @param {string} bankId identifier of the wanted bank\n         * @param {string} budgetId id of the current budget\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getLinkForBankAgreement: async (bankId: string, budgetId: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'bankId' is not null or undefined\n            assertParamExists('getLinkForBankAgreement', 'bankId', bankId)\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('getLinkForBankAgreement', 'budgetId', budgetId)\n            const localVarPath = `/banking`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication accessToken required\n\n            // authentication refreshTokenId required\n\n            if (bankId !== undefined) {\n                localVarQueryParameter['bankId'] = bankId;\n            }\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budgetId'] = budgetId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary updateBankingInfo\n         * @param {string} bankAgreementId identifier of the wanted bank\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateBankAccountList: async (bankAgreementId: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'bankAgreementId' is not null or undefined\n            assertParamExists('updateBankAccountList', 'bankAgreementId', bankAgreementId)\n            const localVarPath = `/banking`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication accessToken required\n\n            // authentication refreshTokenId required\n\n            if (bankAgreementId !== undefined) {\n                localVarQueryParameter['bankAgreementId'] = bankAgreementId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * BankingApi - functional programming interface\n * @export\n */\nexport const BankingApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = BankingApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @summary get authorized accounts list\n         * @param {string} budgetId budget\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getAuthorizedAccounts(budgetId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<BankAccount>>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.getAuthorizedAccounts(budgetId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary get availables banks list\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getAvailableBanks(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Bank>>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.getAvailableBanks(options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary getBankOperations\n         * @param {string} [accountId] to synchronise a specific account\n         * @param {string} [budgetId] to synchronise all accounts from a budget (ignored if accountId is set)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getBankOperations(accountId?: string, budgetId?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.getBankOperations(accountId, budgetId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary get bank agreement portal URL\n         * @param {string} bankId identifier of the wanted bank\n         * @param {string} budgetId id of the current budget\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getLinkForBankAgreement(bankId: string, budgetId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.getLinkForBankAgreement(bankId, budgetId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary updateBankingInfo\n         * @param {string} bankAgreementId identifier of the wanted bank\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async updateBankAccountList(bankAgreementId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.updateBankAccountList(bankAgreementId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n    }\n};\n\n/**\n * BankingApi - factory interface\n * @export\n */\nexport const BankingApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = BankingApiFp(configuration)\n    return {\n        /**\n         * \n         * @summary get authorized accounts list\n         * @param {string} budgetId budget\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getAuthorizedAccounts(budgetId: string, options?: any): AxiosPromise<Array<BankAccount>> {\n            return localVarFp.getAuthorizedAccounts(budgetId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary get availables banks list\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getAvailableBanks(options?: any): AxiosPromise<Array<Bank>> {\n            return localVarFp.getAvailableBanks(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary getBankOperations\n         * @param {string} [accountId] to synchronise a specific account\n         * @param {string} [budgetId] to synchronise all accounts from a budget (ignored if accountId is set)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getBankOperations(accountId?: string, budgetId?: string, options?: any): AxiosPromise<string> {\n            return localVarFp.getBankOperations(accountId, budgetId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary get bank agreement portal URL\n         * @param {string} bankId identifier of the wanted bank\n         * @param {string} budgetId id of the current budget\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getLinkForBankAgreement(bankId: string, budgetId: string, options?: any): AxiosPromise<string> {\n            return localVarFp.getLinkForBankAgreement(bankId, budgetId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary updateBankingInfo\n         * @param {string} bankAgreementId identifier of the wanted bank\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateBankAccountList(bankAgreementId: string, options?: any): AxiosPromise<string> {\n            return localVarFp.updateBankAccountList(bankAgreementId, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * BankingApi - object-oriented interface\n * @export\n * @class BankingApi\n * @extends {BaseAPI}\n */\nexport class BankingApi extends BaseAPI {\n    /**\n     * \n     * @summary get authorized accounts list\n     * @param {string} budgetId budget\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof BankingApi\n     */\n    public getAuthorizedAccounts(budgetId: string, options?: any) {\n        return BankingApiFp(this.configuration).getAuthorizedAccounts(budgetId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary get availables banks list\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof BankingApi\n     */\n    public getAvailableBanks(options?: any) {\n        return BankingApiFp(this.configuration).getAvailableBanks(options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary getBankOperations\n     * @param {string} [accountId] to synchronise a specific account\n     * @param {string} [budgetId] to synchronise all accounts from a budget (ignored if accountId is set)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof BankingApi\n     */\n    public getBankOperations(accountId?: string, budgetId?: string, options?: any) {\n        return BankingApiFp(this.configuration).getBankOperations(accountId, budgetId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary get bank agreement portal URL\n     * @param {string} bankId identifier of the wanted bank\n     * @param {string} budgetId id of the current budget\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof BankingApi\n     */\n    public getLinkForBankAgreement(bankId: string, budgetId: string, options?: any) {\n        return BankingApiFp(this.configuration).getLinkForBankAgreement(bankId, budgetId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary updateBankingInfo\n     * @param {string} bankAgreementId identifier of the wanted bank\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof BankingApi\n     */\n    public updateBankAccountList(bankAgreementId: string, options?: any) {\n        return BankingApiFp(this.configuration).updateBankAccountList(bankAgreementId, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n/**\n * BudgetApi - axios parameter creator\n * @export\n */\nexport const BudgetApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Add a new budget\n         * @param {string} name name of the new budget\n         * @param {string} profile type of the new profile (user or company)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addBudget: async (name: string, profile: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'name' is not null or undefined\n            assertParamExists('addBudget', 'name', name)\n            // verify required parameter 'profile' is not null or undefined\n            assertParamExists('addBudget', 'profile', profile)\n            const localVarPath = `/budget`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication accessToken required\n\n            // authentication refreshTokenId required\n\n            if (name !== undefined) {\n                localVarQueryParameter['name'] = name;\n            }\n\n            if (profile !== undefined) {\n                localVarQueryParameter['profile'] = profile;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Delete budget\n         * @param {number} budgetId id of the budget you want to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteBudget: async (budgetId: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('deleteBudget', 'budgetId', budgetId)\n            const localVarPath = `/budget`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budget_id'] = budgetId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Finds budgets by user\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findBudgetsByUser: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/budget/user`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Update a budget\n         * @param {string} budgetId id of the updated budget\n         * @param {string} newName new name of the new budget\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateBudget: async (budgetId: string, newName: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('updateBudget', 'budgetId', budgetId)\n            // verify required parameter 'newName' is not null or undefined\n            assertParamExists('updateBudget', 'newName', newName)\n            const localVarPath = `/budget`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budget_id'] = budgetId;\n            }\n\n            if (newName !== undefined) {\n                localVarQueryParameter['new_name'] = newName;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * BudgetApi - functional programming interface\n * @export\n */\nexport const BudgetApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = BudgetApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new budget\n         * @param {string} name name of the new budget\n         * @param {string} profile type of the new profile (user or company)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async addBudget(name: string, profile: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.addBudget(name, profile, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Delete budget\n         * @param {number} budgetId id of the budget you want to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async deleteBudget(budgetId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteBudget(budgetId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Finds budgets by user\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async findBudgetsByUser(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Budget>>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.findBudgetsByUser(options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Update a budget\n         * @param {string} budgetId id of the updated budget\n         * @param {string} newName new name of the new budget\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async updateBudget(budgetId: string, newName: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.updateBudget(budgetId, newName, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n    }\n};\n\n/**\n * BudgetApi - factory interface\n * @export\n */\nexport const BudgetApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = BudgetApiFp(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new budget\n         * @param {string} name name of the new budget\n         * @param {string} profile type of the new profile (user or company)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addBudget(name: string, profile: string, options?: any): AxiosPromise<string> {\n            return localVarFp.addBudget(name, profile, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Delete budget\n         * @param {number} budgetId id of the budget you want to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteBudget(budgetId: number, options?: any): AxiosPromise<string> {\n            return localVarFp.deleteBudget(budgetId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Finds budgets by user\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findBudgetsByUser(options?: any): AxiosPromise<Array<Budget>> {\n            return localVarFp.findBudgetsByUser(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Update a budget\n         * @param {string} budgetId id of the updated budget\n         * @param {string} newName new name of the new budget\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateBudget(budgetId: string, newName: string, options?: any): AxiosPromise<string> {\n            return localVarFp.updateBudget(budgetId, newName, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * BudgetApi - object-oriented interface\n * @export\n * @class BudgetApi\n * @extends {BaseAPI}\n */\nexport class BudgetApi extends BaseAPI {\n    /**\n     * \n     * @summary Add a new budget\n     * @param {string} name name of the new budget\n     * @param {string} profile type of the new profile (user or company)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof BudgetApi\n     */\n    public addBudget(name: string, profile: string, options?: any) {\n        return BudgetApiFp(this.configuration).addBudget(name, profile, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Delete budget\n     * @param {number} budgetId id of the budget you want to delete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof BudgetApi\n     */\n    public deleteBudget(budgetId: number, options?: any) {\n        return BudgetApiFp(this.configuration).deleteBudget(budgetId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Finds budgets by user\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof BudgetApi\n     */\n    public findBudgetsByUser(options?: any) {\n        return BudgetApiFp(this.configuration).findBudgetsByUser(options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Update a budget\n     * @param {string} budgetId id of the updated budget\n     * @param {string} newName new name of the new budget\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof BudgetApi\n     */\n    public updateBudget(budgetId: string, newName: string, options?: any) {\n        return BudgetApiFp(this.configuration).updateBudget(budgetId, newName, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n/**\n * BudgetDataApi - axios parameter creator\n * @export\n */\nexport const BudgetDataApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Find data by budget\n         * @param {string} budgetId \n         * @param {number} [startMonth] example : mars 2020 &#x3D; 202003\n         * @param {number} [endMonth] example : mars 2020 &#x3D; 202003\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findBudgetData: async (budgetId: string, startMonth?: number, endMonth?: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('findBudgetData', 'budgetId', budgetId)\n            const localVarPath = `/budget/data`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budget_id'] = budgetId;\n            }\n\n            if (startMonth !== undefined) {\n                localVarQueryParameter['start_month'] = startMonth;\n            }\n\n            if (endMonth !== undefined) {\n                localVarQueryParameter['end_month'] = endMonth;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Find amount on accounts by budget\n         * @param {string} budgetId \n         * @param {number} [month] example : mars 2020 &#x3D; 202003\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findTotalBudgetAmount: async (budgetId: string, month?: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('findTotalBudgetAmount', 'budgetId', budgetId)\n            const localVarPath = `/budget/amount`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budget_id'] = budgetId;\n            }\n\n            if (month !== undefined) {\n                localVarQueryParameter['month'] = month;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * BudgetDataApi - functional programming interface\n * @export\n */\nexport const BudgetDataApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = BudgetDataApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @summary Find data by budget\n         * @param {string} budgetId \n         * @param {number} [startMonth] example : mars 2020 &#x3D; 202003\n         * @param {number} [endMonth] example : mars 2020 &#x3D; 202003\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async findBudgetData(budgetId: string, startMonth?: number, endMonth?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<{ [key: string]: { [key: string]: CategoryData; }; }>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.findBudgetData(budgetId, startMonth, endMonth, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Find amount on accounts by budget\n         * @param {string} budgetId \n         * @param {number} [month] example : mars 2020 &#x3D; 202003\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async findTotalBudgetAmount(budgetId: string, month?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.findTotalBudgetAmount(budgetId, month, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n    }\n};\n\n/**\n * BudgetDataApi - factory interface\n * @export\n */\nexport const BudgetDataApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = BudgetDataApiFp(configuration)\n    return {\n        /**\n         * \n         * @summary Find data by budget\n         * @param {string} budgetId \n         * @param {number} [startMonth] example : mars 2020 &#x3D; 202003\n         * @param {number} [endMonth] example : mars 2020 &#x3D; 202003\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findBudgetData(budgetId: string, startMonth?: number, endMonth?: number, options?: any): AxiosPromise<{ [key: string]: { [key: string]: CategoryData; }; }> {\n            return localVarFp.findBudgetData(budgetId, startMonth, endMonth, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Find amount on accounts by budget\n         * @param {string} budgetId \n         * @param {number} [month] example : mars 2020 &#x3D; 202003\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findTotalBudgetAmount(budgetId: string, month?: number, options?: any): AxiosPromise<number> {\n            return localVarFp.findTotalBudgetAmount(budgetId, month, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * BudgetDataApi - object-oriented interface\n * @export\n * @class BudgetDataApi\n * @extends {BaseAPI}\n */\nexport class BudgetDataApi extends BaseAPI {\n    /**\n     * \n     * @summary Find data by budget\n     * @param {string} budgetId \n     * @param {number} [startMonth] example : mars 2020 &#x3D; 202003\n     * @param {number} [endMonth] example : mars 2020 &#x3D; 202003\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof BudgetDataApi\n     */\n    public findBudgetData(budgetId: string, startMonth?: number, endMonth?: number, options?: any) {\n        return BudgetDataApiFp(this.configuration).findBudgetData(budgetId, startMonth, endMonth, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Find amount on accounts by budget\n     * @param {string} budgetId \n     * @param {number} [month] example : mars 2020 &#x3D; 202003\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof BudgetDataApi\n     */\n    public findTotalBudgetAmount(budgetId: string, month?: number, options?: any) {\n        return BudgetDataApiFp(this.configuration).findTotalBudgetAmount(budgetId, month, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n/**\n * CategoryApi - axios parameter creator\n * @export\n */\nexport const CategoryApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Add a new category\n         * @param {string} name \n         * @param {string} masterCategoryId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addCategory: async (name: string, masterCategoryId: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'name' is not null or undefined\n            assertParamExists('addCategory', 'name', name)\n            // verify required parameter 'masterCategoryId' is not null or undefined\n            assertParamExists('addCategory', 'masterCategoryId', masterCategoryId)\n            const localVarPath = `/category`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (name !== undefined) {\n                localVarQueryParameter['name'] = name;\n            }\n\n            if (masterCategoryId !== undefined) {\n                localVarQueryParameter['master_category_id'] = masterCategoryId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary get categories by budget\n         * @param {string} budgetId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCategoriesByBudget: async (budgetId: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('getCategoriesByBudget', 'budgetId', budgetId)\n            const localVarPath = `/category/budget`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budget_id'] = budgetId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Update a category\n         * @param {string} id \n         * @param {string} [newName] \n         * @param {string} [newMasterCategoryId] \n         * @param {boolean} [newArchived] \n         * @param {boolean} [newDeleted] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateCategory: async (id: string, newName?: string, newMasterCategoryId?: string, newArchived?: boolean, newDeleted?: boolean, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            assertParamExists('updateCategory', 'id', id)\n            const localVarPath = `/category`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (id !== undefined) {\n                localVarQueryParameter['id'] = id;\n            }\n\n            if (newName !== undefined) {\n                localVarQueryParameter['new_name'] = newName;\n            }\n\n            if (newMasterCategoryId !== undefined) {\n                localVarQueryParameter['new_master_category_id'] = newMasterCategoryId;\n            }\n\n            if (newArchived !== undefined) {\n                localVarQueryParameter['new_archived'] = newArchived;\n            }\n\n            if (newDeleted !== undefined) {\n                localVarQueryParameter['new_deleted'] = newDeleted;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * CategoryApi - functional programming interface\n * @export\n */\nexport const CategoryApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = CategoryApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new category\n         * @param {string} name \n         * @param {string} masterCategoryId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async addCategory(name: string, masterCategoryId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.addCategory(name, masterCategoryId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary get categories by budget\n         * @param {string} budgetId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getCategoriesByBudget(budgetId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Category>>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.getCategoriesByBudget(budgetId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Update a category\n         * @param {string} id \n         * @param {string} [newName] \n         * @param {string} [newMasterCategoryId] \n         * @param {boolean} [newArchived] \n         * @param {boolean} [newDeleted] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async updateCategory(id: string, newName?: string, newMasterCategoryId?: string, newArchived?: boolean, newDeleted?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.updateCategory(id, newName, newMasterCategoryId, newArchived, newDeleted, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n    }\n};\n\n/**\n * CategoryApi - factory interface\n * @export\n */\nexport const CategoryApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = CategoryApiFp(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new category\n         * @param {string} name \n         * @param {string} masterCategoryId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addCategory(name: string, masterCategoryId: string, options?: any): AxiosPromise<string> {\n            return localVarFp.addCategory(name, masterCategoryId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary get categories by budget\n         * @param {string} budgetId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCategoriesByBudget(budgetId: string, options?: any): AxiosPromise<Array<Category>> {\n            return localVarFp.getCategoriesByBudget(budgetId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Update a category\n         * @param {string} id \n         * @param {string} [newName] \n         * @param {string} [newMasterCategoryId] \n         * @param {boolean} [newArchived] \n         * @param {boolean} [newDeleted] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateCategory(id: string, newName?: string, newMasterCategoryId?: string, newArchived?: boolean, newDeleted?: boolean, options?: any): AxiosPromise<string> {\n            return localVarFp.updateCategory(id, newName, newMasterCategoryId, newArchived, newDeleted, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * CategoryApi - object-oriented interface\n * @export\n * @class CategoryApi\n * @extends {BaseAPI}\n */\nexport class CategoryApi extends BaseAPI {\n    /**\n     * \n     * @summary Add a new category\n     * @param {string} name \n     * @param {string} masterCategoryId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CategoryApi\n     */\n    public addCategory(name: string, masterCategoryId: string, options?: any) {\n        return CategoryApiFp(this.configuration).addCategory(name, masterCategoryId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary get categories by budget\n     * @param {string} budgetId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CategoryApi\n     */\n    public getCategoriesByBudget(budgetId: string, options?: any) {\n        return CategoryApiFp(this.configuration).getCategoriesByBudget(budgetId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Update a category\n     * @param {string} id \n     * @param {string} [newName] \n     * @param {string} [newMasterCategoryId] \n     * @param {boolean} [newArchived] \n     * @param {boolean} [newDeleted] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CategoryApi\n     */\n    public updateCategory(id: string, newName?: string, newMasterCategoryId?: string, newArchived?: boolean, newDeleted?: boolean, options?: any) {\n        return CategoryApiFp(this.configuration).updateCategory(id, newName, newMasterCategoryId, newArchived, newDeleted, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n/**\n * MasterCategoryApi - axios parameter creator\n * @export\n */\nexport const MasterCategoryApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Add a new master category\n         * @param {string} name \n         * @param {string} budgetId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addMasterCategory: async (name: string, budgetId: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'name' is not null or undefined\n            assertParamExists('addMasterCategory', 'name', name)\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('addMasterCategory', 'budgetId', budgetId)\n            const localVarPath = `/mcategory`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (name !== undefined) {\n                localVarQueryParameter['name'] = name;\n            }\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budget_id'] = budgetId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary get master categories by budget\n         * @param {string} budgetId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getMasterCategoriesByBudget: async (budgetId: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('getMasterCategoriesByBudget', 'budgetId', budgetId)\n            const localVarPath = `/mcategory/budget`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budget_id'] = budgetId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Update master category\n         * @param {string} id \n         * @param {string} [newName] \n         * @param {boolean} [newArchived] \n         * @param {boolean} [newDeleted] \n         * @param {string} [newColor] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateMasterCategory: async (id: string, newName?: string, newArchived?: boolean, newDeleted?: boolean, newColor?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            assertParamExists('updateMasterCategory', 'id', id)\n            const localVarPath = `/mcategory`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (id !== undefined) {\n                localVarQueryParameter['id'] = id;\n            }\n\n            if (newName !== undefined) {\n                localVarQueryParameter['new_name'] = newName;\n            }\n\n            if (newArchived !== undefined) {\n                localVarQueryParameter['new_archived'] = newArchived;\n            }\n\n            if (newDeleted !== undefined) {\n                localVarQueryParameter['new_deleted'] = newDeleted;\n            }\n\n            if (newColor !== undefined) {\n                localVarQueryParameter['new_color'] = newColor;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * MasterCategoryApi - functional programming interface\n * @export\n */\nexport const MasterCategoryApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = MasterCategoryApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new master category\n         * @param {string} name \n         * @param {string} budgetId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async addMasterCategory(name: string, budgetId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.addMasterCategory(name, budgetId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary get master categories by budget\n         * @param {string} budgetId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getMasterCategoriesByBudget(budgetId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<MasterCategory>>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.getMasterCategoriesByBudget(budgetId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Update master category\n         * @param {string} id \n         * @param {string} [newName] \n         * @param {boolean} [newArchived] \n         * @param {boolean} [newDeleted] \n         * @param {string} [newColor] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async updateMasterCategory(id: string, newName?: string, newArchived?: boolean, newDeleted?: boolean, newColor?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.updateMasterCategory(id, newName, newArchived, newDeleted, newColor, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n    }\n};\n\n/**\n * MasterCategoryApi - factory interface\n * @export\n */\nexport const MasterCategoryApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = MasterCategoryApiFp(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new master category\n         * @param {string} name \n         * @param {string} budgetId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addMasterCategory(name: string, budgetId: string, options?: any): AxiosPromise<string> {\n            return localVarFp.addMasterCategory(name, budgetId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary get master categories by budget\n         * @param {string} budgetId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getMasterCategoriesByBudget(budgetId: string, options?: any): AxiosPromise<Array<MasterCategory>> {\n            return localVarFp.getMasterCategoriesByBudget(budgetId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Update master category\n         * @param {string} id \n         * @param {string} [newName] \n         * @param {boolean} [newArchived] \n         * @param {boolean} [newDeleted] \n         * @param {string} [newColor] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateMasterCategory(id: string, newName?: string, newArchived?: boolean, newDeleted?: boolean, newColor?: string, options?: any): AxiosPromise<string> {\n            return localVarFp.updateMasterCategory(id, newName, newArchived, newDeleted, newColor, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * MasterCategoryApi - object-oriented interface\n * @export\n * @class MasterCategoryApi\n * @extends {BaseAPI}\n */\nexport class MasterCategoryApi extends BaseAPI {\n    /**\n     * \n     * @summary Add a new master category\n     * @param {string} name \n     * @param {string} budgetId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof MasterCategoryApi\n     */\n    public addMasterCategory(name: string, budgetId: string, options?: any) {\n        return MasterCategoryApiFp(this.configuration).addMasterCategory(name, budgetId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary get master categories by budget\n     * @param {string} budgetId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof MasterCategoryApi\n     */\n    public getMasterCategoriesByBudget(budgetId: string, options?: any) {\n        return MasterCategoryApiFp(this.configuration).getMasterCategoriesByBudget(budgetId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Update master category\n     * @param {string} id \n     * @param {string} [newName] \n     * @param {boolean} [newArchived] \n     * @param {boolean} [newDeleted] \n     * @param {string} [newColor] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof MasterCategoryApi\n     */\n    public updateMasterCategory(id: string, newName?: string, newArchived?: boolean, newDeleted?: boolean, newColor?: string, options?: any) {\n        return MasterCategoryApiFp(this.configuration).updateMasterCategory(id, newName, newArchived, newDeleted, newColor, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n/**\n * OperationApi - axios parameter creator\n * @export\n */\nexport const OperationApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Add a new operation\n         * @param {string} accountId \n         * @param {number} [day] day of the operation (2 march 2010 &#x3D;&gt; 20100302)\n         * @param {string} [categoryId] \n         * @param {number} [amount] \n         * @param {string} [memo] \n         * @param {boolean} [pending] \n         * @param {string} [motherOperationId] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addOperation: async (accountId: string, day?: number, categoryId?: string, amount?: number, memo?: string, pending?: boolean, motherOperationId?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'accountId' is not null or undefined\n            assertParamExists('addOperation', 'accountId', accountId)\n            const localVarPath = `/operation`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (accountId !== undefined) {\n                localVarQueryParameter['account_id'] = accountId;\n            }\n\n            if (day !== undefined) {\n                localVarQueryParameter['day'] = day;\n            }\n\n            if (categoryId !== undefined) {\n                localVarQueryParameter['category_id'] = categoryId;\n            }\n\n            if (amount !== undefined) {\n                localVarQueryParameter['amount'] = amount;\n            }\n\n            if (memo !== undefined) {\n                localVarQueryParameter['memo'] = memo;\n            }\n\n            if (pending !== undefined) {\n                localVarQueryParameter['pending'] = pending;\n            }\n\n            if (motherOperationId !== undefined) {\n                localVarQueryParameter['mother_operation_id'] = motherOperationId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Delete operation\n         * @param {string} operationId id of the operation you want to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteOperation: async (operationId: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'operationId' is not null or undefined\n            assertParamExists('deleteOperation', 'operationId', operationId)\n            const localVarPath = `/operation`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (operationId !== undefined) {\n                localVarQueryParameter['operation_id'] = operationId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Find daughter operation of mother operation\n         * @param {string} operationId id of the mother operation of daughter operations you want to retrieve\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findDaughterOperationsByMother: async (operationId: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'operationId' is not null or undefined\n            assertParamExists('findDaughterOperationsByMother', 'operationId', operationId)\n            const localVarPath = `/operation/daughtersfrommother`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (operationId !== undefined) {\n                localVarQueryParameter['operation_id'] = operationId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Find mother operations by account and category\n         * @param {string} accountId id of the account whose operations you want to retrieve\n         * @param {string} [categoryId] if apply filter by category\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findMotherOperationsByAccount: async (accountId: string, categoryId?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'accountId' is not null or undefined\n            assertParamExists('findMotherOperationsByAccount', 'accountId', accountId)\n            const localVarPath = `/operation/mothers`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (accountId !== undefined) {\n                localVarQueryParameter['account_id'] = accountId;\n            }\n\n            if (categoryId !== undefined) {\n                localVarQueryParameter['category_id'] = categoryId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Find mother operation of a daughter operation\n         * @param {string} operationId id of the daughter operation of mother operations you want to retrieve\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findMotherOperationsByDaughter: async (operationId: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'operationId' is not null or undefined\n            assertParamExists('findMotherOperationsByDaughter', 'operationId', operationId)\n            const localVarPath = `/operation/motherfromdaughter`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (operationId !== undefined) {\n                localVarQueryParameter['operation_id'] = operationId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Find operation by account and category\n         * @param {string} accountId id of the account whose operations you want to retrieve\n         * @param {string} [categoryId] if apply filter by category\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findOperationsByAccount: async (accountId: string, categoryId?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'accountId' is not null or undefined\n            assertParamExists('findOperationsByAccount', 'accountId', accountId)\n            const localVarPath = `/operation/account`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (accountId !== undefined) {\n                localVarQueryParameter['account_id'] = accountId;\n            }\n\n            if (categoryId !== undefined) {\n                localVarQueryParameter['category_id'] = categoryId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Find operation by budget and category\n         * @param {string} budgetId id of the budget whose operations you want to retrieve\n         * @param {string} [categoryId] if apply filter by category\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findOperationsByBudget: async (budgetId: string, categoryId?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('findOperationsByBudget', 'budgetId', budgetId)\n            const localVarPath = `/operation/budget`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budget_id'] = budgetId;\n            }\n\n            if (categoryId !== undefined) {\n                localVarQueryParameter['category_id'] = categoryId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Add operations from ofx file\n         * @param {string} accountId id of the account where operations must be created\n         * @param {string} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        importOfxFile: async (accountId: string, body?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'accountId' is not null or undefined\n            assertParamExists('importOfxFile', 'accountId', accountId)\n            const localVarPath = `/operation/import`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (accountId !== undefined) {\n                localVarQueryParameter['account_id'] = accountId;\n            }\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/ofx';\n\n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions, configuration)\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Update an operation\n         * @param {string} operationId \n         * @param {string} [newAccountId] \n         * @param {number} [newDay] day of the operation (2 march 2010 &#x3D;&gt; 20100302)\n         * @param {string} [newCategoryId] \n         * @param {number} [newAmount] \n         * @param {string} [newMemo] \n         * @param {boolean} [newPending] \n         * @param {string} [newMotherOperationId] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateOperation: async (operationId: string, newAccountId?: string, newDay?: number, newCategoryId?: string, newAmount?: number, newMemo?: string, newPending?: boolean, newMotherOperationId?: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'operationId' is not null or undefined\n            assertParamExists('updateOperation', 'operationId', operationId)\n            const localVarPath = `/operation`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (operationId !== undefined) {\n                localVarQueryParameter['operation_id'] = operationId;\n            }\n\n            if (newAccountId !== undefined) {\n                localVarQueryParameter['new_account_id'] = newAccountId;\n            }\n\n            if (newDay !== undefined) {\n                localVarQueryParameter['new_day'] = newDay;\n            }\n\n            if (newCategoryId !== undefined) {\n                localVarQueryParameter['new_category_id'] = newCategoryId;\n            }\n\n            if (newAmount !== undefined) {\n                localVarQueryParameter['new_amount'] = newAmount;\n            }\n\n            if (newMemo !== undefined) {\n                localVarQueryParameter['new_memo'] = newMemo;\n            }\n\n            if (newPending !== undefined) {\n                localVarQueryParameter['new_pending'] = newPending;\n            }\n\n            if (newMotherOperationId !== undefined) {\n                localVarQueryParameter['new_mother-operation_id'] = newMotherOperationId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * OperationApi - functional programming interface\n * @export\n */\nexport const OperationApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = OperationApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new operation\n         * @param {string} accountId \n         * @param {number} [day] day of the operation (2 march 2010 &#x3D;&gt; 20100302)\n         * @param {string} [categoryId] \n         * @param {number} [amount] \n         * @param {string} [memo] \n         * @param {boolean} [pending] \n         * @param {string} [motherOperationId] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async addOperation(accountId: string, day?: number, categoryId?: string, amount?: number, memo?: string, pending?: boolean, motherOperationId?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Operation>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.addOperation(accountId, day, categoryId, amount, memo, pending, motherOperationId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Delete operation\n         * @param {string} operationId id of the operation you want to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async deleteOperation(operationId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteOperation(operationId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Find daughter operation of mother operation\n         * @param {string} operationId id of the mother operation of daughter operations you want to retrieve\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async findDaughterOperationsByMother(operationId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Operation>>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.findDaughterOperationsByMother(operationId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Find mother operations by account and category\n         * @param {string} accountId id of the account whose operations you want to retrieve\n         * @param {string} [categoryId] if apply filter by category\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async findMotherOperationsByAccount(accountId: string, categoryId?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Operation>>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.findMotherOperationsByAccount(accountId, categoryId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Find mother operation of a daughter operation\n         * @param {string} operationId id of the daughter operation of mother operations you want to retrieve\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async findMotherOperationsByDaughter(operationId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Operation>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.findMotherOperationsByDaughter(operationId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Find operation by account and category\n         * @param {string} accountId id of the account whose operations you want to retrieve\n         * @param {string} [categoryId] if apply filter by category\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async findOperationsByAccount(accountId: string, categoryId?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Operation>>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.findOperationsByAccount(accountId, categoryId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Find operation by budget and category\n         * @param {string} budgetId id of the budget whose operations you want to retrieve\n         * @param {string} [categoryId] if apply filter by category\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async findOperationsByBudget(budgetId: string, categoryId?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Operation>>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.findOperationsByBudget(budgetId, categoryId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Add operations from ofx file\n         * @param {string} accountId id of the account where operations must be created\n         * @param {string} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async importOfxFile(accountId: string, body?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.importOfxFile(accountId, body, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Update an operation\n         * @param {string} operationId \n         * @param {string} [newAccountId] \n         * @param {number} [newDay] day of the operation (2 march 2010 &#x3D;&gt; 20100302)\n         * @param {string} [newCategoryId] \n         * @param {number} [newAmount] \n         * @param {string} [newMemo] \n         * @param {boolean} [newPending] \n         * @param {string} [newMotherOperationId] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async updateOperation(operationId: string, newAccountId?: string, newDay?: number, newCategoryId?: string, newAmount?: number, newMemo?: string, newPending?: boolean, newMotherOperationId?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Operation>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.updateOperation(operationId, newAccountId, newDay, newCategoryId, newAmount, newMemo, newPending, newMotherOperationId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n    }\n};\n\n/**\n * OperationApi - factory interface\n * @export\n */\nexport const OperationApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = OperationApiFp(configuration)\n    return {\n        /**\n         * \n         * @summary Add a new operation\n         * @param {string} accountId \n         * @param {number} [day] day of the operation (2 march 2010 &#x3D;&gt; 20100302)\n         * @param {string} [categoryId] \n         * @param {number} [amount] \n         * @param {string} [memo] \n         * @param {boolean} [pending] \n         * @param {string} [motherOperationId] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addOperation(accountId: string, day?: number, categoryId?: string, amount?: number, memo?: string, pending?: boolean, motherOperationId?: string, options?: any): AxiosPromise<Operation> {\n            return localVarFp.addOperation(accountId, day, categoryId, amount, memo, pending, motherOperationId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Delete operation\n         * @param {string} operationId id of the operation you want to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteOperation(operationId: string, options?: any): AxiosPromise<string> {\n            return localVarFp.deleteOperation(operationId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Find daughter operation of mother operation\n         * @param {string} operationId id of the mother operation of daughter operations you want to retrieve\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findDaughterOperationsByMother(operationId: string, options?: any): AxiosPromise<Array<Operation>> {\n            return localVarFp.findDaughterOperationsByMother(operationId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Find mother operations by account and category\n         * @param {string} accountId id of the account whose operations you want to retrieve\n         * @param {string} [categoryId] if apply filter by category\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findMotherOperationsByAccount(accountId: string, categoryId?: string, options?: any): AxiosPromise<Array<Operation>> {\n            return localVarFp.findMotherOperationsByAccount(accountId, categoryId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Find mother operation of a daughter operation\n         * @param {string} operationId id of the daughter operation of mother operations you want to retrieve\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findMotherOperationsByDaughter(operationId: string, options?: any): AxiosPromise<Operation> {\n            return localVarFp.findMotherOperationsByDaughter(operationId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Find operation by account and category\n         * @param {string} accountId id of the account whose operations you want to retrieve\n         * @param {string} [categoryId] if apply filter by category\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findOperationsByAccount(accountId: string, categoryId?: string, options?: any): AxiosPromise<Array<Operation>> {\n            return localVarFp.findOperationsByAccount(accountId, categoryId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Find operation by budget and category\n         * @param {string} budgetId id of the budget whose operations you want to retrieve\n         * @param {string} [categoryId] if apply filter by category\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findOperationsByBudget(budgetId: string, categoryId?: string, options?: any): AxiosPromise<Array<Operation>> {\n            return localVarFp.findOperationsByBudget(budgetId, categoryId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Add operations from ofx file\n         * @param {string} accountId id of the account where operations must be created\n         * @param {string} [body] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        importOfxFile(accountId: string, body?: string, options?: any): AxiosPromise<string> {\n            return localVarFp.importOfxFile(accountId, body, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Update an operation\n         * @param {string} operationId \n         * @param {string} [newAccountId] \n         * @param {number} [newDay] day of the operation (2 march 2010 &#x3D;&gt; 20100302)\n         * @param {string} [newCategoryId] \n         * @param {number} [newAmount] \n         * @param {string} [newMemo] \n         * @param {boolean} [newPending] \n         * @param {string} [newMotherOperationId] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateOperation(operationId: string, newAccountId?: string, newDay?: number, newCategoryId?: string, newAmount?: number, newMemo?: string, newPending?: boolean, newMotherOperationId?: string, options?: any): AxiosPromise<Operation> {\n            return localVarFp.updateOperation(operationId, newAccountId, newDay, newCategoryId, newAmount, newMemo, newPending, newMotherOperationId, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * OperationApi - object-oriented interface\n * @export\n * @class OperationApi\n * @extends {BaseAPI}\n */\nexport class OperationApi extends BaseAPI {\n    /**\n     * \n     * @summary Add a new operation\n     * @param {string} accountId \n     * @param {number} [day] day of the operation (2 march 2010 &#x3D;&gt; 20100302)\n     * @param {string} [categoryId] \n     * @param {number} [amount] \n     * @param {string} [memo] \n     * @param {boolean} [pending] \n     * @param {string} [motherOperationId] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OperationApi\n     */\n    public addOperation(accountId: string, day?: number, categoryId?: string, amount?: number, memo?: string, pending?: boolean, motherOperationId?: string, options?: any) {\n        return OperationApiFp(this.configuration).addOperation(accountId, day, categoryId, amount, memo, pending, motherOperationId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Delete operation\n     * @param {string} operationId id of the operation you want to delete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OperationApi\n     */\n    public deleteOperation(operationId: string, options?: any) {\n        return OperationApiFp(this.configuration).deleteOperation(operationId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Find daughter operation of mother operation\n     * @param {string} operationId id of the mother operation of daughter operations you want to retrieve\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OperationApi\n     */\n    public findDaughterOperationsByMother(operationId: string, options?: any) {\n        return OperationApiFp(this.configuration).findDaughterOperationsByMother(operationId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Find mother operations by account and category\n     * @param {string} accountId id of the account whose operations you want to retrieve\n     * @param {string} [categoryId] if apply filter by category\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OperationApi\n     */\n    public findMotherOperationsByAccount(accountId: string, categoryId?: string, options?: any) {\n        return OperationApiFp(this.configuration).findMotherOperationsByAccount(accountId, categoryId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Find mother operation of a daughter operation\n     * @param {string} operationId id of the daughter operation of mother operations you want to retrieve\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OperationApi\n     */\n    public findMotherOperationsByDaughter(operationId: string, options?: any) {\n        return OperationApiFp(this.configuration).findMotherOperationsByDaughter(operationId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Find operation by account and category\n     * @param {string} accountId id of the account whose operations you want to retrieve\n     * @param {string} [categoryId] if apply filter by category\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OperationApi\n     */\n    public findOperationsByAccount(accountId: string, categoryId?: string, options?: any) {\n        return OperationApiFp(this.configuration).findOperationsByAccount(accountId, categoryId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Find operation by budget and category\n     * @param {string} budgetId id of the budget whose operations you want to retrieve\n     * @param {string} [categoryId] if apply filter by category\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OperationApi\n     */\n    public findOperationsByBudget(budgetId: string, categoryId?: string, options?: any) {\n        return OperationApiFp(this.configuration).findOperationsByBudget(budgetId, categoryId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Add operations from ofx file\n     * @param {string} accountId id of the account where operations must be created\n     * @param {string} [body] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OperationApi\n     */\n    public importOfxFile(accountId: string, body?: string, options?: any) {\n        return OperationApiFp(this.configuration).importOfxFile(accountId, body, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Update an operation\n     * @param {string} operationId \n     * @param {string} [newAccountId] \n     * @param {number} [newDay] day of the operation (2 march 2010 &#x3D;&gt; 20100302)\n     * @param {string} [newCategoryId] \n     * @param {number} [newAmount] \n     * @param {string} [newMemo] \n     * @param {boolean} [newPending] \n     * @param {string} [newMotherOperationId] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OperationApi\n     */\n    public updateOperation(operationId: string, newAccountId?: string, newDay?: number, newCategoryId?: string, newAmount?: number, newMemo?: string, newPending?: boolean, newMotherOperationId?: string, options?: any) {\n        return OperationApiFp(this.configuration).updateOperation(operationId, newAccountId, newDay, newCategoryId, newAmount, newMemo, newPending, newMotherOperationId, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n/**\n * PersonApi - axios parameter creator\n * @export\n */\nexport const PersonApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary get billing portal URL, new subscription if not subscribed, billing management if already subscribed\n         * @param {string} [_package] chosen package\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createBillingPortalSession: async (_package?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/billing`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication accessToken required\n\n            // authentication refreshTokenId required\n\n            if (_package !== undefined) {\n                localVarQueryParameter['package'] = _package;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Create a person\n         * @param {string} name \n         * @param {string} password \n         * @param {string} email \n         * @param {string} profile \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPerson: async (name: string, password: string, email: string, profile: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'name' is not null or undefined\n            assertParamExists('createPerson', 'name', name)\n            // verify required parameter 'password' is not null or undefined\n            assertParamExists('createPerson', 'password', password)\n            // verify required parameter 'email' is not null or undefined\n            assertParamExists('createPerson', 'email', email)\n            // verify required parameter 'profile' is not null or undefined\n            assertParamExists('createPerson', 'profile', profile)\n            const localVarPath = `/signup`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (name !== undefined) {\n                localVarQueryParameter['name'] = name;\n            }\n\n            if (password !== undefined) {\n                localVarQueryParameter['password'] = password;\n            }\n\n            if (email !== undefined) {\n                localVarQueryParameter['email'] = email;\n            }\n\n            if (profile !== undefined) {\n                localVarQueryParameter['profile'] = profile;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Login\n         * @param {string} email \n         * @param {string} password \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createSession: async (email: string, password: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'email' is not null or undefined\n            assertParamExists('createSession', 'email', email)\n            // verify required parameter 'password' is not null or undefined\n            assertParamExists('createSession', 'password', password)\n            const localVarPath = `/login`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (email !== undefined) {\n                localVarQueryParameter['email'] = email;\n            }\n\n            if (password !== undefined) {\n                localVarQueryParameter['password'] = password;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Logout\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteSession: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/logout`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication accessToken required\n\n            // authentication refreshTokenId required\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Get the person metadata\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPerson: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/person`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication accessToken required\n\n            // authentication refreshTokenId required\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Update the person metadata\n         * @param {string} [newName] \n         * @param {string} [newStyle] \n         * @param {boolean} [newDyslexia] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePerson: async (newName?: string, newStyle?: string, newDyslexia?: boolean, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/person`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            // authentication accessToken required\n\n            // authentication refreshTokenId required\n\n            if (newName !== undefined) {\n                localVarQueryParameter['new_name'] = newName;\n            }\n\n            if (newStyle !== undefined) {\n                localVarQueryParameter['new_style'] = newStyle;\n            }\n\n            if (newDyslexia !== undefined) {\n                localVarQueryParameter['new_dyslexia'] = newDyslexia;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * PersonApi - functional programming interface\n * @export\n */\nexport const PersonApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = PersonApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @summary get billing portal URL, new subscription if not subscribed, billing management if already subscribed\n         * @param {string} [_package] chosen package\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async createBillingPortalSession(_package?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.createBillingPortalSession(_package, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Create a person\n         * @param {string} name \n         * @param {string} password \n         * @param {string} email \n         * @param {string} profile \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async createPerson(name: string, password: string, email: string, profile: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.createPerson(name, password, email, profile, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Login\n         * @param {string} email \n         * @param {string} password \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async createSession(email: string, password: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.createSession(email, password, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Logout\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async deleteSession(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSession(options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Get the person metadata\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getPerson(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Person>>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.getPerson(options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Update the person metadata\n         * @param {string} [newName] \n         * @param {string} [newStyle] \n         * @param {boolean} [newDyslexia] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async updatePerson(newName?: string, newStyle?: string, newDyslexia?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.updatePerson(newName, newStyle, newDyslexia, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n    }\n};\n\n/**\n * PersonApi - factory interface\n * @export\n */\nexport const PersonApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = PersonApiFp(configuration)\n    return {\n        /**\n         * \n         * @summary get billing portal URL, new subscription if not subscribed, billing management if already subscribed\n         * @param {string} [_package] chosen package\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createBillingPortalSession(_package?: string, options?: any): AxiosPromise<string> {\n            return localVarFp.createBillingPortalSession(_package, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Create a person\n         * @param {string} name \n         * @param {string} password \n         * @param {string} email \n         * @param {string} profile \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPerson(name: string, password: string, email: string, profile: string, options?: any): AxiosPromise<string> {\n            return localVarFp.createPerson(name, password, email, profile, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Login\n         * @param {string} email \n         * @param {string} password \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createSession(email: string, password: string, options?: any): AxiosPromise<string> {\n            return localVarFp.createSession(email, password, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Logout\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteSession(options?: any): AxiosPromise<string> {\n            return localVarFp.deleteSession(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Get the person metadata\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPerson(options?: any): AxiosPromise<Array<Person>> {\n            return localVarFp.getPerson(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Update the person metadata\n         * @param {string} [newName] \n         * @param {string} [newStyle] \n         * @param {boolean} [newDyslexia] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePerson(newName?: string, newStyle?: string, newDyslexia?: boolean, options?: any): AxiosPromise<string> {\n            return localVarFp.updatePerson(newName, newStyle, newDyslexia, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * PersonApi - object-oriented interface\n * @export\n * @class PersonApi\n * @extends {BaseAPI}\n */\nexport class PersonApi extends BaseAPI {\n    /**\n     * \n     * @summary get billing portal URL, new subscription if not subscribed, billing management if already subscribed\n     * @param {string} [_package] chosen package\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PersonApi\n     */\n    public createBillingPortalSession(_package?: string, options?: any) {\n        return PersonApiFp(this.configuration).createBillingPortalSession(_package, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Create a person\n     * @param {string} name \n     * @param {string} password \n     * @param {string} email \n     * @param {string} profile \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PersonApi\n     */\n    public createPerson(name: string, password: string, email: string, profile: string, options?: any) {\n        return PersonApiFp(this.configuration).createPerson(name, password, email, profile, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Login\n     * @param {string} email \n     * @param {string} password \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PersonApi\n     */\n    public createSession(email: string, password: string, options?: any) {\n        return PersonApiFp(this.configuration).createSession(email, password, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Logout\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PersonApi\n     */\n    public deleteSession(options?: any) {\n        return PersonApiFp(this.configuration).deleteSession(options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Get the person metadata\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PersonApi\n     */\n    public getPerson(options?: any) {\n        return PersonApiFp(this.configuration).getPerson(options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Update the person metadata\n     * @param {string} [newName] \n     * @param {string} [newStyle] \n     * @param {boolean} [newDyslexia] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PersonApi\n     */\n    public updatePerson(newName?: string, newStyle?: string, newDyslexia?: boolean, options?: any) {\n        return PersonApiFp(this.configuration).updatePerson(newName, newStyle, newDyslexia, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n/**\n * PostItApi - axios parameter creator\n * @export\n */\nexport const PostItApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary Get post-it by month and budget\n         * @param {number} month month of the post-it (march 2022 &#x3D;&gt; 202203)\n         * @param {string} budgetId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPostIt: async (month: number, budgetId: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'month' is not null or undefined\n            assertParamExists('getPostIt', 'month', month)\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('getPostIt', 'budgetId', budgetId)\n            const localVarPath = `/postIt`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (month !== undefined) {\n                localVarQueryParameter['month'] = month;\n            }\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budget_id'] = budgetId;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Add a new post-it or update an existing one\n         * @param {number} month month of the post-it (march 2022 &#x3D;&gt; 202203)\n         * @param {string} budgetId \n         * @param {string} text \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePostIt: async (month: number, budgetId: string, text: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'month' is not null or undefined\n            assertParamExists('updatePostIt', 'month', month)\n            // verify required parameter 'budgetId' is not null or undefined\n            assertParamExists('updatePostIt', 'budgetId', budgetId)\n            // verify required parameter 'text' is not null or undefined\n            assertParamExists('updatePostIt', 'text', text)\n            const localVarPath = `/postIt`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (month !== undefined) {\n                localVarQueryParameter['month'] = month;\n            }\n\n            if (budgetId !== undefined) {\n                localVarQueryParameter['budget_id'] = budgetId;\n            }\n\n            if (text !== undefined) {\n                localVarQueryParameter['text'] = text;\n            }\n\n\n    \n            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * PostItApi - functional programming interface\n * @export\n */\nexport const PostItApiFp = function(configuration?: Configuration) {\n    const localVarAxiosParamCreator = PostItApiAxiosParamCreator(configuration)\n    return {\n        /**\n         * \n         * @summary Get post-it by month and budget\n         * @param {number} month month of the post-it (march 2022 &#x3D;&gt; 202203)\n         * @param {string} budgetId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getPostIt(month: number, budgetId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<PostIt>>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.getPostIt(month, budgetId, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n        /**\n         * \n         * @summary Add a new post-it or update an existing one\n         * @param {number} month month of the post-it (march 2022 &#x3D;&gt; 202203)\n         * @param {string} budgetId \n         * @param {string} text \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async updatePostIt(month: number, budgetId: string, text: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {\n            const localVarAxiosArgs = await localVarAxiosParamCreator.updatePostIt(month, budgetId, text, options);\n            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n        },\n    }\n};\n\n/**\n * PostItApi - factory interface\n * @export\n */\nexport const PostItApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    const localVarFp = PostItApiFp(configuration)\n    return {\n        /**\n         * \n         * @summary Get post-it by month and budget\n         * @param {number} month month of the post-it (march 2022 &#x3D;&gt; 202203)\n         * @param {string} budgetId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPostIt(month: number, budgetId: string, options?: any): AxiosPromise<Array<PostIt>> {\n            return localVarFp.getPostIt(month, budgetId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @summary Add a new post-it or update an existing one\n         * @param {number} month month of the post-it (march 2022 &#x3D;&gt; 202203)\n         * @param {string} budgetId \n         * @param {string} text \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePostIt(month: number, budgetId: string, text: string, options?: any): AxiosPromise<string> {\n            return localVarFp.updatePostIt(month, budgetId, text, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * PostItApi - object-oriented interface\n * @export\n * @class PostItApi\n * @extends {BaseAPI}\n */\nexport class PostItApi extends BaseAPI {\n    /**\n     * \n     * @summary Get post-it by month and budget\n     * @param {number} month month of the post-it (march 2022 &#x3D;&gt; 202203)\n     * @param {string} budgetId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PostItApi\n     */\n    public getPostIt(month: number, budgetId: string, options?: any) {\n        return PostItApiFp(this.configuration).getPostIt(month, budgetId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @summary Add a new post-it or update an existing one\n     * @param {number} month month of the post-it (march 2022 &#x3D;&gt; 202203)\n     * @param {string} budgetId \n     * @param {string} text \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PostItApi\n     */\n    public updatePostIt(month: number, budgetId: string, text: string, options?: any) {\n        return PostItApiFp(this.configuration).updatePostIt(month, budgetId, text, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n","import { PersonApi, AccountApi, BudgetApi, AllocationApi, BudgetDataApi, OperationApi, CategoryApi, MasterCategoryApi, BankingApi } from './openApi/api'\n\nexport const personApi = new PersonApi()\nexport const budgetApi = new BudgetApi()\nexport const budgetDataApi = new BudgetDataApi()\nexport const accountApi = new AccountApi()\nexport const operationApi = new OperationApi()\nexport const allocationApi = new AllocationApi()\nexport const categoryApi = new CategoryApi()\nexport const masterCategoryApi = new MasterCategoryApi()\nexport const bankingApi = new BankingApi()\n","export default class Time {\n  public static getCurrentMonth (): number {\n    const dateTime = new Date()\n    const year = dateTime.getFullYear()\n    const month = dateTime.getMonth() + 1 // by default from 0 to 11\n    return year * 100 + month\n  }\n\n  public static getNextMonth (monthAsInt: number): number {\n    let month = monthAsInt % 100\n    let year = (monthAsInt - month) / 100\n    if (month < 12) {\n      month += 1\n    } else {\n      year += 1\n      month = 1\n    }\n    return year * 100 + month\n  }\n\n  public static getLastMonth (monthAsInt: number): number {\n    let month = monthAsInt % 100\n    let year = (monthAsInt - month) / 100\n    if (month > 1) {\n      month -= 1\n    } else {\n      year -= 1\n      month = 12\n    }\n    return year * 100 + month\n  }\n\n  public static getCurrentDay (): number {\n    return this.getDayFromDate(this.getCurrentDate())\n  }\n\n  public static getCurrentDate (): Date {\n    return new Date()\n  }\n\n  public static getCurrentDateString (): string {\n    return this.formatDate(this.getCurrentDate())\n  }\n\n  public static getMonthAsDate (monthAsInt: number): Date {\n    const date = new Date()\n    const month = monthAsInt % 100\n    const year = (monthAsInt - month) / 100\n    // needed because on the 31, setting a month with less than 31 day will break havoc (same when setting february on the 29/30/31)\n    date.setDate(1)\n    date.setMonth(month - 1)\n    date.setFullYear(year)\n    return date\n  }\n\n  public static getDayFromDate (dateTime: Date): number {\n    const year = dateTime.getFullYear()\n    const month = dateTime.getMonth() + 1 // because the form count month from 0 - 11\n    const day = dateTime.getDate()\n    return year * 10000 + month * 100 + day\n  }\n\n  public static getDayFromDateString (dateString: string): number {\n    const date = new Date(dateString)\n    return this.getDayFromDate(date)\n  }\n\n  public static getDateFromDay (dayAsInt: number): Date {\n    const day = dayAsInt % 100\n    const monthAsInt = ((dayAsInt - day) / 100)\n    const date = this.getMonthAsDate(monthAsInt)\n    date.setDate(day)\n    return date\n  }\n\n  public static getDateStringFromDay (dayAsInt: number): string {\n    const date = this.getDateFromDay(dayAsInt)\n    return this.formatDate(date)\n  }\n\n  public static monthIsThisYear (monthAsInt: number): boolean {\n    const year = this.getMonthAsDate(monthAsInt).getFullYear()\n    const currentYear = new Date().getFullYear()\n    return year === currentYear\n  }\n\n  public static getDateStringFromTimestamp (timestamp: number): string {\n    const date = new Date(timestamp * 1) // *1 (to ensure that it is treated as a number)\n    return date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear()\n  }\n\n  public static after90Days (timestamp: number): number {\n    return (timestamp * 1) + (90 * 86400000)\n  }\n\n  private static formatDate (date: Date): string {\n    return date.toISOString().split('T')[0]\n  }\n}\n","import { Budget, Account } from '@/model/model'\nimport { accountApi } from '@/services/api/apis'\nimport StoreHandler from '@/store/StoreHandler'\nimport Time from '@/utils/Time'\nimport { Store } from 'vuex'\nimport { StoreState } from '@/store/index'\n\nexport default class AccountService {\n  public static async getAccounts (budget: Budget): Promise<Account[]> {\n    const data: Account[] = []\n    if (budget.id) {\n      const response = await accountApi.findAccountsByBudget(budget.id)\n      return response.data\n    }\n    return data\n  }\n\n  public static async createAccount (store: Store<StoreState>, budget: Budget, name: string, amount: number) {\n    accountApi.addAccount(budget.id, name, amount, Time.getCurrentDay()).then(\n      () => {\n        StoreHandler.updateAccounts(store)\n      }\n    )\n  }\n\n  public static async updateAccount (store: Store<StoreState>, id: string, newName?: string) {\n    accountApi.updateAccount(id, newName).then(\n      () => {\n        StoreHandler.updateAccounts(store)\n      }\n    )\n  }\n\n  public static async updateAccountBankAssociation (store: Store<StoreState>, id: string, bankAccountId: string, importHistory: boolean) {\n    if (bankAccountId === 'none') {\n      accountApi.updateAccountBankAssociation(id, false).then(\n        () => {\n          StoreHandler.updateAccounts(store)\n        }\n      )\n    } else {\n      accountApi.updateAccountBankAssociation(id, importHistory, bankAccountId).then(\n        () => {\n          StoreHandler.updateAccounts(store)\n        }\n      )\n    }\n  }\n}\n","import { Budget } from '@/model/model'\nimport { budgetApi } from './api/apis'\nimport { redirectOnApiError } from '@/router'\nimport { AxiosError, AxiosResponse } from 'axios'\n\nexport default class BudgetService {\n  public static async getDefaultBudget (): Promise<Budget> {\n    return budgetApi.findBudgetsByUser()\n      .then((r: AxiosResponse) => {\n        return r.data[0]\n      })\n      .catch((e: AxiosError) => {\n        redirectOnApiError(e)\n      })\n  }\n}\n","import { Budget, Category, MasterCategory } from '@/model/model'\nimport { categoryApi } from '@/services/api/apis'\nimport { redirectOnApiError } from '@/router'\n\nexport default class CategoryService {\n  public static async createCategory (name: string, masterCategory: MasterCategory) {\n    const response = await categoryApi.addCategory(name, masterCategory.id)\n  }\n\n  public static async updateCategory (categoryId: string, newName: string) {\n    const response = await categoryApi.updateCategory(categoryId, newName)\n  }\n\n  public static async archiveCategory (categoryId: string) {\n    const response = await categoryApi.updateCategory(categoryId, undefined, undefined, true)\n  }\n\n  public static async unarchiveCategory (categoryId: string) {\n    const response = await categoryApi.updateCategory(categoryId, undefined, undefined, false)\n  }\n\n  public static async getCategories (budget: Budget): Promise<Category[]> {\n    const data: Category[] = []\n    if (budget.id) {\n      const response = await categoryApi.getCategoriesByBudget(budget.id)\n      return response.data\n    }\n    return data\n  }\n}\n","import { Budget, MasterCategory } from '@/model/model'\nimport { masterCategoryApi } from '@/services/api/apis'\n\nexport default class MasterCategoryService {\n  public static async createMasterCategory (name: string, budget: Budget) {\n    await masterCategoryApi.addMasterCategory(name, budget.id)\n  }\n\n  public static async renameMasterCategory (masterCategoryId: string, newName: string) {\n    await masterCategoryApi.updateMasterCategory(masterCategoryId, newName)\n  }\n\n  public static async updateColorMasterCategory (masterCategoryId: string, newColor: string) {\n    await masterCategoryApi.updateMasterCategory(masterCategoryId, undefined, undefined, undefined, newColor)\n  }\n\n  public static async archiveMasterCategory (masterCategoryId: string) {\n    await masterCategoryApi.updateMasterCategory(masterCategoryId, undefined, true)\n  }\n\n  public static async unarchiveMasterCategory (masterCategoryId: string) {\n    await masterCategoryApi.updateMasterCategory(masterCategoryId, undefined, false)\n  }\n\n  public static async getMasterCategories (budget: Budget): Promise<MasterCategory[]> {\n    const data: MasterCategory[] = []\n    if (budget.id) {\n      const response = await masterCategoryApi.getMasterCategoriesByBudget(budget.id)\n      return response.data\n    }\n    return data\n  }\n}\n","import { StoreState } from '@/store/index'\nimport { Store } from 'vuex'\nimport { personApi } from '@/services/api/apis'\nimport router, { RouterPages, redirectToLoginPageIfNotLogged, redirectOnApiError } from '@/router'\nimport { Person } from '@/model/model'\nimport axios, { AxiosError, AxiosResponse } from 'axios'\n\ninterface LoginResponse {\n    name: string;\n    unlockingDate: number;\n}\n\nexport default class PersonService {\n  public static async createSession (store: Store<StoreState>, email: string, password: string): Promise<LoginResponse> {\n    let data\n    let response\n    try {\n      response = await personApi.createSession(email, password)\n      data = response.data\n      store.dispatch('updateLogged')\n      router.push(RouterPages.home)\n    } catch (exception) {\n      if (axios.isAxiosError(exception)) {\n        response = exception.response\n        data = (response) ? response.data : {}\n      }\n    }\n    return JSON.parse(data)\n  }\n\n  public static async createPerson (store: Store<StoreState>, name: string, email: string, password: string, profile: string) {\n    try {\n      await (personApi.createPerson(name, password, email, profile))\n      store.dispatch('updateLogged')\n      router.push(RouterPages.home)\n    } catch (exception) {\n      if (axios.isAxiosError(exception)) {\n        alert(exception.response?.data)\n      }\n    }\n  }\n\n  public static async getPerson (): Promise<Person> {\n    return personApi.getPerson()\n      .then((r: AxiosResponse) => {\n        return r.data\n      })\n      .catch((e: AxiosError) => {\n        redirectOnApiError(e)\n      })\n  }\n\n  public static async rename (newName: string) {\n    await personApi.updatePerson(newName)\n  }\n\n  public static async changeStyle (newStyle: string) {\n    await personApi.updatePerson(undefined, newStyle)\n  }\n\n  public static async changeDyslexia (newDyslexia: boolean) {\n    await personApi.updatePerson(undefined, undefined, newDyslexia)\n  }\n\n  public static async redirectToBillingPortalUrl (selectedPackage: string) {\n    try {\n      const billingPortalUrl = (await (personApi.createBillingPortalSession(selectedPackage))).data\n      window.location.href = billingPortalUrl\n    } catch (exception) {\n      if (axios.isAxiosError(exception)) {\n        alert(exception.response?.data)\n      }\n    }\n  }\n\n  public static async manageSubscription () {\n    try {\n      const billingPortalUrl = (await (personApi.createBillingPortalSession())).data\n      window.location.href = billingPortalUrl\n    } catch (exception) {\n      if (axios.isAxiosError(exception)) {\n        alert(exception.response?.data)\n      }\n    }\n  }\n\n  public static async deleteSession (store: Store<StoreState>) {\n    await personApi.deleteSession()\n    store.dispatch('updateLogged')\n    redirectToLoginPageIfNotLogged(store)\n  }\n}\n","import { Person, Budget, Account, Category, MasterCategory } from '@/model/model'\nimport AccountService from '@/services/AccountService'\nimport BudgetService from '@/services/BudgetService'\nimport CategoryService from '@/services/CategoryService'\nimport MasterCategoryService from '@/services/MasterCategoryService'\nimport PersonService from '@/services/PersonService'\nimport { StoreState } from '@/store/index'\nimport { Store } from 'vuex'\n\nexport default class StoreHandler {\n  public static async initStore (store: Store<StoreState>) {\n    await this.initBudget(store)\n    await this.initPerson(store)\n  }\n\n  public static resetStore (store: Store<StoreState>) {\n    store.dispatch('updateBudget', null)\n    store.dispatch('updateAccounts', [])\n    store.dispatch('updateCategories', [])\n    store.dispatch('updateMasterCategories', [])\n    store.dispatch('updateStoreLoaded', false)\n    store.dispatch('updatePerson', null)\n  }\n\n  public static async updateOnBudgetChange (store: Store<StoreState>) {\n    this.updateAccounts(store)\n    this.updateMasterCategories(store)\n    this.updateCategories(store)\n    store.dispatch('updateStoreLoaded', true)\n  }\n\n  public static async updateAccounts (store: Store<StoreState>) {\n    if (store.state.budget) {\n      AccountService.getAccounts(store.state.budget).then(\n        (accounts: Account[]) => {\n          store.dispatch('updateAccounts', accounts)\n        }\n      )\n    }\n  }\n\n  public static async updateCategories (store: Store<StoreState>) {\n    if (store.state.budget) {\n      CategoryService.getCategories(store.state.budget).then(\n        (categories: Category[]) => {\n          store.dispatch('updateCategories', categories)\n        }\n      )\n    }\n  }\n\n  public static async updateMasterCategories (store: Store<StoreState>) {\n    if (store.state.budget) {\n      MasterCategoryService.getMasterCategories(store.state.budget).then(\n        (masterCategories: MasterCategory[]) => {\n          store.dispatch('updateMasterCategories', masterCategories)\n        }\n      )\n    }\n  }\n\n  public static async initBudget (store: Store<StoreState>) {\n    BudgetService.getDefaultBudget().then(\n      (budget: Budget) => {\n        store.dispatch('updateBudget', budget)\n      }\n    )\n  }\n\n  public static getMasterCategoryById (store: Store<StoreState>, masterCategoryId: string): MasterCategory | null {\n    for (const masterCategory of store.state.masterCategories) {\n      if (masterCategory.id === masterCategoryId) {\n        return masterCategory\n      }\n    }\n    return null\n  }\n\n  public static getCategoryById (store: Store<StoreState>, categoryId: string): Category | null {\n    for (const category of store.state.categories) {\n      if (category.id === categoryId) {\n        return category\n      }\n    }\n    return null\n  }\n\n  public static getCategoriesByMasterCategory (store: Store<StoreState>, masterCategory: MasterCategory, archived: boolean): Category[] {\n    const categories: Category[] = []\n    for (const category of store.state.categories) {\n      if (category.masterCategoryId === masterCategory.id && category.archived === archived) {\n        categories.push(category)\n      }\n    }\n    return categories\n  }\n\n  public static getCategoriesByArchivedStatus (store: Store<StoreState>, archived: boolean): Category[] {\n    const categories: Category[] = []\n    for (const category of store.state.categories) {\n      if (category.archived === archived) {\n        categories.push(category)\n      }\n    }\n    return categories\n  }\n\n  public static getAccountById (store: Store<StoreState>, accountId: string): Account | null {\n    for (const account of store.state.accounts) {\n      if (account.id === accountId) {\n        return account\n      }\n    }\n    return null\n  }\n\n  public static initPerson (store: Store<StoreState>) {\n    PersonService.getPerson().then(\n      (person: Person) => {\n        store.dispatch('updatePerson', person)\n      }\n    )\n  }\n}\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = {\n  id: \"budgetCmpt\",\n  class: \"container-fluid col-12 offset-0 col-sm-10 offset-sm-1 col-md-8 offset-md-2 col-lg-6 offset-lg-1 col-xl-5 offset-xl-2\"\n}\nconst _hoisted_2 = { class: \"header fixed\" }\nconst _hoisted_3 = { class: \"col-12 offset-0 col-sm-10 offset-sm-1 col-md-8 offset-md-2 col-lg-12 offset-lg-0\" }\nconst _hoisted_4 = { class: \"placeholder top\" }\nconst _hoisted_5 = { class: \"content\" }\nconst _hoisted_6 = /*#__PURE__*/_createVNode(\"span\", { class: \"illustration fas fa-plus col-1\" }, null, -1)\nconst _hoisted_7 = { class: \"illustrationLabel col-11\" }\nconst _hoisted_8 = { id: \"budgetTables\" }\nconst _hoisted_9 = { class: \"budget-tools\" }\nconst _hoisted_10 = {\n  key: 0,\n  type: \"button\"\n}\nconst _hoisted_11 = {\n  key: 1,\n  type: \"button\"\n}\nconst _hoisted_12 = {\n  key: 0,\n  id: \"archive_section\"\n}\nconst _hoisted_13 = { class: \"title\" }\nconst _hoisted_14 = /*#__PURE__*/_createVNode(\"div\", { class: \"placeholder bottom\" }, null, -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_BudgetHeader = _resolveComponent(\"BudgetHeader\")\n  const _component_MasterCategoryCmpt = _resolveComponent(\"MasterCategoryCmpt\")\n\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(\"div\", _hoisted_2, [\n      _createVNode(\"div\", _hoisted_3, [\n        _createVNode(_component_BudgetHeader, {\n          month: this.budgetMonth,\n          totalAllocated: _ctx.totalAllocated,\n          totalSpent: _ctx.totalSpent,\n          totalAvailable: _ctx.totalAvailable,\n          money: _ctx.moneyToAllocate,\n          onChangeMonth: _ctx.changeMonth\n        }, null, 8, [\"month\", \"totalAllocated\", \"totalSpent\", \"totalAvailable\", \"money\", \"onChangeMonth\"])\n      ])\n    ]),\n    _createVNode(\"div\", _hoisted_4, [\n      _createVNode(_component_BudgetHeader, {\n        month: this.budgetMonth,\n        totalAllocated: _ctx.totalAllocated,\n        totalSpent: _ctx.totalSpent,\n        totalAvailable: _ctx.totalAvailable,\n        money: _ctx.moneyToAllocate\n      }, null, 8, [\"month\", \"totalAllocated\", \"totalSpent\", \"totalAvailable\", \"money\"])\n    ]),\n    _createVNode(\"div\", _hoisted_5, [\n      (!_ctx.edit)\n        ? (_openBlock(), _createBlock(\"button\", {\n            key: 0,\n            onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.editFunction && _ctx.editFunction(...args))),\n            class: \"actionButton edition\"\n          }, _toDisplayString(_ctx.$t(\"EDIT\")), 1))\n        : (_openBlock(), _createBlock(\"button\", {\n            key: 1,\n            onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.saveChange && _ctx.saveChange(...args))),\n            class: \"actionButton edition\"\n          }, _toDisplayString(_ctx.$t(\"SAVE_CHANGE\")), 1)),\n      (_ctx.edit)\n        ? (_openBlock(), _createBlock(\"button\", {\n            key: 2,\n            onClick: _cache[3] || (_cache[3] = ($event: any) => (this.createMasterCategory())),\n            class: \"buttonGradation row\"\n          }, [\n            _hoisted_6,\n            _createVNode(\"span\", _hoisted_7, _toDisplayString(_ctx.$t(\"ADD_MASTER_CATEGORY\")), 1)\n          ]))\n        : _createCommentVNode(\"\", true),\n      _createVNode(\"div\", _hoisted_8, [\n        (_openBlock(true), _createBlock(_Fragment, null, _renderList(this.$store.state.masterCategories, (masterCategory) => {\n          return (_openBlock(), _createBlock(_component_MasterCategoryCmpt, {\n            key: masterCategory,\n            onUpdateAllocation: _ctx.updateAllocation,\n            onEmptyCategory: _ctx.emptyCategory,\n            onEmptyMasterCategory: _ctx.emptyMasterCategory,\n            masterCategory: masterCategory,\n            categoryDataList: this.categoryDataList,\n            edit: _ctx.edit\n          }, null, 8, [\"onUpdateAllocation\", \"onEmptyCategory\", \"onEmptyMasterCategory\", \"masterCategory\", \"categoryDataList\", \"edit\"]))\n        }), 128)),\n        _createVNode(\"div\", _hoisted_9, [\n          _createVNode(\"div\", {\n            onClick: _cache[4] || (_cache[4] = ($event: any) => (this.archiveVisible = !this.archiveVisible)),\n            class: \"actionLabelIcon\"\n          }, [\n            (this.archiveVisible)\n              ? (_openBlock(), _createBlock(\"span\", _hoisted_10, \" > \" + _toDisplayString(_ctx.$t(\"HIDE_ARCHIVE\")), 1))\n              : (_openBlock(), _createBlock(\"span\", _hoisted_11, \" > \" + _toDisplayString(_ctx.$t(\"SHOW_ARCHIVE\")), 1))\n          ])\n        ]),\n        (this.archiveVisible)\n          ? (_openBlock(), _createBlock(\"div\", _hoisted_12, [\n              _createVNode(\"div\", _hoisted_13, _toDisplayString(_ctx.$t(\"ARCHIVE\")), 1),\n              (_openBlock(true), _createBlock(_Fragment, null, _renderList(this.$store.state.masterCategories, (masterCategory) => {\n                return (_openBlock(), _createBlock(_component_MasterCategoryCmpt, {\n                  key: masterCategory,\n                  onUpdateAllocation: _ctx.updateAllocation,\n                  onEmptyCategory: _ctx.emptyCategory,\n                  masterCategory: masterCategory,\n                  categoryDataList: this.categoryDataList,\n                  edit: _ctx.edit,\n                  archived: true\n                }, null, 8, [\"onUpdateAllocation\", \"onEmptyCategory\", \"masterCategory\", \"categoryDataList\", \"edit\"]))\n              }), 128))\n            ]))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _hoisted_14\n    ])\n  ]))\n}","import { Budget, BudgetData, CategoryDataList } from '@/model/model'\nimport { budgetApi, budgetDataApi } from './api/apis'\nimport { redirectOnApiError } from '@/router'\nimport { AxiosError, AxiosResponse } from 'axios'\n\nexport default class BudgetDataService {\n  public static async getDefaultBudget (): Promise<Budget> {\n    return budgetApi.findBudgetsByUser()\n      .then((r: AxiosResponse) => {\n        return r.data[0]\n      })\n      .catch((e: AxiosError) => {\n        redirectOnApiError(e)\n      })\n  }\n\n  public static async getBudgetData (budget: Budget): Promise<BudgetData> {\n    if (budget.id == null) { return [] }\n    return budgetDataApi.findBudgetData(budget.id)\n      .then((r: AxiosResponse) => {\n        return r.data\n      })\n      .catch((e: AxiosError) => {\n        redirectOnApiError(e)\n      })\n  }\n\n  public static async getBudgetDataForMonth (budget: Budget, month: number): Promise<CategoryDataList> {\n    if (budget.id == null) { return {} }\n    return budgetDataApi.findBudgetData(budget.id, month, month)\n      .then((r: AxiosResponse) => {\n        return r.data[month]\n      })\n      .catch((e: AxiosError) => {\n        redirectOnApiError(e)\n      })\n  }\n\n  public static async getBudgetAmount (budget: Budget, month: number): Promise<number> {\n    if (budget.id == null) { return 0 }\n    return budgetDataApi.findTotalBudgetAmount(budget.id, month)\n      .then((r: AxiosResponse) => {\n        return r.data\n      })\n      .catch((e: AxiosError) => {\n        redirectOnApiError(e)\n      })\n  }\n}\n","import { allocationApi } from './api/apis'\nimport { redirectOnApiError } from '@/router'\n\nexport default class AllocationService {\n  public static async updateAllocation (month: number, categoryId: string, amount: number) {\n    const response = await allocationApi.addAllocation(month, categoryId, amount)\n  }\n}\n","import { Person, Operation, Account, Bank, BankAccount, Budget, Category, CategoryData as ICategoryData, MasterCategory } from '@/services/api/openApi/api'\n\ninterface BudgetData {\n    [monthComparable: number]: CategoryDataList;\n}\n\ninterface CategoryDataList {\n    [categoryId: string]: CategoryData;\n}\n\nclass CategoryData implements ICategoryData {\n    allocated = 0;\n    spent = 0;\n    available = 0;\n}\n\ninterface SelectOption {\n    value: string;\n    label: string;\n}\n\ninterface GroupSelectOption {\n    label: string;\n    options: SelectOption[];\n}\n\ninterface ChoiceElement {\n    label: string;\n    value: string;\n    preSelected: boolean;\n}\n\nconst incomeCategoryId = 'universal_income_category'\nconst transfertCategoryId = 'universal_transfert_category'\nconst newMasterCategoryName = 'Ω - Nouvelle Catégorie'\nconst newCategoryName = ' Nouvelle Enveloppe'\n\nexport {\n  Person, Operation, CategoryData, BudgetData, Account, Bank, BankAccount, Budget, Category,\n  MasterCategory, CategoryDataList, incomeCategoryId, transfertCategoryId,\n  newMasterCategoryName, newCategoryName, GroupSelectOption, SelectOption,\n  ChoiceElement\n}\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"budgetTable table\"\n}\nconst _hoisted_2 = { class: \"col-6 name\" }\nconst _hoisted_3 = /*#__PURE__*/_createVNode(\"span\", { class: \"action\" }, null, -1)\nconst _hoisted_4 = { class: \"col-2 amountCol\" }\nconst _hoisted_5 = { class: \"col-2 amountCol spent\" }\nconst _hoisted_6 = { class: \"col-2 amountCol\" }\nconst _hoisted_7 = {\n  key: 1,\n  class: \"categoryBudget\"\n}\nconst _hoisted_8 = { class: \"col-6 name\" }\nconst _hoisted_9 = { class: \"col-2\" }\nconst _hoisted_10 = { key: 0 }\nconst _hoisted_11 = {\n  key: 1,\n  class: \"form-group numberInput\"\n}\nconst _hoisted_12 = { class: \"col-2 spent\" }\nconst _hoisted_13 = { class: \"col-2\" }\nconst _hoisted_14 = {\n  key: 0,\n  class: \"categoryBudget actionLabelIcon addCategoryRow\"\n}\nconst _hoisted_15 = /*#__PURE__*/_createVNode(\"span\", { class: \"illustration btn fas fa-plus\" }, null, -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_MasterCategoryForm = _resolveComponent(\"MasterCategoryForm\")\n  const _component_CategoryForm = _resolveComponent(\"CategoryForm\")\n\n  return (this.categories.length > 0)\n    ? (_openBlock(), _createBlock(\"table\", _hoisted_1, [\n        (_ctx.edit)\n          ? (_openBlock(), _createBlock(_component_MasterCategoryForm, {\n              key: 0,\n              masterCategory: _ctx.masterCategory,\n              archived: _ctx.archived,\n              onCreateCategory: _ctx.createCategory,\n              onEmptyMasterCategory: _ctx.emptyMasterCategory\n            }, null, 8, [\"masterCategory\", \"archived\", \"onCreateCategory\", \"onEmptyMasterCategory\"]))\n          : (_openBlock(), _createBlock(\"thead\", {\n              key: 1,\n              class: \"masterCategory\",\n              style: _ctx.style\n            }, [\n              _createVNode(\"tr\", null, [\n                _createVNode(\"th\", _hoisted_2, [\n                  _createVNode(\"span\", null, _toDisplayString(_ctx.masterCategory?.name), 1),\n                  _hoisted_3\n                ]),\n                _createVNode(\"th\", _hoisted_4, _toDisplayString(_ctx.addSpacesInThousand(_ctx.getEurosAmount(_ctx.masterCategoryData.allocated))), 1),\n                _createVNode(\"th\", _hoisted_5, _toDisplayString(_ctx.addSpacesInThousand(_ctx.getEurosAmount(_ctx.masterCategoryData.spent))), 1),\n                _createVNode(\"th\", _hoisted_6, [\n                  _createVNode(\"span\", {\n                    class: _ctx.masterCategoryData.available < 0 ? 'negative' : ''\n                  }, _toDisplayString(_ctx.addSpacesInThousand(_ctx.getEurosAmount(_ctx.masterCategoryData.available))), 3)\n                ])\n              ])\n            ], 4)),\n        _createVNode(\"tbody\", null, [\n          (_openBlock(true), _createBlock(_Fragment, null, _renderList(this.categories, (category) => {\n            return (_openBlock(), _createBlock(_Fragment, { key: category }, [\n              (_ctx.edit)\n                ? (_openBlock(), _createBlock(_component_CategoryForm, {\n                    key: 0,\n                    class: \"categoryBudget\",\n                    category: category,\n                    onEmptyEnvelope: _ctx.emptyEnvelope\n                  }, null, 8, [\"category\", \"onEmptyEnvelope\"]))\n                : (_openBlock(), _createBlock(\"tr\", _hoisted_7, [\n                    _createVNode(\"td\", _hoisted_8, [\n                      _createVNode(\"div\", null, [\n                        _createVNode(\"span\", null, _toDisplayString(category.name), 1)\n                      ])\n                    ]),\n                    _createVNode(\"td\", _hoisted_9, [\n                      (_ctx.archived)\n                        ? (_openBlock(), _createBlock(\"span\", _hoisted_10, _toDisplayString(_ctx.getEurosAmount(this.categoryDataList[category.id]?.allocated ?? \"\")), 1))\n                        : (_openBlock(), _createBlock(\"div\", _hoisted_11, [\n                            _createVNode(\"input\", {\n                              type: \"textInput\",\n                              class: \"form-control\",\n                              value: this.getEurosAmount(this.categoryDataList[category.id]?.allocated ?? 0),\n                              onChange: ($event: any) => (_ctx.updateAllocationOnChange(category.id, this.entireCalcul($event.target.value)))\n                            }, null, 40, [\"value\", \"onChange\"])\n                          ]))\n                    ]),\n                    _createVNode(\"td\", _hoisted_12, _toDisplayString(_ctx.addSpacesInThousand(_ctx.getEurosAmount(this.categoryDataList[category.id]?.spent ?? \"\"))), 1),\n                    _createVNode(\"td\", _hoisted_13, [\n                      (this.categoryDataList[category.id] && this.categoryDataList[category.id].available != 0)\n                        ? (_openBlock(), _createBlock(\"span\", {\n                            key: 0,\n                            class: this.categoryDataList[category.id]?.available < 0 ? 'negative' : ''\n                          }, _toDisplayString(_ctx.addSpacesInThousand(_ctx.getEurosAmount(this.categoryDataList[category.id]?.available))), 3))\n                        : _createCommentVNode(\"\", true)\n                    ])\n                  ]))\n            ], 64))\n          }), 128)),\n          (!_ctx.archived && _ctx.edit)\n            ? (_openBlock(), _createBlock(\"tr\", _hoisted_14, [\n                _hoisted_15,\n                _createVNode(\"div\", {\n                  onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.createCategory && _ctx.createCategory(...args))),\n                  class: \"text\"\n                }, _toDisplayString(_ctx.$t(\"ADD_CATEGORY\")), 1)\n              ]))\n            : _createCommentVNode(\"\", true)\n        ])\n      ]))\n    : _createCommentVNode(\"\", true)\n}","export default class Utils {\n  public static getEurosAmount (centsAmount: number): number {\n    return (centsAmount / 100)\n  }\n\n  public static getCentsAmount (eurosAmount: number): number {\n    return Math.round(+eurosAmount * 100)\n  }\n\n  public static addSpacesInThousand (number: number): string {\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')\n  }\n}\n","export default class Calcul {\n  public static parseComma (amount: string): number {\n    if (amount.indexOf(',') !== -1) {\n      const parsed = amount.replace(/,/g, '.')\n      return Number(parsed)\n    }\n    return Number(amount)\n  }\n\n  // to calculate a mathematical expression\n  public static entireCalcul (calculation: string): number {\n    const newCalculation = calculation.replace(/x/g, '*')\n    if (calculation.includes(')') && calculation.includes('(')) {\n      const numberParenthesis = this.validityParenthesis(newCalculation)\n      const listParenthesis = this.separateParenthesis(newCalculation, numberParenthesis)\n      const result = this.calculParenthesis(newCalculation, numberParenthesis, listParenthesis)\n      return this.basicCalcul(result)\n    }\n    return this.basicCalcul(newCalculation)\n  }\n\n  // resolve a mathematical expression without parenthesis\n  public static basicCalcul (calculation: string): number { // 9*((6*7-4)+3)*(5+6-(1+4))/2/3/3/3 returns 41\n    let result: number\n    if (calculation.includes('+') && calculation.includes('-')) {\n      if (calculation.lastIndexOf('+') < calculation.lastIndexOf('-')) {\n        result = this.subtraction(calculation)\n      } else {\n        result = this.addition(calculation)\n      }\n    } else if (calculation.includes('+')) {\n      result = this.addition(calculation)\n    } else if (calculation.includes('-')) {\n      result = this.subtraction(calculation)\n    } else if (calculation.includes('*') && calculation.includes('/')) {\n      if (calculation.lastIndexOf('/') < calculation.lastIndexOf('*')) {\n        result = this.multiplication(calculation)\n      } else {\n        result = this.division(calculation)\n      }\n    } else if (calculation.includes('*')) {\n      result = this.multiplication(calculation)\n    } else if (calculation.includes('/')) {\n      result = this.division(calculation)\n    } else {\n      result = this.parseComma(calculation)\n    }\n    return Math.round(result * 100) / 100\n  }\n\n  public static subtraction (calculation: string): number {\n    const position = calculation.lastIndexOf('-')\n    const before = calculation.substring(0, position)\n    const after = calculation.substring(position + 1)\n    return this.basicCalcul(before) - this.basicCalcul(after)\n  }\n\n  public static addition (calculation: string): number {\n    const position = calculation.lastIndexOf('+')\n    const before = calculation.substring(0, position)\n    const after = calculation.substring(position + 1)\n    return this.basicCalcul(before) + this.basicCalcul(after)\n  }\n\n  public static multiplication (calculation: string): number {\n    const position = calculation.lastIndexOf('*')\n    const before = calculation.substring(0, position)\n    const after = calculation.substring(position + 1)\n    return this.basicCalcul(before) * this.basicCalcul(after)\n  }\n\n  public static division (calculation: string): number {\n    const position = calculation.lastIndexOf('/')\n    const before = calculation.substring(0, position)\n    const after = calculation.substring(position + 1)\n    return this.basicCalcul(before) / this.basicCalcul(after)\n  }\n\n  // check valid position of parenthesis and returns quantity of pair of these\n  public static validityParenthesis (calculation: string): number {\n    let counter = 0\n    let numberParenthesis = 0\n    for (let i = 0; i < calculation.length; i++) {\n      if (counter < 0) {\n        return -1\n      }\n      if (calculation.charAt(i) === '(') {\n        counter++\n        numberParenthesis++\n      } else if (calculation.charAt(i) === ')') {\n        counter--\n      }\n    }\n    if (counter !== 0) {\n      return -1\n    }\n    return numberParenthesis\n  }\n\n  // return list of parenthesis' position filed per pair\n  public static separateParenthesis (calculation: string, numberParenthesis: number): Array<Array<number>> {\n    const list: Array<Array<number>> = Array(numberParenthesis)\n    let indexList = 0\n    for (let i = 0; i < calculation.length; i++) {\n      if (calculation.charAt(i) === '(') {\n        list[indexList] = [i, -1]\n        indexList++\n      } else if (calculation.charAt(i) === ')') {\n        let indexInvers = indexList - 1\n        while (list[indexInvers][1] !== -1) {\n          indexInvers--\n        }\n        list[indexInvers][1] = i\n      }\n    }\n    return list\n  }\n\n  // return priority basic expression due to parenthesis\n  public static calculParenthesis (calculation: string, numberParenthesis: number, listParenthesis: Array<Array<number>>): string {\n    if (numberParenthesis === 0) {\n      return calculation\n    }\n    let indexParenthesis = 0\n    if (numberParenthesis > 1) {\n      let ecart = listParenthesis[0][1] - listParenthesis[0][0]\n      for (let i = 1; i < numberParenthesis; i++) {\n        if (listParenthesis[i][1] - listParenthesis[i][0] < ecart) {\n          ecart = listParenthesis[i][1] - listParenthesis[i][0]\n          indexParenthesis = i\n        }\n      }\n    }\n    const priority = this.basicCalcul(calculation.substring(listParenthesis[indexParenthesis][0] + 1, listParenthesis[indexParenthesis][1]))\n    let before = ''\n    let after = ''\n    if (listParenthesis[indexParenthesis][0] !== 0) {\n      before = calculation.substring(0, listParenthesis[indexParenthesis][0])\n    }\n    if (listParenthesis[indexParenthesis][1] !== calculation.length - 1) {\n      after = calculation.substring(listParenthesis[indexParenthesis][1] + 1)\n    }\n    const newCalculation = before + priority + after\n    const newList = this.separateParenthesis(newCalculation, numberParenthesis - 1)\n    return this.calculParenthesis(newCalculation, numberParenthesis - 1, newList)\n  }\n}\n","import { vModelText as _vModelText, createVNode as _createVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = { class: \"col-6\" }\nconst _hoisted_3 = { class: \"form-group\" }\nconst _hoisted_4 = { class: \"col-3 icon\" }\nconst _hoisted_5 = { key: 1 }\nconst _hoisted_6 = { class: \"col-6\" }\nconst _hoisted_7 = { class: \"name\" }\nconst _hoisted_8 = { class: \"col-6\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (!this.category.archived)\n    ? (_openBlock(), _createBlock(\"tr\", _hoisted_1, [\n        _createVNode(\"th\", _hoisted_2, [\n          _createVNode(\"div\", _hoisted_3, [\n            _withDirectives(_createVNode(\"input\", {\n              type: \"textInput\",\n              class: \"form-control\",\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (_ctx.name = $event)),\n              onChange: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.changeName && _ctx.changeName(...args)))\n            }, null, 544), [\n              [_vModelText, _ctx.name]\n            ])\n          ])\n        ]),\n        _createVNode(\"th\", _hoisted_4, [\n          _createVNode(\"button\", {\n            class: \"illustration btn fas fa-archive\",\n            onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.archiveCategory && _ctx.archiveCategory(...args)))\n          })\n        ]),\n        _createVNode(\"th\", {\n          class: \"col-3 text\",\n          onClick: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.archiveCategory && _ctx.archiveCategory(...args)))\n        }, _toDisplayString(_ctx.$t('TO_ARCHIVE')), 1)\n      ]))\n    : (_openBlock(), _createBlock(\"tr\", _hoisted_5, [\n        _createVNode(\"td\", _hoisted_6, [\n          _createVNode(\"span\", _hoisted_7, _toDisplayString(this.name), 1)\n        ]),\n        _createVNode(\"td\", _hoisted_8, [\n          _createVNode(\"button\", {\n            class: \"illustration btn fas fa-level-up-alt\",\n            onClick: _cache[5] || (_cache[5] = \n//@ts-ignore\n(...args) => (_ctx.unarchiveCategory && _ctx.unarchiveCategory(...args)))\n          })\n        ])\n      ]))\n}","\nimport { defineComponent } from 'vue'\nimport CategoryService from '@/services/CategoryService'\nimport StoreHandler from '@/store/StoreHandler'\nimport { Category } from '@/model/model'\n\ninterface CategoryFormData {\n  name: string;\n}\n\nexport default defineComponent({\n  name: 'CategoryForm',\n  data (): CategoryFormData {\n    return {\n      name: this.category.name\n    }\n  },\n  props: {\n    category: {\n      type: Object as () => Category,\n      required: true\n    }\n  },\n  emits: ['emptyEnvelope'],\n  methods: {\n    updateCategory () {\n      CategoryService.updateCategory(this.category.id, this.name).then(\n        () => {\n          StoreHandler.updateCategories(this.$store)\n        }\n      )\n    },\n    archiveCategory () {\n      this.$emit('emptyEnvelope', this.category.id)\n      CategoryService.archiveCategory(this.category.id).then(\n        () => {\n          StoreHandler.updateCategories(this.$store)\n        }\n      )\n    },\n    unarchiveCategory () {\n      CategoryService.unarchiveCategory(this.category.id).then(\n        () => {\n          StoreHandler.updateCategories(this.$store)\n        }\n      )\n    },\n    changeName () {\n      CategoryService.updateCategory(this.category.id, this.name).then(\n        () => {\n          StoreHandler.updateCategories(this.$store)\n        }\n      )\n    }\n  }\n})\n","import { render } from \"./CategoryForm.vue?vue&type=template&id=0a63d05b&ts=true\"\nimport script from \"./CategoryForm.vue?vue&type=script&lang=ts\"\nexport * from \"./CategoryForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { vModelText as _vModelText, createVNode as _createVNode, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { class: \"col-6\" }\nconst _hoisted_2 = { class: \"darkTextInput form-group\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"col-3\"\n}\nconst _hoisted_4 = {\n  key: 1,\n  class: \"col-3\"\n}\nconst _hoisted_5 = {\n  key: 2,\n  class: \"col-3\"\n}\nconst _hoisted_6 = {\n  key: 3,\n  class: \"col-3\"\n}\nconst _hoisted_7 = { class: \"col-6\" }\nconst _hoisted_8 = { class: \"name\" }\nconst _hoisted_9 = { class: \"col-6\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (!this.archived)\n    ? (_openBlock(), _createBlock(\"thead\", {\n        key: 0,\n        class: \"masterCategory edit\",\n        style: _ctx.style\n      }, [\n        _createVNode(\"tr\", null, [\n          _createVNode(\"th\", _hoisted_1, [\n            _createVNode(\"div\", _hoisted_2, [\n              _withDirectives(_createVNode(\"input\", {\n                type: \"textInput\",\n                class: \"form-control\",\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (_ctx.name = $event)),\n                onChange: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.changeName && _ctx.changeName(...args))),\n                style: {'background': _ctx.color}\n              }, null, 36), [\n                [_vModelText, _ctx.name]\n              ])\n            ])\n          ]),\n          (_ctx.colorPicker)\n            ? (_openBlock(), _createBlock(\"th\", _hoisted_3, [\n                _withDirectives(_createVNode(\"input\", {\n                  type: \"color\",\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => (_ctx.color = $event))\n                }, null, 512), [\n                  [_vModelText, _ctx.color]\n                ]),\n                _createVNode(\"button\", {\n                  class: \"ban-color illustration btn fas fa-ban\",\n                  onClick: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.removeColor && _ctx.removeColor(...args)))\n                })\n              ]))\n            : _createCommentVNode(\"\", true),\n          (_ctx.colorPicker)\n            ? (_openBlock(), _createBlock(\"th\", _hoisted_4, [\n                _createVNode(\"button\", {\n                  class: \"illustration btn fas fa-check\",\n                  onClick: _cache[5] || (_cache[5] = \n//@ts-ignore\n(...args) => (_ctx.validColor && _ctx.validColor(...args)))\n                })\n              ]))\n            : _createCommentVNode(\"\", true),\n          (!_ctx.colorPicker)\n            ? (_openBlock(), _createBlock(\"th\", _hoisted_5, [\n                _createVNode(\"button\", {\n                  class: \"illustration btn fas fa-palette\",\n                  onClick: _cache[6] || (_cache[6] = \n//@ts-ignore\n(...args) => (_ctx.chooseColor && _ctx.chooseColor(...args)))\n                })\n              ]))\n            : _createCommentVNode(\"\", true),\n          (!_ctx.colorPicker)\n            ? (_openBlock(), _createBlock(\"th\", _hoisted_6, [\n                _createVNode(\"button\", {\n                  class: \"illustration btn fas fa-archive\",\n                  onClick: _cache[7] || (_cache[7] = \n//@ts-ignore\n(...args) => (_ctx.archiveMasterCategory && _ctx.archiveMasterCategory(...args)))\n                })\n              ]))\n            : _createCommentVNode(\"\", true)\n        ])\n      ], 4))\n    : (_openBlock(), _createBlock(\"thead\", {\n        key: 1,\n        class: \"masterCategory edit\",\n        style: _ctx.style\n      }, [\n        _createVNode(\"tr\", null, [\n          _createVNode(\"th\", _hoisted_7, [\n            _createVNode(\"span\", _hoisted_8, _toDisplayString(this.name), 1)\n          ]),\n          _createVNode(\"th\", _hoisted_9, [\n            _createVNode(\"button\", {\n              class: \"illustration btn fas fa-level-up-alt\",\n              onClick: _cache[8] || (_cache[8] = \n//@ts-ignore\n(...args) => (_ctx.unarchiveMasterCategory && _ctx.unarchiveMasterCategory(...args)))\n            })\n          ])\n        ])\n      ], 4))\n}","const allocatedColor = '#b2babb' // grey\nconst spentColor = '#dc7633' // orange\nconst availableColor = '#45c1b8' // green\nconst redColor = '#e74c3c'\nconst blueColor = '#3498db'\nconst orangeColor = '#fba619'\nconst purpleColor = '#8e44ad'\nconst greenColor = '#27ae60'\nconst yellowColor = '#f1c40f'\nconst navyColor = '#152c8c'\nconst pinkColor = '#fb19cb'\nconst brownColor = '#935116'\nconst blackColor = '#17202a'\nconst lightGreyColor = '#bfc9ca'\nconst darkGreyColor = '#909497'\nconst lightGreenColor = '#36ec49'\nconst salmonColor = '#ff8f84'\nconst lavenderColor = '#f08bf3'\nconst bordeauxColor = '#b2155d'\nconst navigationColor = '#003249'\n\nclass Color {\n  public static shadeColor (color: string, percent: number): string {\n    let R: number = parseInt(color.substring(1, 3), 16)\n    let G: number = parseInt(color.substring(3, 5), 16)\n    let B: number = parseInt(color.substring(5, 7), 16)\n\n    R = Math.round(R * (100 + percent) / 100)\n    G = Math.round(G * (100 + percent) / 100)\n    B = Math.round(B * (100 + percent) / 100)\n\n    R = (R < 255) ? R : 255\n    G = (G < 255) ? G : 255\n    B = (B < 255) ? B : 255\n\n    const RR = ((R.toString(16).length === 1) ? '0' + R.toString(16) : R.toString(16))\n    const GG = ((G.toString(16).length === 1) ? '0' + G.toString(16) : G.toString(16))\n    const BB = ((B.toString(16).length === 1) ? '0' + B.toString(16) : B.toString(16))\n\n    return '#' + RR + GG + BB\n  }\n}\n\nexport {\n  Color, allocatedColor, spentColor, availableColor, redColor, blueColor, orangeColor,\n  purpleColor, greenColor, yellowColor, navyColor, pinkColor, brownColor,\n  blackColor, lightGreyColor, darkGreyColor, lightGreenColor, salmonColor,\n  lavenderColor, bordeauxColor, navigationColor\n}\n","\nimport { defineComponent } from 'vue'\nimport StoreHandler from '@/store/StoreHandler'\nimport MasterCategoryService from '@/services/MasterCategoryService'\nimport { MasterCategory } from '@/model/model'\nimport { navigationColor, Color } from '@/utils/Color'\n\ninterface MasterCategoryFormData {\n  name: string;\n  color: string;\n  colorPicker: boolean;\n}\n\nexport default defineComponent({\n  name: 'MasterCategoryForm',\n  data (): MasterCategoryFormData {\n    return {\n      name: this.masterCategory.name,\n      color: this.masterCategory.color !== 'null' ? this.masterCategory.color : navigationColor,\n      colorPicker: false\n    }\n  },\n  props: {\n    masterCategory: {\n      type: Object as () => MasterCategory,\n      required: true\n    },\n    archived: {\n      type: Object as () => boolean,\n      required: false\n    }\n  },\n  emits: ['emptyMasterCategory'],\n  computed: {\n    style (): string {\n      return this.masterCategory.color !== null ? 'background : linear-gradient(to right, ' + Color.shadeColor(this.color, -50) + ',' + this.color + ')' : ''\n    }\n  },\n  methods: {\n    updateMasterCategory () {\n      MasterCategoryService.renameMasterCategory(this.masterCategory.id, this.name).then(\n        () => {\n          StoreHandler.updateMasterCategories(this.$store)\n        }\n      )\n    },\n    archiveMasterCategory () {\n      this.$emit('emptyMasterCategory', this.masterCategory.id)\n      MasterCategoryService.archiveMasterCategory(this.masterCategory.id).then(\n        () => {\n          StoreHandler.updateCategories(this.$store)\n        }\n      )\n    },\n    unarchiveMasterCategory () {\n      MasterCategoryService.unarchiveMasterCategory(this.masterCategory.id).then(\n        () => {\n          StoreHandler.updateCategories(this.$store)\n        }\n      )\n    },\n    chooseColor () {\n      this.colorPicker = !this.colorPicker\n    },\n    removeColor () {\n      MasterCategoryService.updateColorMasterCategory(this.masterCategory.id, 'null').then(\n        () => {\n          StoreHandler.updateMasterCategories(this.$store)\n          this.colorPicker = false\n        }\n      )\n    },\n    validColor () {\n      MasterCategoryService.updateColorMasterCategory(this.masterCategory.id, this.color).then(\n        () => {\n          StoreHandler.updateMasterCategories(this.$store)\n          this.colorPicker = false\n        }\n      )\n    },\n    changeName () {\n      MasterCategoryService.renameMasterCategory(this.masterCategory.id, this.name).then(\n        () => {\n          StoreHandler.updateMasterCategories(this.$store)\n        }\n      )\n    }\n  }\n})\n","import { render } from \"./MasterCategoryForm.vue?vue&type=template&id=80a8fd46&ts=true\"\nimport script from \"./MasterCategoryForm.vue?vue&type=script&lang=ts\"\nexport * from \"./MasterCategoryForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue'\nimport { MasterCategory, CategoryDataList, CategoryData, Category, newCategoryName } from '@/model/model'\nimport Utils from '@/utils/Utils'\nimport Calcul from '@/utils/Calcul'\nimport CategoryService from '@/services/CategoryService'\nimport StoreHandler from '@/store/StoreHandler'\nimport CategoryForm from '@/components/forms/CategoryForm.vue'\nimport MasterCategoryForm from '@/components/forms/MasterCategoryForm.vue'\nimport { Color } from '@/utils/Color'\n\nexport default defineComponent({\n  name: 'MasterCategoryCmpt',\n  components: {\n    CategoryForm,\n    MasterCategoryForm\n  },\n  emits: ['updateAllocation', 'emptyCategory', 'emptyMasterCategory'],\n  props: {\n    masterCategory: {\n      type: Object as () => MasterCategory,\n      required: true\n    },\n    categoryDataList: {\n      type: Object as () => CategoryDataList,\n      required: true\n    },\n    archived: {\n      type: Boolean as () => boolean,\n      required: false,\n      default: false\n    },\n    edit: {\n      type: Boolean as () => boolean,\n      required: false,\n      default: false\n    }\n  },\n  computed: {\n    categories (): Category[] {\n      return StoreHandler.getCategoriesByMasterCategory(this.$store, this.masterCategory, this.archived)\n    },\n    masterCategoryData () {\n      const masterCategoryData = new CategoryData()\n      for (const category of this.categories) {\n        masterCategoryData.allocated += this.categoryDataList[category.id]?.allocated ?? 0\n        masterCategoryData.spent += this.categoryDataList[category.id]?.spent ?? 0\n        masterCategoryData.available += this.categoryDataList[category.id]?.available ?? 0\n      }\n      return masterCategoryData\n    },\n    style (): string {\n      return this.masterCategory.color !== null ? 'background : linear-gradient(to right, ' + Color.shadeColor(this.masterCategory.color, -50) + ',' + this.masterCategory.color + ')' : ''\n    }\n  },\n  methods: {\n    updateAllocationOnChange (categoryId: string, value: string) {\n      this.$emit('updateAllocation', categoryId, Utils.getCentsAmount(+value))\n    },\n    getEurosAmount (amount: number): number {\n      return Utils.getEurosAmount(amount)\n    },\n    createCategory () {\n      CategoryService.createCategory(newCategoryName, this.masterCategory).then(\n        () => {\n          StoreHandler.updateCategories(this.$store)\n        }\n      )\n    },\n    emptyEnvelope (categoryId: string) {\n      this.$emit('emptyCategory', categoryId)\n    },\n    emptyMasterCategory (masterCategoryId: string) {\n      this.$emit('emptyMasterCategory', masterCategoryId)\n    },\n    addSpacesInThousand (number: number): string {\n      return Utils.addSpacesInThousand(number)\n    },\n    entireCalcul (amount: string): number {\n      return Calcul.entireCalcul(amount)\n    }\n  }\n})\n","import { render } from \"./MasterCategoryCmpt.vue?vue&type=template&id=192f039e&ts=true\"\nimport script from \"./MasterCategoryCmpt.vue?vue&type=script&lang=ts\"\nexport * from \"./MasterCategoryCmpt.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { id: \"budgetHeader\" }\nconst _hoisted_2 = { class: \"budgetTable\" }\nconst _hoisted_3 = { class: \"masterCategory collapsed col-6 offset-6\" }\nconst _hoisted_4 = /*#__PURE__*/_createVNode(\"th\", { class: \"col-6\" }, null, -1)\nconst _hoisted_5 = { class: \"col-2 amountCol\" }\nconst _hoisted_6 = { class: \"col-2 amountCol spent\" }\nconst _hoisted_7 = { class: \"col-2 amountCol \" }\nconst _hoisted_8 = { class: \"masterCategory collapsed\" }\nconst _hoisted_9 = { class: \"amountCol\" }\nconst _hoisted_10 = { class: \"amountCol spent\" }\nconst _hoisted_11 = { class: \"amountCol\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_DateNav = _resolveComponent(\"DateNav\")\n\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_DateNav, {\n      fromPage: 'budget',\n      money: _ctx.money,\n      onChangeMonth: _ctx.changeMonth\n    }, null, 8, [\"money\", \"onChangeMonth\"]),\n    _createVNode(\"table\", _hoisted_2, [\n      _createVNode(\"thead\", _hoisted_3, [\n        _createVNode(\"tr\", null, [\n          _hoisted_4,\n          _createVNode(\"th\", _hoisted_5, _toDisplayString(_ctx.$t(\"ALLOCATED\")), 1),\n          _createVNode(\"th\", _hoisted_6, _toDisplayString(_ctx.$t(\"SPENT\")), 1),\n          _createVNode(\"th\", _hoisted_7, _toDisplayString(_ctx.$t(\"AVAILABLE\")), 1)\n        ])\n      ]),\n      _createVNode(\"thead\", _hoisted_8, [\n        _createVNode(\"tr\", null, [\n          _createVNode(\"th\", null, _toDisplayString(_ctx.$t(\"TOTAL\")), 1),\n          _createVNode(\"th\", _hoisted_9, _toDisplayString(_ctx.addSpacesInThousand(_ctx.totalAllocated)), 1),\n          _createVNode(\"th\", _hoisted_10, _toDisplayString(_ctx.addSpacesInThousand(_ctx.totalSpent)), 1),\n          _createVNode(\"th\", _hoisted_11, _toDisplayString(_ctx.addSpacesInThousand(_ctx.totalAvailable)), 1)\n        ])\n      ])\n    ])\n  ]))\n}","import { createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"row dateNav\" }\nconst _hoisted_2 = { class: \"col-2 d-flex justify-content-center\" }\nconst _hoisted_3 = { class: \"title\" }\nconst _hoisted_4 = { key: 0 }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"title\"\n}\nconst _hoisted_6 = {\n  key: 1,\n  class: \"title\"\n}\nconst _hoisted_7 = { class: \"col-2 d-flex justify-content-center\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(\"div\", _hoisted_2, [\n      _createVNode(\"button\", {\n        type: \"button\",\n        class: \"btn fas fa-chevron-left\",\n        onClick: _cache[1] || (_cache[1] = ($event: any) => (this.goToLastMonth()))\n      })\n    ]),\n    _createVNode(\"div\", {\n      class: [\"col-8 date-label\", this.toBeBudgetedClass()]\n    }, [\n      _createVNode(\"p\", _hoisted_3, [\n        _createTextVNode(_toDisplayString(_ctx.$d(this.getMonthAsDate(_ctx.selectedMonth), 'monthString')) + \" \", 1),\n        (!this.isThisYear)\n          ? (_openBlock(), _createBlock(\"span\", _hoisted_4, _toDisplayString(_ctx.$d(this.getMonthAsDate(_ctx.selectedMonth), 'year')), 1))\n          : _createCommentVNode(\"\", true)\n      ]),\n      (this.money > 0)\n        ? (_openBlock(), _createBlock(\"p\", _hoisted_5, _toDisplayString(_ctx.addSpacesInThousand(_ctx.money)) + \" € \" + _toDisplayString(_ctx.$t('TO_BE_BUDGETED')), 1))\n        : (this.money < 0)\n          ? (_openBlock(), _createBlock(\"p\", _hoisted_6, _toDisplayString(_ctx.addSpacesInThousand(-1 * _ctx.money)) + \" € \" + _toDisplayString(_ctx.$t('TO_BE_PULLED_OUT')), 1))\n          : _createCommentVNode(\"\", true)\n    ], 2),\n    _createVNode(\"div\", _hoisted_7, [\n      _createVNode(\"button\", {\n        type: \"button\",\n        class: \"btn fas fa-chevron-right\",\n        onClick: _cache[2] || (_cache[2] = ($event: any) => (this.goToNextMonth()))\n      })\n    ])\n  ]))\n}","\nimport { defineComponent } from 'vue'\nimport Time from '@/utils/Time'\nimport Utils from '@/utils/Utils'\n\ninterface DateNavData {\n  selectedMonth: number;\n}\n\nexport default defineComponent({\n  name: 'DateNavigation',\n  emits: ['changeMonth'],\n  props: {\n    fromPage: {\n      type: String,\n      required: true\n    },\n    money: {\n      type: Number,\n      required: false,\n      default: 0\n    }\n  },\n  data (): DateNavData {\n    return {\n      selectedMonth: Time.getCurrentMonth()\n    }\n  },\n  computed: {\n    isThisYear (): boolean {\n      return Time.monthIsThisYear(this.selectedMonth)\n    }\n  },\n  methods: {\n    getMonthAsDate (monthAsInt: number): Date {\n      return Time.getMonthAsDate(monthAsInt)\n    },\n    async goToNextMonth () {\n      this.$emit('changeMonth', 'next')\n      this.selectedMonth = Time.getNextMonth(this.selectedMonth)\n    },\n    async goToLastMonth () {\n      this.$emit('changeMonth', 'last')\n      this.selectedMonth = Time.getLastMonth(this.selectedMonth)\n    },\n    toBeBudgetedClass (): string {\n      if (this.$props.fromPage === 'budget') {\n        if (this.money > 0) {\n          return 'positive'\n        } else if (this.money < 0) {\n          return 'negative'\n        } else {\n          return 'null'\n        }\n      } else {\n        return ''\n      }\n    },\n    addSpacesInThousand (number: number): string {\n      return Utils.addSpacesInThousand(number)\n    }\n  }\n})\n","import { render } from \"./DateNavigation.vue?vue&type=template&id=0f19e0c0&ts=true\"\nimport script from \"./DateNavigation.vue?vue&type=script&lang=ts\"\nexport * from \"./DateNavigation.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue'\nimport DateNav from '@/components/inputs/DateNavigation.vue'\nimport Utils from '@/utils/Utils'\n\ninterface BudgetHeaderData {\n    budgetMonth: number;\n    budgetMoney: number;\n}\n\nexport default defineComponent({\n  name: 'BudgetHeader',\n  components: {\n    DateNav\n  },\n  emits: ['changeMonth'],\n  props: {\n    month: {\n      type: Number,\n      required: true\n    },\n    totalAllocated: {\n      type: Number,\n      required: true\n    },\n    totalSpent: {\n      type: Number,\n      required: true\n    },\n    totalAvailable: {\n      type: Number,\n      required: true\n    },\n    money: {\n      type: Number,\n      required: true\n    }\n  },\n  data (): BudgetHeaderData {\n    return {\n      budgetMonth: this.$props.month,\n      budgetMoney: this.$props.money\n    }\n  },\n  methods: {\n    changeMonth (message: string) {\n      this.$emit('changeMonth', message)\n    },\n    addSpacesInThousand (number: number): string {\n      return Utils.addSpacesInThousand(number)\n    }\n  }\n})\n","import { render } from \"./BudgetHeader.vue?vue&type=template&id=3f8b35a4&ts=true\"\nimport script from \"./BudgetHeader.vue?vue&type=script&lang=ts\"\nexport * from \"./BudgetHeader.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue'\nimport BudgetDataService from '@/services/BudgetDataService'\nimport AllocationService from '@/services/AllocationService'\nimport { Account, Budget, CategoryData, CategoryDataList, newMasterCategoryName } from '@/model/model'\nimport MasterCategoryCmpt from './MasterCategoryCmpt.vue'\nimport Time from '@/utils/Time'\nimport Utils from '@/utils/Utils'\nimport MasterCategoryService from '@/services/MasterCategoryService'\nimport StoreHandler from '@/store/StoreHandler'\nimport BudgetHeader from '@/components/headers/BudgetHeader.vue'\n\ninterface BudgetCmptData {\n    categoryDataList: CategoryDataList;\n    formerAllocations: {\n        [categoryId: string]: number;\n    };\n    budgetMonth: number;\n    amountInBudget: number;\n    archiveVisible: boolean;\n    edit: boolean;\n}\n\nexport default defineComponent({\n  name: 'BudgetCmpt',\n  components: {\n    MasterCategoryCmpt,\n    BudgetHeader\n  },\n  props: {\n    month: {\n      type: Number,\n      required: true\n    }\n  },\n  created: async function () {\n    this.getBudgetData()\n  },\n  watch: {\n    accounts: async function () {\n      this.getBudgetData()\n    },\n    budget: async function () {\n      this.getBudgetData()\n    },\n    budgetMonth: async function () {\n      this.getBudgetData()\n    }\n  },\n  data (): BudgetCmptData {\n    return {\n      categoryDataList: {},\n      /* use former allocation to compute the new \"available\" value\n        newAvailable = available + newAllocation - formerAllocation\n        without asking the back-end to compute */\n      formerAllocations: {},\n      budgetMonth: this.$props.month,\n      amountInBudget: 0,\n      archiveVisible: false,\n      edit: false\n    }\n  },\n  computed: {\n    budget (): Budget | null {\n      return this.$store.state.budget\n    },\n    accounts (): Account[] | null {\n      return this.$store.state.accounts\n    },\n    totalBudgetData () {\n      const totalBudgetData = new CategoryData()\n      for (const categoryId in this.categoryDataList) {\n        totalBudgetData.allocated += this.categoryDataList[categoryId].allocated\n        totalBudgetData.spent += this.categoryDataList[categoryId].spent\n        totalBudgetData.available += this.categoryDataList[categoryId].available\n      }\n      return totalBudgetData\n    },\n    isThisYear (): boolean {\n      return Time.monthIsThisYear(this.budgetMonth)\n    },\n    toBeBudgeted (): number {\n      let toBeBudgeted = this.amountInBudget\n      for (const categoryId in this.categoryDataList) {\n        toBeBudgeted -= this.categoryDataList[categoryId].available\n      }\n      return toBeBudgeted\n    },\n    toBeBudgetedClass (): string {\n      if (this.toBeBudgeted > 0) {\n        return 'positive'\n      } else if (this.toBeBudgeted < 0) {\n        return 'negative'\n      } else {\n        return 'null'\n      }\n    },\n    totalAllocated (): number {\n      return this.getEurosAmount(this.totalBudgetData.allocated)\n    },\n    totalSpent (): number {\n      return this.getEurosAmount(this.totalBudgetData.spent)\n    },\n    totalAvailable (): number {\n      return this.getEurosAmount(this.totalBudgetData.available)\n    },\n    moneyToAllocate (): number {\n      return this.getEurosAmount(this.toBeBudgeted)\n    }\n  },\n  methods: {\n    async getBudgetData () {\n      if (this.budget) {\n        BudgetDataService.getBudgetDataForMonth(this.budget, this.budgetMonth).then(\n          (categoryDataList) => {\n            this.categoryDataList = categoryDataList\n            this.initFormerAllocation()\n          }\n        )\n        BudgetDataService.getBudgetAmount(this.budget, this.budgetMonth).then(\n          (amount) => {\n            this.amountInBudget = amount\n          }\n        )\n      }\n    },\n    initFormerAllocation () {\n      let category\n      for (const categoryId in this.categoryDataList) {\n        category = this.categoryDataList[categoryId]\n        this.formerAllocations[categoryId] = category.allocated\n      }\n    },\n    updateAllocation (categoryId: string, newAllocation: number) {\n      if (!this.categoryDataList[categoryId]) {\n        this.categoryDataList[categoryId] = new CategoryData()\n      }\n      this.categoryDataList[categoryId].available +=\n        newAllocation - (this.formerAllocations[categoryId] || 0)\n      this.categoryDataList[categoryId].allocated = newAllocation\n      this.formerAllocations[categoryId] = newAllocation\n      AllocationService.updateAllocation(this.budgetMonth, categoryId, newAllocation)\n    },\n    getMonthAsDate (monthAsInt: number): Date {\n      return Time.getMonthAsDate(monthAsInt)\n    },\n    changeMonth (message: string) {\n      if (message === 'next') {\n        this.budgetMonth = Time.getNextMonth(this.budgetMonth)\n      } else {\n        this.budgetMonth = Time.getLastMonth(this.budgetMonth)\n      }\n    },\n    getEurosAmount (amount: number): number {\n      return Utils.getEurosAmount(amount)\n    },\n    createMasterCategory () {\n      if (this.budget) {\n        MasterCategoryService.createMasterCategory(newMasterCategoryName, this.budget).then(\n          () => {\n            StoreHandler.updateMasterCategories(this.$store)\n            StoreHandler.updateCategories(this.$store)\n          }\n        )\n      }\n    },\n    emptyCategory (categoryId: string) {\n      if (this.categoryDataList[categoryId] && this.categoryDataList[categoryId].available !== 0) {\n        this.categoryDataList[categoryId].allocated -= this.categoryDataList[categoryId].available\n        this.formerAllocations[categoryId] -= this.categoryDataList[categoryId].available\n        this.categoryDataList[categoryId].available = 0\n        AllocationService.updateAllocation(this.budgetMonth, categoryId, this.formerAllocations[categoryId])\n      }\n    },\n    emptyMasterCategory (masterCategoryId: string) {\n      const masterCategory = StoreHandler.getMasterCategoryById(this.$store, masterCategoryId)\n      if (masterCategory) {\n        const categories = StoreHandler.getCategoriesByMasterCategory(this.$store, masterCategory, false)\n        categories.forEach(category => {\n          this.emptyCategory(category.id)\n        })\n      }\n    },\n    editFunction () {\n      this.edit = !this.edit\n    },\n    saveChange () {\n      this.editFunction()\n    }\n  }\n})\n","import { render } from \"./BudgetCmpt.vue?vue&type=template&id=e1be11ce&ts=true\"\nimport script from \"./BudgetCmpt.vue?vue&type=script&lang=ts\"\nexport * from \"./BudgetCmpt.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { toDisplayString as _toDisplayString, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent } from \"vue\"\n\nconst _hoisted_1 = {\n  id: \"accountWidget\",\n  class: \"container\"\n}\nconst _hoisted_2 = { class: \"subtitle\" }\nconst _hoisted_3 = { class: \"accountList col-12 offset-0 col-sm-8 offset-sm-2 col-md-12 offset-md-0\" }\nconst _hoisted_4 = { class: \"name col-10 offset-2 col-xl-8 offset-xl-0 col-xxl-7 offset-xxl-1\" }\nconst _hoisted_5 = { class: \"amount col-6 offset-3 col-xl-4 offset-xl-0\" }\nconst _hoisted_6 = { class: \"name col-7 offset-1\" }\nconst _hoisted_7 = { class: \"amount col-4 offset-0\" }\nconst _hoisted_8 = { class: \"addAccount\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_AccountCreationForm = _resolveComponent(\"AccountCreationForm\")\n\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(\"div\", null, [\n      _createVNode(\"span\", _hoisted_2, _toDisplayString(_ctx.$t('TOTAL')) + \" : \" + _toDisplayString(this.getEurosAmount(this.totalOnAccounts)) + \" €\", 1)\n    ]),\n    _createVNode(\"div\", _hoisted_3, [\n      (_openBlock(true), _createBlock(_Fragment, null, _renderList(this.$store.state.accounts, (account) => {\n        return (_openBlock(), _createBlock(\"button\", {\n          key: account,\n          class: \"navigationButton accounts\",\n          onClick: ($event: any) => (_ctx.goToAccountPage(account))\n        }, [\n          (this.fromPage == 'home')\n            ? (_openBlock(), _createBlock(_Fragment, { key: 0 }, [\n                _createVNode(\"div\", _hoisted_4, _toDisplayString(account.name) + \" :\", 1),\n                _createVNode(\"div\", _hoisted_5, _toDisplayString(this.getEurosAmount(account.amount)) + \"€\", 1)\n              ], 64))\n            : (_openBlock(), _createBlock(_Fragment, { key: 1 }, [\n                _createVNode(\"div\", _hoisted_6, _toDisplayString(account.name) + \" :\", 1),\n                _createVNode(\"div\", _hoisted_7, _toDisplayString(this.getEurosAmount(account.amount)) + \"€\", 1)\n              ], 64))\n        ], 8, [\"onClick\"]))\n      }), 128))\n    ]),\n    _createVNode(\"div\", _hoisted_8, [\n      (!_ctx.accountCreationFormIsDisplayed)\n        ? (_openBlock(), _createBlock(\"button\", {\n            key: 0,\n            onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.changeAccountCreationFormDisplay && _ctx.changeAccountCreationFormDisplay(...args))),\n            class: \"actionButton\"\n          }, _toDisplayString(_ctx.$t('ADD_ACCOUNT')), 1))\n        : (_openBlock(), _createBlock(_component_AccountCreationForm, {\n            key: 1,\n            class: \"container inline\",\n            onUpdateAccountList: _ctx.getAccounts,\n            onCloseForm: _ctx.changeAccountCreationFormDisplay\n          }, null, 8, [\"onUpdateAccountList\", \"onCloseForm\"]))\n    ])\n  ]))\n}","import { createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { id: \"accountCreationForm\" }\nconst _hoisted_2 = { class: \"accountCreationInput\" }\nconst _hoisted_3 = { class: \"containerCross col-12\" }\nconst _hoisted_4 = { class: \"form\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(\"div\", _hoisted_2, [\n      _createVNode(\"div\", _hoisted_3, [\n        _createVNode(\"span\", {\n          class: \"cross fas fa-times-circle\",\n          onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.closeForm && _ctx.closeForm(...args)))\n        })\n      ]),\n      _createVNode(\"div\", _hoisted_4, [\n        _withDirectives(_createVNode(\"input\", {\n          id: \"newAccountName\",\n          class: \"form-control\",\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => (_ctx.name = $event)),\n          placeholder: _ctx.$t('ACCOUNT_NAME')\n        }, null, 8, [\"placeholder\"]), [\n          [_vModelText, _ctx.name]\n        ]),\n        _withDirectives(_createVNode(\"input\", {\n          id: \"newAccountAmount\",\n          class: \"form-control\",\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => (_ctx.amountString = $event)),\n          placeholder: _ctx.$t('CURRENT_AMOUNT')\n        }, null, 8, [\"placeholder\"]), [\n          [_vModelText, _ctx.amountString]\n        ])\n      ])\n    ]),\n    _createVNode(\"button\", {\n      class: \"actionButton\",\n      onClick: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.createAccount && _ctx.createAccount(...args)))\n    }, _toDisplayString(_ctx.$t('CREATE_ACCOUNT')), 1)\n  ]))\n}","\nimport { defineComponent } from 'vue'\nimport AccountService from '@/services/AccountService'\nimport Utils from '@/utils/Utils'\nimport Calcul from '@/utils/Calcul'\n\nexport default defineComponent({\n  name: 'AccountCreationForm',\n  data () {\n    return {\n      name: '',\n      amountString: ''\n    }\n  },\n  computed: {\n    amount (): number {\n      return this.entireCalcul(this.amountString)\n    }\n  },\n  emits: ['updateAccountList', 'closeForm'],\n  methods: {\n    createAccount () {\n      if (this.$store.state.budget) {\n        AccountService.createAccount(this.$store, this.$store.state.budget, this.name, Utils.getCentsAmount(this.amount)).then(\n          () => {\n            this.$emit('updateAccountList')\n            this.$emit('closeForm')\n          }\n        )\n      }\n    },\n    entireCalcul (amount: string): number {\n      return Calcul.entireCalcul(amount)\n    },\n    closeForm () {\n      this.$emit('closeForm')\n    }\n  }\n})\n","import { render } from \"./AccountCreationForm.vue?vue&type=template&id=410bff2f&ts=true\"\nimport script from \"./AccountCreationForm.vue?vue&type=script&lang=ts\"\nexport * from \"./AccountCreationForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue'\nimport AccountCreationForm from '@/components/forms/AccountCreationForm.vue'\nimport router, { RouterPages } from '@/router'\nimport { Account } from '@/model/model'\nimport Utils from '@/utils/Utils'\n\ninterface AccountsWidgetData {\n    accountCreationFormIsDisplayed: boolean;\n    fromPage: string;\n}\n\nexport default defineComponent({\n  name: 'AccountsWidget',\n  components: {\n    AccountCreationForm\n  },\n  props: {\n    page: {\n      type: String,\n      required: true\n    }\n  },\n  data (): AccountsWidgetData {\n    return {\n      accountCreationFormIsDisplayed: false,\n      fromPage: this.$props.page\n    }\n  },\n  computed: {\n    totalOnAccounts (): number {\n      let total = 0\n      for (const account of this.$store.state.accounts) {\n        total += account.amount\n      }\n      return total\n    }\n  },\n  methods: {\n    goToAccountPage (account: Account) {\n      router.push({ path: RouterPages.account, query: { accountId: account.id } })\n    },\n    changeAccountCreationFormDisplay () {\n      this.$data.accountCreationFormIsDisplayed = !this.$data.accountCreationFormIsDisplayed\n    },\n    getEurosAmount (amount: number): string {\n      const value = Utils.getEurosAmount(amount)\n      return this.addSpacesInThousand(value)\n    },\n    addSpacesInThousand (number: number): string {\n      return Utils.addSpacesInThousand(number)\n    }\n  }\n})\n","import { render } from \"./AccountsWidget.vue?vue&type=template&id=be42dce6&ts=true\"\nimport script from \"./AccountsWidget.vue?vue&type=script&lang=ts\"\nexport * from \"./AccountsWidget.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\nimport _imports_0 from '@/assets/logo_round.png'\n\n\nconst _hoisted_1 = { class: \"image-spinner\" }\nconst _hoisted_2 = /*#__PURE__*/_createVNode(\"img\", { src: _imports_0 }, null, -1)\nconst _hoisted_3 = /*#__PURE__*/_createVNode(\"div\", { class: \"spin spinner\" }, null, -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _hoisted_3,\n    _createVNode(\"div\", null, _toDisplayString(_ctx.$t('LOADING')), 1)\n  ]))\n}","\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'LoaderCmpt'\n})\n","import { render } from \"./Loader.vue?vue&type=template&id=2a375deb&ts=true\"\nimport script from \"./Loader.vue?vue&type=script&lang=ts\"\nexport * from \"./Loader.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"navBar\" }\nconst _hoisted_2 = { class: \"list-group list-group-horizontal d-flex\" }\nconst _hoisted_3 = { key: 0 }\nconst _hoisted_4 = { key: 1 }\nconst _hoisted_5 = { key: 2 }\nconst _hoisted_6 = { key: 3 }\nconst _hoisted_7 = { key: 4 }\nconst _hoisted_8 = { key: 5 }\nconst _hoisted_9 = { key: 6 }\nconst _hoisted_10 = { key: 7 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(\"ul\", _hoisted_2, [\n      (this.fromPage == 'home' )\n        ? (_openBlock(), _createBlock(\"li\", _hoisted_3, [\n            _createVNode(\"button\", {\n              class: \"navBarBtn btn home fas fa-home disabled\",\n              title: _ctx.$t('HOME')\n            }, null, 8, [\"title\"])\n          ]))\n        : (_openBlock(), _createBlock(\"li\", _hoisted_4, [\n            _createVNode(\"button\", {\n              onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.goHomePage && _ctx.goHomePage(...args))),\n              class: \"navBarBtn btn home fas fa-home\",\n              title: _ctx.$t('HOME')\n            }, null, 8, [\"title\"])\n          ])),\n      (this.fromPage == 'accounts' )\n        ? (_openBlock(), _createBlock(\"li\", _hoisted_5, [\n            _createVNode(\"button\", {\n              class: \"navBarBtn btn account fas fa-euro-sign disabled\",\n              title: _ctx.$t('ACCOUNTS')\n            }, null, 8, [\"title\"])\n          ]))\n        : (_openBlock(), _createBlock(\"li\", _hoisted_6, [\n            _createVNode(\"button\", {\n              onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.goChooseAccount && _ctx.goChooseAccount(...args))),\n              class: \"navBarBtn btn account fas fa-euro-sign\",\n              title: _ctx.$t('ACCOUNTS')\n            }, null, 8, [\"title\"])\n          ])),\n      (this.fromPage == 'chart' )\n        ? (_openBlock(), _createBlock(\"li\", _hoisted_7, [\n            _createVNode(\"button\", {\n              class: \"navBarBtn btn chart fas fa-chart-line disabled\",\n              title: _ctx.$t('CHART')\n            }, null, 8, [\"title\"])\n          ]))\n        : (_openBlock(), _createBlock(\"li\", _hoisted_8, [\n            _createVNode(\"button\", {\n              onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.goChartPage && _ctx.goChartPage(...args))),\n              class: \"navBarBtn btn chart fas fa-chart-line\",\n              title: _ctx.$t('CHART')\n            }, null, 8, [\"title\"])\n          ])),\n      (this.fromPage == 'profile' )\n        ? (_openBlock(), _createBlock(\"li\", _hoisted_9, [\n            _createVNode(\"button\", {\n              class: \"navBarBtn btn profile fas fa-cog disabled\",\n              title: _ctx.$t('PREFERENCES')\n            }, null, 8, [\"title\"])\n          ]))\n        : (_openBlock(), _createBlock(\"li\", _hoisted_10, [\n            _createVNode(\"button\", {\n              onClick: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.goProfilePage && _ctx.goProfilePage(...args))),\n              class: \"navBarBtn btn profile fas fa-cog\",\n              title: _ctx.$t('PREFERENCES')\n            }, null, 8, [\"title\"])\n          ]))\n    ])\n  ]))\n}","\nimport { defineComponent } from 'vue'\nimport router, { RouterPages } from '@/router'\n\ninterface MenuData {\n    fromPage: string;\n}\n\nexport default defineComponent({\n  name: 'NavMenu',\n  props: {\n    page: {\n      type: String,\n      required: true\n    }\n  },\n  data (): MenuData {\n    return {\n      fromPage: this.$props.page\n    }\n  },\n  methods: {\n    goHomePage () {\n      router.push(RouterPages.home)\n    },\n    goProfilePage () {\n      router.push(RouterPages.profile)\n    },\n    goChooseAccount () {\n      router.push(RouterPages.redirectToAccountPage)\n    },\n    goChartPage () {\n      router.push(RouterPages.chartPage)\n    }\n  }\n})\n","import { render } from \"./NavigationMenu.vue?vue&type=template&id=0c1e1e3b&ts=true\"\nimport script from \"./NavigationMenu.vue?vue&type=script&lang=ts\"\nexport * from \"./NavigationMenu.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue'\nimport StoreHandler from '@/store/StoreHandler'\nimport router, { RouterPages, redirectToLoginPageIfNotLogged } from '@/router'\nimport BudgetCmpt from '@/components/BudgetCmpt.vue' // @ is an alias to /src\nimport AccountsWidget from '@/components/AccountsWidget.vue'\nimport PersonService from '@/services/PersonService'\nimport Time from '@/utils/Time'\nimport Loader from '@/components/utils/Loader.vue'\nimport NavMenu from '@/components/NavigationMenu.vue'\n\nexport default defineComponent({\n  name: 'Home',\n  beforeCreate: async function () {\n    redirectToLoginPageIfNotLogged(this.$store)\n  },\n  created: async function () {\n    StoreHandler.initStore(this.$store)\n  },\n  components: {\n    BudgetCmpt,\n    AccountsWidget,\n    Loader,\n    NavMenu\n  },\n  data () {\n    return {\n      currentMonth: Time.getCurrentMonth()\n    }\n  },\n  methods: {\n    logout () {\n      PersonService.deleteSession(this.$store)\n    },\n    goToProfile () {\n      router.push(RouterPages.profile)\n    }\n  }\n})\n","import { render } from \"./Home.vue?vue&type=template&id=bd9ee738&ts=true\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nimport _imports_0 from '../assets/logo.png'\n\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-86160200\")\n\n_pushScopeId(\"data-v-86160200\")\nconst _hoisted_1 = { id: \"login_page\" }\nconst _hoisted_2 = { class: \"form\" }\nconst _hoisted_3 = /*#__PURE__*/_createVNode(\"img\", {\n  id: \"logo\",\n  alt: \"Vue logo\",\n  src: _imports_0\n}, null, -1)\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId((_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) => {\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(\"div\", _hoisted_2, [\n      _hoisted_3,\n      _withDirectives(_createVNode(\"input\", {\n        class: \"form-control\",\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (_ctx.email = $event)),\n        placeholder: _ctx.$t('EMAIL')\n      }, null, 8, [\"placeholder\"]), [\n        [_vModelText, _ctx.email]\n      ]),\n      _withDirectives(_createVNode(\"input\", {\n        class: \"form-control\",\n        type: \"password\",\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => (_ctx.password = $event)),\n        placeholder: _ctx.$t('PASSWORD')\n      }, null, 8, [\"placeholder\"]), [\n        [_vModelText, _ctx.password]\n      ]),\n      _createVNode(\"button\", {\n        class: \"navigationButton btn\",\n        onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.login && _ctx.login(...args)))\n      }, _toDisplayString(_ctx.$t('LOGIN')), 1),\n      _createVNode(\"p\", null, _toDisplayString(_ctx.errorMsg), 1),\n      _createVNode(\"button\", {\n        id: \"toOtherForm\",\n        class: \"navigationButton btn\",\n        onClick: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.goToSignUp && _ctx.goToSignUp(...args)))\n      }, _toDisplayString(_ctx.$t('CREATE_ACCOUNT_HERE')), 1)\n    ])\n  ]))\n})","\nimport { defineComponent } from 'vue'\nimport PersonService from '@/services/PersonService'\nimport router, { RouterPages } from '@/router'\n\nexport default defineComponent({\n  name: 'Login',\n  components: {},\n  data () {\n    return {\n      email: '',\n      password: '',\n      errorMsg: ''\n    }\n  },\n  methods: {\n    async login () {\n      const responseData = await PersonService.createSession(this.$store, this.email, this.password)\n      if (responseData.unlockingDate !== null) {\n        const minutes = 1000 * 60\n        const lockingDuration = Math.round((responseData.unlockingDate - new Date().getTime()) / minutes)\n        if (lockingDuration > 0) {\n          this.$data.errorMsg = this.$t('SORRY_LOCKED_OUT', { lockingDuration: lockingDuration })\n        } else {\n          this.$data.errorMsg = this.$t('SORRY_WRONG_PASSWORD')\n        }\n      } else {\n        this.$data.errorMsg = this.$t('SORRY_WRONG_LOGIN')\n      }\n    },\n    async goToSignUp (): Promise<void> {\n      router.push(RouterPages.signup)\n    }\n  }\n\n})\n","import { render } from \"./Login.vue?vue&type=template&id=86160200&scoped=true&ts=true\"\nimport script from \"./Login.vue?vue&type=script&lang=ts\"\nexport * from \"./Login.vue?vue&type=script&lang=ts\"\n\nimport \"./Login.vue?vue&type=style&index=0&id=86160200&scoped=true&lang=less\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-86160200\"]])\n\nexport default __exports__","import { toDisplayString as _toDisplayString, createVNode as _createVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\nimport _imports_0 from '../assets/logo_round.png'\n\n\nconst _hoisted_1 = { class: \"profilePage menuLayout row col-md-8 offset-md-2 col-xxl-6 offset-xxl-3\" }\nconst _hoisted_2 = { class: \"header fixed title\" }\nconst _hoisted_3 = { class: \"placeholder top\" }\nconst _hoisted_4 = { class: \"content container\" }\nconst _hoisted_5 = /*#__PURE__*/_createVNode(\"img\", {\n  id: \"logoface\",\n  alt: \"Vue logoface\",\n  src: _imports_0\n}, null, -1)\nconst _hoisted_6 = /*#__PURE__*/_createVNode(\"span\", { class: \"illustration fas fa-credit-card col-4\" }, null, -1)\nconst _hoisted_7 = { class: \"illustrationLabel col-8\" }\nconst _hoisted_8 = /*#__PURE__*/_createVNode(\"span\", { class: \"illustration fas fa-university col-4\" }, null, -1)\nconst _hoisted_9 = { class: \"illustrationLabel col-8\" }\nconst _hoisted_10 = { class: \"navigationButton disabled row\" }\nconst _hoisted_11 = /*#__PURE__*/_createVNode(\"span\", { class: \"illustration fas fa-book-open col-4\" }, null, -1)\nconst _hoisted_12 = { class: \"illustrationLabel col-8\" }\nconst _hoisted_13 = { class: \"navigationButton disabled row\" }\nconst _hoisted_14 = /*#__PURE__*/_createVNode(\"span\", { class: \"illustration fas fa-palette col-4\" }, null, -1)\nconst _hoisted_15 = { class: \"illustrationLabel col-8\" }\nconst _hoisted_16 = {\n  class: \"navigationButton row\",\n  href: \"https://forum.agatha-budget.fr\"\n}\nconst _hoisted_17 = /*#__PURE__*/_createVNode(\"span\", { class: \"illustration fas fa-question col-4\" }, null, -1)\nconst _hoisted_18 = { class: \"illustrationLabel col-8\" }\nconst _hoisted_19 = /*#__PURE__*/_createVNode(\"span\", { class: \"illustration fas fa-sign-out-alt col-4\" }, null, -1)\nconst _hoisted_20 = { class: \"illustrationLabel col-8\" }\nconst _hoisted_21 = { class: \"placeholder bottom\" }\nconst _hoisted_22 = { class: \"footer fixed\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_NavMenu = _resolveComponent(\"NavMenu\")\n\n  return (_openBlock(), _createBlock(\"div\", {\n    class: this.$store.state.css\n  }, [\n    _createVNode(\"div\", _hoisted_1, [\n      _createVNode(\"div\", _hoisted_2, _toDisplayString(_ctx.$t('PARAMETERS')), 1),\n      _createVNode(\"div\", _hoisted_3, _toDisplayString(_ctx.$t('PARAMETERS')), 1),\n      _createVNode(\"div\", _hoisted_4, [\n        _hoisted_5,\n        _createVNode(\"button\", {\n          class: \"navigationButton row\",\n          onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.goToSubscriptionPage && _ctx.goToSubscriptionPage(...args)))\n        }, [\n          _hoisted_6,\n          _createVNode(\"span\", _hoisted_7, _toDisplayString(_ctx.$t(\"SUBSCRIPTION\")), 1)\n        ]),\n        _createVNode(\"button\", {\n          class: \"navigationButton row\",\n          onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.goToBanksPage && _ctx.goToBanksPage(...args)))\n        }, [\n          _hoisted_8,\n          _createVNode(\"span\", _hoisted_9, _toDisplayString(_ctx.$t(\"BANKS\")), 1)\n        ]),\n        _createVNode(\"button\", _hoisted_10, [\n          _hoisted_11,\n          _createVNode(\"span\", _hoisted_12, _toDisplayString(_ctx.$t(\"FREE_RESOURCES\")), 1)\n        ]),\n        _createVNode(\"button\", _hoisted_13, [\n          _hoisted_14,\n          _createVNode(\"span\", _hoisted_15, _toDisplayString(_ctx.$t(\"APPEARANCE\")), 1)\n        ]),\n        _createVNode(\"a\", _hoisted_16, [\n          _hoisted_17,\n          _createVNode(\"span\", _hoisted_18, _toDisplayString(_ctx.$t(\"SUPPORT\")), 1)\n        ]),\n        _createVNode(\"button\", {\n          class: \"navigationButton row\",\n          onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.logout && _ctx.logout(...args)))\n        }, [\n          _hoisted_19,\n          _createVNode(\"span\", _hoisted_20, _toDisplayString(_ctx.$t(\"LOGOUT\")), 1)\n        ])\n      ]),\n      _createVNode(\"div\", _hoisted_21, [\n        _createVNode(_component_NavMenu, { page: 'profile' })\n      ]),\n      _createVNode(\"div\", _hoisted_22, [\n        _createVNode(_component_NavMenu, { page: 'profile' })\n      ])\n    ])\n  ], 2))\n}","\nimport { defineComponent } from 'vue'\nimport NavMenu from '@/components/NavigationMenu.vue'\nimport PersonService from '@/services/PersonService'\nimport StoreHandler from '@/store/StoreHandler'\nimport router, { RouterPages } from '@/router'\n\nexport default defineComponent({\n  name: 'profilePage',\n  components: { NavMenu },\n  created: async function () {\n    StoreHandler.initStore(this.$store)\n  },\n  data () {\n    return { }\n  },\n  methods: {\n    logout () {\n      PersonService.deleteSession(this.$store)\n    },\n    goToSubscriptionPage () {\n      router.push(RouterPages.subscription)\n    },\n    goToBanksPage () {\n      router.push(RouterPages.banks)\n    }\n  }\n})\n","import { render } from \"./Profile.vue?vue&type=template&id=4827ff6a&ts=true\"\nimport script from \"./Profile.vue?vue&type=script&lang=ts\"\nexport * from \"./Profile.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { toDisplayString as _toDisplayString, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelCheckbox as _vModelCheckbox, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent } from \"vue\"\n\nconst _hoisted_1 = { class: \"bankPage menuLayout row col-md-8 offset-md-2 col-xxl-6 offset-xxl-3\" }\nconst _hoisted_2 = { class: \"header fixed title\" }\nconst _hoisted_3 = { class: \"placeholder top\" }\nconst _hoisted_4 = { class: \"banner\" }\nconst _hoisted_5 = { class: \"title\" }\nconst _hoisted_6 = { class: \"subtitle col-md-4\" }\nconst _hoisted_7 = { class: \"col-md-4 col-8 offset-2 offset-md-0 bankSelector\" }\nconst _hoisted_8 = {\n  value: \"none\",\n  selected: \"\"\n}\nconst _hoisted_9 = { class: \"col-md-4 col-8 offset-2 offset-md-0 historyCheckBox\" }\nconst _hoisted_10 = {\n  class: \"form-check-label\",\n  for: \"importHistory\"\n}\nconst _hoisted_11 = { class: \"banner\" }\nconst _hoisted_12 = { class: \"title\" }\nconst _hoisted_13 = { class: \"col-md-6\" }\nconst _hoisted_14 = { class: \"col-md-6\" }\nconst _hoisted_15 = { class: \"subtext\" }\nconst _hoisted_16 = { class: \"container bordered col-8 offset-2\" }\nconst _hoisted_17 = { class: \"subtitle\" }\nconst _hoisted_18 = { class: \"bold\" }\nconst _hoisted_19 = { class: \"placeholder bottom\" }\nconst _hoisted_20 = { class: \"footer fixed\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Multiselect = _resolveComponent(\"Multiselect\")\n  const _component_NavMenu = _resolveComponent(\"NavMenu\")\n\n  return (_openBlock(), _createBlock(\"div\", {\n    class: this.$store.state.css\n  }, [\n    _createVNode(\"div\", _hoisted_1, [\n      _createVNode(\"div\", _hoisted_2, _toDisplayString(_ctx.$t('BANKS')), 1),\n      _createVNode(\"div\", _hoisted_3, _toDisplayString(_ctx.$t('BANKS')), 1),\n      _createVNode(\"div\", _hoisted_4, [\n        _createVNode(\"div\", _hoisted_5, _toDisplayString(_ctx.$t('ACCOUNT_ASSOCIATION')), 1)\n      ]),\n      (_openBlock(true), _createBlock(_Fragment, null, _renderList(this.accounts, (account) => {\n        return (_openBlock(), _createBlock(_Fragment, { key: account }, [\n          _createVNode(\"div\", _hoisted_6, _toDisplayString(account.name), 1),\n          _createVNode(\"div\", _hoisted_7, [\n            _withDirectives(_createVNode(\"select\", {\n              class: \"form-select\",\n              \"onUpdate:modelValue\": ($event: any) => (_ctx.bankAssociation[account.id].bankAccountId = $event)\n            }, [\n              _createVNode(\"option\", _hoisted_8, _toDisplayString(_ctx.$t('NO_ASSOCIATED_BANK_ACCOUNT')), 1),\n              (_openBlock(true), _createBlock(_Fragment, null, _renderList(this.bankAccounts, (bankAccount) => {\n                return (_openBlock(), _createBlock(\"option\", {\n                  key: bankAccount,\n                  value: bankAccount.id\n                }, _toDisplayString(bankAccount.name), 9, [\"value\"]))\n              }), 128))\n            ], 8, [\"onUpdate:modelValue\"]), [\n              [_vModelSelect, _ctx.bankAssociation[account.id].bankAccountId]\n            ])\n          ]),\n          _createVNode(\"div\", _hoisted_9, [\n            (_ctx.displayImportHistoryOption(account))\n              ? (_openBlock(), _createBlock(_Fragment, { key: 0 }, [\n                  _createVNode(\"label\", _hoisted_10, _toDisplayString(_ctx.$t('IMPORT_HISTORY')), 1),\n                  _withDirectives(_createVNode(\"input\", {\n                    id: \"importHistory\",\n                    class: \"form-check-input\",\n                    type: \"checkbox\",\n                    \"onUpdate:modelValue\": ($event: any) => (_ctx.bankAssociation[account.id].importHistory = $event)\n                  }, null, 8, [\"onUpdate:modelValue\"]), [\n                    [_vModelCheckbox, _ctx.bankAssociation[account.id].importHistory]\n                  ])\n                ], 64))\n              : _createCommentVNode(\"\", true)\n          ])\n        ], 64))\n      }), 128)),\n      _createVNode(\"button\", {\n        class: \"actionButton\",\n        onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.saveAssociation()))\n      }, _toDisplayString(_ctx.$t('UPDATE')), 1),\n      _createVNode(\"div\", _hoisted_11, [\n        _createVNode(\"div\", _hoisted_12, _toDisplayString(_ctx.$t('SYNCHRONISED_BANKS')), 1)\n      ]),\n      (_openBlock(true), _createBlock(_Fragment, null, _renderList(this.authorizedBanks, (timestampList, bankId) => {\n        return (_openBlock(), _createBlock(\"div\", {\n          key: bankId,\n          class: \"container bordered row col-8 offset-2\"\n        }, [\n          _createVNode(\"div\", _hoisted_13, [\n            _createVNode(\"img\", {\n              class: \"illustration banklogo\",\n              alt: \"banklogo\",\n              src: _ctx.getLogo(bankId)\n            }, null, 8, [\"src\"])\n          ]),\n          _createVNode(\"div\", _hoisted_14, [\n            (_openBlock(true), _createBlock(_Fragment, null, _renderList(timestampList, (bankAccountArray, timestamp) => {\n              return (_openBlock(), _createBlock(_Fragment, { key: timestamp }, [\n                _createVNode(\"div\", _hoisted_15, _toDisplayString(_ctx.$t('EXPIRE_ON')) + \" \" + _toDisplayString(_ctx.getExpirationDateFromTimestamp(timestamp)), 1),\n                (_openBlock(true), _createBlock(_Fragment, null, _renderList(bankAccountArray, (bankAccount) => {\n                  return (_openBlock(), _createBlock(\"div\", { key: bankAccount }, _toDisplayString(bankAccount.name), 1))\n                }), 128))\n              ], 64))\n            }), 128))\n          ])\n        ]))\n      }), 128)),\n      _createVNode(\"div\", _hoisted_16, [\n        _createVNode(\"div\", _hoisted_17, _toDisplayString(_ctx.$t('ADD_BANK_AUTHORIZATION')), 1),\n        _createVNode(\"p\", null, _toDisplayString(_ctx.$t('WHY_ADD_AUTHORIZATION_TEXT_P1')), 1),\n        _createVNode(\"p\", _hoisted_18, _toDisplayString(_ctx.$t('WHY_ADD_AUTHORIZATION_TEXT_P2')), 1),\n        _createVNode(\"p\", null, _toDisplayString(_ctx.$t('WHY_ADD_AUTHORIZATION_TEXT_P3')), 1),\n        _createVNode(_component_Multiselect, {\n          modelValue: _ctx.selectedBankId,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => (_ctx.selectedBankId = $event)),\n          groups: false,\n          searchable: true,\n          options: _ctx.bankOptions,\n          noResultsText: _ctx.$t('NO_RESULT_FOUND'),\n          placeholder: _ctx.$t('SELECT_BANK')\n        }, null, 8, [\"modelValue\", \"options\", \"noResultsText\", \"placeholder\"]),\n        _createVNode(\"button\", {\n          class: \"actionButton\",\n          onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.getBankAuthorization && _ctx.getBankAuthorization(...args)))\n        }, _toDisplayString(_ctx.$t('AUTHORIZE')), 1)\n      ]),\n      _createVNode(\"div\", _hoisted_19, [\n        _createVNode(_component_NavMenu, { page: 'profile' })\n      ]),\n      _createVNode(\"div\", _hoisted_20, [\n        _createVNode(_component_NavMenu, { page: 'profile' })\n      ])\n    ])\n  ], 2))\n}","import { Bank, Budget, BankAccount } from '@/model/model'\nimport { bankingApi } from '@/services/api/apis'\nimport axios from 'axios'\n\nexport default class BankingService {\n  public static async getAvailableBanks (): Promise<Bank[]> {\n    const response = await bankingApi.getAvailableBanks()\n    return response.data\n  }\n\n  public static async getAuthorizedAccounts (budget: Budget): Promise<BankAccount[]> {\n    const response = await bankingApi.getAuthorizedAccounts(budget.id)\n    return response.data\n  }\n\n  public static async updateBankAccountList (bankAgreemendId: string) {\n    await bankingApi.updateBankAccountList(bankAgreemendId)\n  }\n\n  public static async goToBankAgreement (budget: Budget, bankId: string) {\n    try {\n      const agreementUrl = (await (bankingApi.getLinkForBankAgreement(bankId, budget.id))).data\n      window.location.href = agreementUrl\n    } catch (exception) {\n      if (axios.isAxiosError(exception)) {\n        alert(exception.response?.data)\n      }\n    }\n  }\n}\n","\nimport { defineComponent } from 'vue'\nimport StoreHandler from '@/store/StoreHandler'\nimport NavMenu from '@/components/NavigationMenu.vue'\nimport BankingService from '@/services/BankingService'\nimport { Bank, BankAccount, Budget, Account, SelectOption } from '@/model/model'\nimport AccountService from '@/services/AccountService'\nimport Time from '@/utils/Time'\nimport Multiselect from '@vueform/multiselect'\nimport router, { RouterPages } from '@/router'\n\ninterface BankAuthorizationList {\n  [bankId: string]: BankAccountByTimestampList;\n}\n\ninterface BankAccountByTimestampList {\n  [timestamp: number]: BankAccount[];\n}\n\ninterface BanksData {\n  availableBanks: Bank[];\n  bankAccounts: BankAccount[];\n  bankAssociation: BankAssociationList;\n  selectedBankId: string|null;\n}\n\ninterface BankAssociationList {\n  [accountId: string]: BankAssociationData;\n}\n\ninterface BankAssociationData {\n  bankAccountId: string;\n  importHistory: boolean;\n}\n\nexport default defineComponent({\n  name: 'banksPage',\n  components: { NavMenu, Multiselect },\n  created: async function () {\n    StoreHandler.initBudget(this.$store)\n    this.getAvailableBanks()\n    this.getAuthorizedAccounts()\n    this.updateIfAgreement()\n    this.updateAssociationData()\n  },\n  props: {\n    query: {\n      type: String,\n      required: false\n    }\n  },\n  data (): BanksData {\n    return {\n      availableBanks: [],\n      bankAccounts: [],\n      bankAssociation: {},\n      selectedBankId: null\n    }\n  },\n  watch: {\n    budget: async function () {\n      this.getAuthorizedAccounts()\n    },\n    accounts: async function () {\n      this.updateAssociationData()\n    }\n  },\n  computed: {\n    budget (): Budget | null {\n      return this.$store.state.budget\n    },\n    accounts (): Account[] | null {\n      return this.$store.state.accounts\n    },\n    authorizedBanks (): BankAuthorizationList | null {\n      return this.groupAccountByBankAndTimestamp(this.bankAccounts)\n    },\n    bankOptions (): SelectOption[] {\n      const optionsList = []\n      for (const bank of this.availableBanks) {\n        const option = { value: bank.id, label: bank.name }\n        optionsList.push(option)\n      }\n      return optionsList\n    }\n  },\n  methods: {\n    getAvailableBanks () {\n      BankingService.getAvailableBanks().then(\n        (bankList) => {\n          this.availableBanks = bankList\n        }\n      )\n    },\n    getAuthorizedAccounts () {\n      if (this.budget) {\n        BankingService.getAuthorizedAccounts(this.budget).then(\n          (bankAccountList) => {\n            this.bankAccounts = bankAccountList\n          }\n        )\n      }\n    },\n    getBankAuthorization () {\n      if (this.budget && this.selectedBankId) {\n        BankingService.goToBankAgreement(this.budget, this.selectedBankId)\n      }\n    },\n    updateIfAgreement () {\n      if (this.$props.query != null) {\n        const agreementId = this.$props.query.split('?')[0]\n        BankingService.updateBankAccountList(agreementId)\n        router.push(RouterPages.banks)\n      }\n    },\n    updateAssociationData () {\n      if (this.accounts) {\n        for (const i in this.accounts) {\n          const account = this.accounts[i]\n          this.bankAssociation[account.id] = {\n            bankAccountId: account.bankAccountId || 'none',\n            importHistory: false\n          }\n        }\n      }\n    },\n    displayImportHistoryOption (account: Account): boolean {\n      return (this.bankAssociation[account.id].bankAccountId !== account.bankAccountId && this.bankAssociation[account.id].bankAccountId !== 'none')\n    },\n    saveAssociation () {\n      if (this.accounts) {\n        for (const i in this.accounts) {\n          const account = this.accounts[i]\n          const bankAccountId = this.bankAssociation[account.id].bankAccountId\n          const importHistory = this.bankAssociation[account.id].importHistory\n          if (account.bankAccountId !== bankAccountId) {\n            AccountService.updateAccountBankAssociation(this.$store, account.id, bankAccountId, importHistory)\n          }\n        }\n        StoreHandler.updateAccounts(this.$store)\n      }\n    },\n    groupAccountByBankAndTimestamp (bankAccounts: BankAccount[]): BankAuthorizationList {\n      const banks: BankAuthorizationList = {}\n      bankAccounts.forEach(function (bankAccount) {\n        if (bankAccount.bankId in banks) {\n          const bankIdList = banks[bankAccount.bankId]\n          if (bankAccount.timestamp in bankIdList) {\n            bankIdList[bankAccount.timestamp].push(bankAccount)\n          } else {\n            bankIdList[bankAccount.timestamp] = [bankAccount]\n          }\n        } else {\n          const timeStampList: BankAccountByTimestampList = {}\n          timeStampList[bankAccount.timestamp] = [bankAccount]\n          banks[bankAccount.bankId] = timeStampList\n        }\n      })\n      return banks\n    },\n    getLogo (bankId: string): string {\n      for (const bank of this.availableBanks) {\n        if (bank.id === bankId) {\n          return bank.logo\n        }\n      }\n      return 'not found'\n    },\n    getExpirationDateFromTimestamp (timestamp: number): string {\n      const expirationTimestamp = Time.after90Days(timestamp)\n      return Time.getDateStringFromTimestamp(expirationTimestamp)\n    }\n  }\n})\n","import { render } from \"./Banks.vue?vue&type=template&id=0895741d&ts=true\"\nimport script from \"./Banks.vue?vue&type=script&lang=ts\"\nexport * from \"./Banks.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, openBlock as _openBlock, createBlock as _createBlock, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nimport _imports_0 from '../assets/logo.png'\n\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-67025d24\")\n\n_pushScopeId(\"data-v-67025d24\")\nconst _hoisted_1 = { id: \"sign_up_page\" }\nconst _hoisted_2 = { class: \"form\" }\nconst _hoisted_3 = /*#__PURE__*/_createVNode(\"img\", {\n  id: \"logo\",\n  alt: \"Vue logo\",\n  src: _imports_0\n}, null, -1)\nconst _hoisted_4 = {\n  disabled: \"\",\n  value: \"\"\n}\nconst _hoisted_5 = { value: \"PROFILE_USER\" }\nconst _hoisted_6 = { value: \"PROFILE_COMPANY\" }\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId((_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) => {\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(\"div\", _hoisted_2, [\n      _hoisted_3,\n      _withDirectives(_createVNode(\"input\", {\n        class: \"form-control\",\n        type: \"textInput\",\n        id: \"name\",\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (_ctx.name = $event)),\n        placeholder: _ctx.$t('NAME')\n      }, null, 8, [\"placeholder\"]), [\n        [_vModelText, _ctx.name]\n      ]),\n      _withDirectives(_createVNode(\"input\", {\n        class: \"form-control\",\n        id: \"email\",\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => (_ctx.email = $event)),\n        placeholder: _ctx.$t('EMAIL')\n      }, null, 8, [\"placeholder\"]), [\n        [_vModelText, _ctx.email]\n      ]),\n      _withDirectives(_createVNode(\"input\", {\n        class: \"form-control\",\n        type: \"password\",\n        id: \"password\",\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => (_ctx.password = $event)),\n        placeholder: _ctx.$t('PASSWORD')\n      }, null, 8, [\"placeholder\"]), [\n        [_vModelText, _ctx.password]\n      ]),\n      _withDirectives(_createVNode(\"input\", {\n        class: \"form-control\",\n        type: \"password\",\n        id: \"passwordConfirm\",\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => (_ctx.passwordConfirm = $event)),\n        placeholder: _ctx.$t('PASSWORD_CONFIRMATION')\n      }, null, 8, [\"placeholder\"]), [\n        [_vModelText, _ctx.passwordConfirm]\n      ]),\n      _withDirectives(_createVNode(\"select\", {\n        class: \"form-control\",\n        id: \"selectProfile\",\n        \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => (_ctx.profile = $event))\n      }, [\n        _createVNode(\"option\", _hoisted_4, _toDisplayString(_ctx.$t('CHOOSE_PROFILE')), 1),\n        _createVNode(\"option\", _hoisted_5, _toDisplayString(_ctx.$t('USER')), 1),\n        _createVNode(\"option\", _hoisted_6, _toDisplayString(_ctx.$t('COMPANY')), 1)\n      ], 512), [\n        [_vModelSelect, _ctx.profile]\n      ]),\n      _createVNode(\"button\", {\n        class: \"navigationButton btn\",\n        onClick: _cache[6] || (_cache[6] = \n//@ts-ignore\n(...args) => (_ctx.create && _ctx.create(...args)))\n      }, _toDisplayString(_ctx.$t('CREATE_MY_ACCOUNT')), 1),\n      _createVNode(\"p\", null, _toDisplayString(_ctx.errorMsg), 1),\n      _createVNode(\"button\", {\n        id: \"toOtherForm\",\n        class: \"navigationButton btn\",\n        onClick: _cache[7] || (_cache[7] = \n//@ts-ignore\n(...args) => (_ctx.goToLogin && _ctx.goToLogin(...args)))\n      }, _toDisplayString(_ctx.$t('LOGIN')), 1)\n    ])\n  ]))\n})","\nimport { defineComponent } from 'vue'\nimport PersonService from '@/services/PersonService'\nimport router, { RouterPages } from '@/router'\n\nexport default defineComponent({\n  name: 'Signup',\n  components: {},\n  data () {\n    return {\n      name: '',\n      email: '',\n      password: '',\n      passwordConfirm: '',\n      errorMsg: '',\n      profile: ''\n    }\n  },\n  computed: {\n    logged (): boolean {\n      return this.$store.state.logged\n    }\n  },\n  methods: {\n    async create () {\n      if (this.testForm()) {\n        PersonService.createPerson(this.$store, this.name, this.email, this.password, this.profile)\n      }\n    },\n    testForm (): boolean {\n      // regex verify email have an email form\n      const regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\n      if (this.password !== this.passwordConfirm) {\n        this.$data.errorMsg = this.$t('DIFFERENT_PASSWORDS')\n        return false\n      }\n      if (!this.passwordCheckSecurity(this.password)) {\n        this.$data.errorMsg = this.$t('INSUFFICIENT_SECURITY')\n        return false\n      }\n      if (!this.email.match(regex)) {\n        this.$data.errorMsg = this.$t('INVALID_EMAIL')\n        return false\n      }\n      if (this.name === '') {\n        this.$data.errorMsg = this.$t('EMPTY_NAME')\n        return false\n      }\n      if (this.profile === '') {\n        this.$data.errorMsg = this.$t('EMPTY_PROFILE')\n        return false\n      }\n      return true\n    },\n    passwordCheckSecurity (password: string): boolean {\n      // regExp verify password is enought complex (more than 8 caracters, with lower and capital letter and with special caracter !@#$%&*())\n      const regExp = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%&*()-_<>/\\\\]).{8,}/\n      const validPassword = regExp.test(password)\n      return validPassword\n    },\n    async goToLogin (): Promise<void> {\n      router.push(RouterPages.login)\n    }\n  }\n\n})\n","import { render } from \"./Signup.vue?vue&type=template&id=67025d24&scoped=true&ts=true\"\nimport script from \"./Signup.vue?vue&type=script&lang=ts\"\nexport * from \"./Signup.vue?vue&type=script&lang=ts\"\n\nimport \"./Signup.vue?vue&type=style&index=0&id=67025d24&scoped=true&lang=less\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-67025d24\"]])\n\nexport default __exports__","import { toDisplayString as _toDisplayString, createVNode as _createVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"redirectToAccountPage menuLayout row col-md-8 offset-md-2 col-xxl-6 offset-xxl-3\" }\nconst _hoisted_2 = { class: \"header fixed title\" }\nconst _hoisted_3 = { class: \"placeholder top\" }\nconst _hoisted_4 = { class: \"content container\" }\nconst _hoisted_5 = { class: \"placeholder bottom\" }\nconst _hoisted_6 = { class: \"footer fixed\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_AccountsWidget = _resolveComponent(\"AccountsWidget\")\n  const _component_NavMenu = _resolveComponent(\"NavMenu\")\n\n  return (_openBlock(), _createBlock(\"div\", {\n    class: this.$store.state.css\n  }, [\n    _createVNode(\"div\", _hoisted_1, [\n      _createVNode(\"div\", _hoisted_2, _toDisplayString(_ctx.$t('MY_ACCOUNTS')), 1),\n      _createVNode(\"div\", _hoisted_3, _toDisplayString(_ctx.$t('MY_ACCOUNTS')), 1),\n      _createVNode(\"div\", _hoisted_4, [\n        _createVNode(_component_AccountsWidget, { page: 'account' })\n      ]),\n      _createVNode(\"div\", _hoisted_5, [\n        _createVNode(_component_NavMenu, { page: 'accounts' })\n      ]),\n      _createVNode(\"div\", _hoisted_6, [\n        _createVNode(_component_NavMenu, { page: 'accounts' })\n      ])\n    ])\n  ], 2))\n}","\nimport { defineComponent } from 'vue'\nimport AccountsWidget from '@/components/AccountsWidget.vue'\nimport NavMenu from '@/components/NavigationMenu.vue'\n\nexport default defineComponent({\n  name: 'RedirectToAccountPage',\n  components: {\n    AccountsWidget,\n    NavMenu\n  },\n  methods: {}\n})\n","import { render } from \"./RedirectToAccountPage.vue?vue&type=template&id=34ca305b&ts=true\"\nimport script from \"./RedirectToAccountPage.vue?vue&type=script&lang=ts\"\nexport * from \"./RedirectToAccountPage.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = { class: \"accountPage row col-lg-10 offset-lg-1 col-xl-8 offset-xl-2\" }\nconst _hoisted_2 = { class: \"header fixed\" }\nconst _hoisted_3 = { class: \"placeholderTop\" }\nconst _hoisted_4 = { class: \"content container operationTable table-hover\" }\nconst _hoisted_5 = { class: \"dualTab switchOperation\" }\nconst _hoisted_6 = /*#__PURE__*/_createVNode(\"span\", { class: \"illustration btn fas fa-filter\" }, null, -1)\nconst _hoisted_7 = { class: \"text\" }\nconst _hoisted_8 = {\n  key: 1,\n  class: \"allOperation operation\"\n}\nconst _hoisted_9 = {\n  key: 0,\n  class: \"row col-12\"\n}\nconst _hoisted_10 = { class: \"lineStart date col-6\" }\nconst _hoisted_11 = /*#__PURE__*/_createVNode(\"div\", { class: \"col-6\" }, null, -1)\nconst _hoisted_12 = /*#__PURE__*/_createVNode(\"button\", { class: \"illustration btn fas fa-pen\" }, null, -1)\nconst _hoisted_13 = /*#__PURE__*/_createVNode(\"button\", { class: \"illustration btn fas fa-trash\" }, null, -1)\nconst _hoisted_14 = /*#__PURE__*/_createVNode(\"button\", { class: \"illustration btn fas fa-hourglass-half\" }, null, -1)\nconst _hoisted_15 = {\n  key: 1,\n  class: \"row col-12\"\n}\nconst _hoisted_16 = { class: \"lineStart date col-6\" }\nconst _hoisted_17 = { class: \"lineStart memo col-12 row\" }\nconst _hoisted_18 = /*#__PURE__*/_createVNode(\"button\", { class: \"illustration btn fas fa-pen\" }, null, -1)\nconst _hoisted_19 = /*#__PURE__*/_createVNode(\"button\", { class: \"illustration btn fas fa-trash\" }, null, -1)\nconst _hoisted_20 = /*#__PURE__*/_createVNode(\"button\", { class: \"illustration btn fas fa-hourglass-half\" }, null, -1)\nconst _hoisted_21 = /*#__PURE__*/_createVNode(\"div\", { class: \"col-1 offset-1 offset-sm-0\" }, [\n  /*#__PURE__*/_createVNode(\"span\", { class: \"illustration btn fas fa-level-up-alt\" })\n], -1)\nconst _hoisted_22 = { class: \"memo col-10 offset-2 col-sm-11 offset-sm-1\" }\nconst _hoisted_23 = { class: \"placeholder bottom\" }\nconst _hoisted_24 = { class: \"footer fixed\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_AccountPageHeader = _resolveComponent(\"AccountPageHeader\")\n  const _component_ImportOfx = _resolveComponent(\"ImportOfx\")\n  const _component_OperationForm = _resolveComponent(\"OperationForm\")\n  const _component_FilterCmpt = _resolveComponent(\"FilterCmpt\")\n  const _component_NavMenu = _resolveComponent(\"NavMenu\")\n\n  return (_openBlock(), _createBlock(\"div\", {\n    class: this.$store.state.css\n  }, [\n    _createVNode(\"div\", _hoisted_1, [\n      _createVNode(\"div\", _hoisted_2, [\n        _createVNode(_component_AccountPageHeader, {\n          accountId: _ctx.account.id,\n          totalAccount: this.totalAccount,\n          existingPendingOperation: _ctx.pendingOperation(),\n          realAmountOnAccount: this.realAmount\n        }, null, 8, [\"accountId\", \"totalAccount\", \"existingPendingOperation\", \"realAmountOnAccount\"])\n      ]),\n      _createVNode(\"div\", _hoisted_3, [\n        _createVNode(_component_AccountPageHeader, {\n          accountId: _ctx.account.id,\n          totalAccount: this.totalAccount,\n          existingPendingOperation: _ctx.pendingOperation(),\n          realAmountOnAccount: this.realAmount\n        }, null, 8, [\"accountId\", \"totalAccount\", \"existingPendingOperation\", \"realAmountOnAccount\"])\n      ]),\n      _createVNode(\"div\", _hoisted_4, [\n        _createVNode(\"div\", _hoisted_5, [\n          (_ctx.manualBloc)\n            ? (_openBlock(), _createBlock(\"button\", {\n                key: 0,\n                onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.switchAddOperation('manual'))),\n                class: \"tabLeft active\"\n              }, _toDisplayString(_ctx.$t(\"ADD_MANUALLY\")), 1))\n            : (_openBlock(), _createBlock(\"button\", {\n                key: 1,\n                onClick: _cache[2] || (_cache[2] = ($event: any) => (_ctx.switchAddOperation('manual'))),\n                class: \"tabLeft\"\n              }, _toDisplayString(_ctx.$t(\"ADD_MANUALLY\")), 1)),\n          (_ctx.importBloc)\n            ? (_openBlock(), _createBlock(\"button\", {\n                key: 2,\n                onClick: _cache[3] || (_cache[3] = ($event: any) => (_ctx.switchAddOperation('import'))),\n                class: \"tabRight active\"\n              }, _toDisplayString(_ctx.$t(\"BANK_IMPORT\")), 1))\n            : (_openBlock(), _createBlock(\"button\", {\n                key: 3,\n                onClick: _cache[4] || (_cache[4] = ($event: any) => (_ctx.switchAddOperation('import'))),\n                class: \"tabRight\"\n              }, _toDisplayString(_ctx.$t(\"BANK_IMPORT\")), 1))\n        ]),\n        (_ctx.importBloc)\n          ? (_openBlock(), _createBlock(_component_ImportOfx, {\n              key: 0,\n              accountId: this.accountId,\n              onCloseImport: _ctx.closeImport\n            }, null, 8, [\"accountId\", \"onCloseImport\"]))\n          : _createCommentVNode(\"\", true),\n        (_ctx.manualBloc)\n          ? (_openBlock(), _createBlock(_component_OperationForm, {\n              key: 1,\n              class: \"operationForm container header\",\n              onUpdateOperationList: _ctx.getAccountOperation,\n              onCloseForm: _ctx.closeForm,\n              accountId: this.accountId\n            }, null, 8, [\"onUpdateOperationList\", \"onCloseForm\", \"accountId\"]))\n          : _createCommentVNode(\"\", true),\n        _createVNode(\"div\", {\n          onClick: _cache[5] || (_cache[5] = \n//@ts-ignore\n(...args) => (_ctx.onClickFilterButton && _ctx.onClickFilterButton(...args))),\n          class: \"actionLabelIcon\"\n        }, [\n          _hoisted_6,\n          _createVNode(\"div\", _hoisted_7, _toDisplayString(_ctx.$t(\"FILTER\")), 1)\n        ]),\n        (_ctx.filterBloc)\n          ? (_openBlock(), _createBlock(_component_FilterCmpt, {\n              key: 2,\n              onCloseFilter: _ctx.closeFilter,\n              onFilteringCategory: _ctx.filter\n            }, null, 8, [\"onCloseFilter\", \"onFilteringCategory\"]))\n          : _createCommentVNode(\"\", true),\n        (_openBlock(true), _createBlock(_Fragment, null, _renderList(this.operations, (operation) => {\n          return (_openBlock(), _createBlock(_Fragment, { key: operation }, [\n            (operation.editing)\n              ? (_openBlock(), _createBlock(_component_OperationForm, {\n                  key: 0,\n                  class: \"operationForm inlineOperationForm container inline\",\n                  onUpdateOperationList: _ctx.getAccountOperation,\n                  onCloseUpdate: _ctx.closeUpdate,\n                  accountId: this.accountId,\n                  operation: operation\n                }, null, 8, [\"onUpdateOperationList\", \"onCloseUpdate\", \"accountId\", \"operation\"]))\n              : (_openBlock(), _createBlock(\"span\", _hoisted_8, [\n                  (operation.daughters.length == 0)\n                    ? (_openBlock(), _createBlock(\"div\", _hoisted_9, [\n                        _createVNode(\"div\", {\n                          onClick: ($event: any) => (_ctx.setAsEditing(operation)),\n                          title: _ctx.$t('EDIT'),\n                          class: \"row col-9\"\n                        }, [\n                          _createVNode(\"div\", _hoisted_10, [\n                            _createVNode(\"div\", null, _toDisplayString(_ctx.$d(this.getDayAsDate(operation.day), \"day\")), 1)\n                          ]),\n                          _hoisted_11,\n                          _createVNode(\"div\", {\n                            class: [\"lineStart category col-6\", _ctx.getClassDependingCategory(operation)]\n                          }, _toDisplayString(this.getCategoryById(operation.categoryId)?.name ?? _ctx.$t(\"UNKNOWN_CATEGORY\")), 3),\n                          _createVNode(\"div\", {\n                            class: [\"amount col-5 offset-1 col-sm-3 offset-sm-3\", this.getClassDependingOnAmount(operation)]\n                          }, _toDisplayString(_ctx.addSpacesInThousand(this.getEurosAmount(operation.amount))) + \" € \", 3)\n                        ], 8, [\"onClick\", \"title\"]),\n                        (_ctx.filteringCategoryId === null)\n                          ? (_openBlock(), _createBlock(\"div\", {\n                              key: 0,\n                              onClick: ($event: any) => (_ctx.setAsEditing(operation)),\n                              title: _ctx.$t('EDIT'),\n                              class: \"action col-1\"\n                            }, [\n                              _hoisted_12\n                            ], 8, [\"onClick\", \"title\"]))\n                          : _createCommentVNode(\"\", true),\n                        (_ctx.filteringCategoryId === null)\n                          ? (_openBlock(), _createBlock(\"div\", {\n                              key: 1,\n                              onClick: ($event: any) => (_ctx.deleteOperation(operation)),\n                              title: _ctx.$t('DELETE'),\n                              class: \"action col-1\"\n                            }, [\n                              _hoisted_13\n                            ], 8, [\"onClick\", \"title\"]))\n                          : _createCommentVNode(\"\", true),\n                        (operation.pending)\n                          ? (_openBlock(), _createBlock(\"div\", {\n                              key: 2,\n                              onClick: ($event: any) => (_ctx.debited(operation)),\n                              title: _ctx.$t('DEBITED'),\n                              class: \"pending col-1\"\n                            }, [\n                              _hoisted_14\n                            ], 8, [\"onClick\", \"title\"]))\n                          : _createCommentVNode(\"\", true),\n                        _createVNode(\"div\", {\n                          onClick: ($event: any) => (_ctx.setAsEditing(operation)),\n                          title: _ctx.$t('EDIT'),\n                          class: \"lineStart memo col-12\"\n                        }, _toDisplayString(operation.memo), 9, [\"onClick\", \"title\"])\n                      ]))\n                    : (_openBlock(), _createBlock(\"div\", _hoisted_15, [\n                        _createVNode(\"div\", {\n                          onClick: ($event: any) => (_ctx.setAsEditing(operation)),\n                          title: _ctx.$t('EDIT'),\n                          class: \"row col-9\"\n                        }, [\n                          _createVNode(\"div\", _hoisted_16, [\n                            _createVNode(\"div\", null, _toDisplayString(_ctx.$d(this.getDayAsDate(operation.day), \"day\")), 1)\n                          ]),\n                          _createVNode(\"div\", {\n                            class: [\"amount col-5 offset-1 col-sm-3 offset-sm-3\", this.getClassDependingOnAmount(operation)]\n                          }, _toDisplayString(_ctx.addSpacesInThousand(this.getEurosAmount(operation.amount))) + \" € \", 3),\n                          _createVNode(\"div\", _hoisted_17, [\n                            _createVNode(\"div\", null, _toDisplayString(operation.memo), 1)\n                          ])\n                        ], 8, [\"onClick\", \"title\"]),\n                        _createVNode(\"div\", {\n                          onClick: ($event: any) => (_ctx.setAsEditing(operation)),\n                          title: _ctx.$t('EDIT'),\n                          class: \"action col-1\"\n                        }, [\n                          _hoisted_18\n                        ], 8, [\"onClick\", \"title\"]),\n                        _createVNode(\"div\", {\n                          onClick: ($event: any) => (_ctx.deleteOperation(operation)),\n                          title: _ctx.$t('DELETE'),\n                          class: \"action col-1\"\n                        }, [\n                          _hoisted_19\n                        ], 8, [\"onClick\", \"title\"]),\n                        (operation.pending)\n                          ? (_openBlock(), _createBlock(\"div\", {\n                              key: 0,\n                              onClick: ($event: any) => (_ctx.debited(operation)),\n                              title: _ctx.$t('DEBITED'),\n                              class: \"pending col-1\"\n                            }, [\n                              _hoisted_20\n                            ], 8, [\"onClick\", \"title\"]))\n                          : _createCommentVNode(\"\", true),\n                        (_openBlock(true), _createBlock(_Fragment, null, _renderList(operation.daughters, (daughter) => {\n                          return (_openBlock(), _createBlock(\"div\", {\n                            key: daughter,\n                            class: \"daughter row col-12\"\n                          }, [\n                            _hoisted_21,\n                            _createVNode(\"div\", {\n                              class: [\"lineStart category col-5 col-sm-7 col-md-5c ol-lg-4\", _ctx.getClassDependingCategoryDaughter(daughter.categoryId)]\n                            }, _toDisplayString(this.getCategoryById(daughter.categoryId)?.name ?? _ctx.$t(\"UNKNOWN_CATEGORY\")), 3),\n                            _createVNode(\"div\", {\n                              class: [\"amount col-4 col-lg-2\", this.getClassDependingOnAmount(operation)]\n                            }, _toDisplayString(_ctx.addSpacesInThousand(this.getEurosAmount(daughter.amount))) + \" € \", 3),\n                            _createVNode(\"div\", _hoisted_22, _toDisplayString(daughter.memo), 1)\n                          ]))\n                        }), 128))\n                      ]))\n                ]))\n          ], 64))\n        }), 128))\n      ]),\n      _createVNode(\"div\", _hoisted_23, [\n        _createVNode(_component_NavMenu)\n      ]),\n      _createVNode(\"div\", _hoisted_24, [\n        _createVNode(_component_NavMenu)\n      ])\n    ])\n  ], 2))\n}","import { Account, Operation } from '@/model/model'\nimport { operationApi } from '@/services/api/apis'\nimport StoreHandler from '@/store/StoreHandler'\nimport { StoreState } from '@/store/index'\nimport { Store } from 'vuex'\n\nexport default class OperationService {\n  public static async getOperations (account: Account, categoryId: string | null): Promise<Operation[]> {\n    let data: Operation[] = []\n    if (account.id) {\n      let response\n      if (categoryId) {\n        response = await operationApi.findOperationsByAccount(account.id, categoryId)\n      } else {\n        response = await operationApi.findOperationsByAccount(account.id, undefined)\n      }\n      data = response.data\n    }\n    return data\n  }\n\n  public static async addOperation (store: Store<StoreState>, accountId: string, day?: number, categoryId?: string, amount?: number, memo?: string, isPending?: boolean, motheroperationId?: string): Promise<Operation> {\n    const response = await operationApi.addOperation(accountId, day, categoryId, amount, memo, isPending, motheroperationId)\n    StoreHandler.updateAccounts(store)\n    return response.data\n  }\n\n  public static async deleteOperation (store: Store<StoreState>, operation: Operation) {\n    await operationApi.deleteOperation(operation.id)\n    StoreHandler.updateAccounts(store)\n  }\n\n  public static async updateOperation (store: Store<StoreState>, operationId: string, accountId: string, day?: number, categoryId?: string, amount?: number, memo?: string, isPending?: boolean, motheroperationId?: string): Promise<Operation> {\n    const response = await operationApi.updateOperation(operationId, accountId, day, categoryId, amount, memo, isPending, motheroperationId)\n    StoreHandler.updateAccounts(store)\n    return response.data\n  }\n\n  public static async importOfxFile (store: Store<StoreState>, accountId: string, ofxFileContent: string): Promise<string> {\n    const response = await operationApi.importOfxFile(accountId, ofxFileContent)\n    StoreHandler.updateAccounts(store)\n    return response.data\n  }\n\n  public static async getMotherOperationsByAccount (account: Account, categoryId: string | null): Promise<Operation[]> {\n    let data: Operation[] = []\n    if (account.id) {\n      let response\n      if (categoryId) {\n        response = await operationApi.findMotherOperationsByAccount(account.id, categoryId)\n      } else {\n        response = await operationApi.findMotherOperationsByAccount(account.id, undefined)\n      }\n      data = response.data\n    }\n    return data\n  }\n\n  public static async getDaughtersFromMother (operation: Operation): Promise<Operation[]> {\n    const response = await operationApi.findDaughterOperationsByMother(operation.id)\n    return response.data\n  }\n\n  public static async getMotherFromDaughter (operation: Operation): Promise<Operation> {\n    const response = await operationApi.findMotherOperationsByDaughter(operation.id)\n    return response.data\n  }\n}\n","import { createVNode as _createVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, resolveComponent as _resolveComponent, vModelCheckbox as _vModelCheckbox, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = { class: \"flexForm form\" }\nconst _hoisted_3 = { class: \"containerCross col-12\" }\nconst _hoisted_4 = { class: \"label col-4 offset-0 col-sm-3 offset-sm-1 col-md-1 offset-md-1\" }\nconst _hoisted_5 = { class: \"col-7 col-sm-6 col-md-3 col-xxl-2\" }\nconst _hoisted_6 = { class: \"label col-4 offset-0 col-sm-3 offset-sm-1 col-md-2 offset-md-1\" }\nconst _hoisted_7 = { class: \"selectAutoComplete form-group col-7 col-sm-6 col-md-3 col-xxl-4\" }\nconst _hoisted_8 = { class: \"label col-4 offset-0 col-sm-3 offset-sm-1 col-md-1 offset-md-1\" }\nconst _hoisted_9 = { class: \"textInput form-group col-7 col-sm-6 col-md-3 col-lg-3 col-xl-3 col-xxl-2\" }\nconst _hoisted_10 = { class: \"label col-4 offset-0 col-sm-3 offset-sm-1 col-md-2 offset-md-1\" }\nconst _hoisted_11 = { class: \"amountElement col-7 col-sm-6 col-md-3 col-xxl-4\" }\nconst _hoisted_12 = { class: \"amountInput input-group flex-nowrap\" }\nconst _hoisted_13 = { class: \"customSwitch\" }\nconst _hoisted_14 = /*#__PURE__*/_createVNode(\"span\", {\n  class: \"switch-label\",\n  \"data-on\": \"+\",\n  \"data-off\": \"-\"\n}, null, -1)\nconst _hoisted_15 = /*#__PURE__*/_createVNode(\"span\", { class: \"switch-handle\" }, null, -1)\nconst _hoisted_16 = { class: \"label col-4 offset-0 col-sm-3 offset-sm-1 col-md-1 offset-md-1\" }\nconst _hoisted_17 = { class: \"col-8 col-sm-6 col-md-6 inline\" }\nconst _hoisted_18 = { class: \"customSwitch\" }\nconst _hoisted_19 = /*#__PURE__*/_createVNode(\"span\", { class: \"switch-label-pending\" }, null, -1)\nconst _hoisted_20 = /*#__PURE__*/_createVNode(\"span\", { class: \"switch-handle-pending\" }, null, -1)\nconst _hoisted_21 = {\n  key: 0,\n  class: \"inline textPending\"\n}\nconst _hoisted_22 = /*#__PURE__*/_createVNode(\"div\", { class: \"icon\" }, [\n  /*#__PURE__*/_createVNode(\"button\", { class: \"illustration btn fas fa-hourglass-half\" })\n], -1)\nconst _hoisted_23 = {\n  key: 1,\n  class: \"inline textPending\"\n}\nconst _hoisted_24 = /*#__PURE__*/_createVNode(\"div\", { class: \"icon\" }, [\n  /*#__PURE__*/_createVNode(\"button\", { class: \"illustration btn fas fa-calendar-check\" })\n], -1)\nconst _hoisted_25 = { class: \"col-5 offset-1 col-sm-4 col-md-3 offset-md-0\" }\nconst _hoisted_26 = { class: \"action col-4 offset-1 col-md-2 offset-md-5\" }\nconst _hoisted_27 = { key: 1 }\nconst _hoisted_28 = { class: \"flexForm form\" }\nconst _hoisted_29 = { class: \"containerCross col-12\" }\nconst _hoisted_30 = { class: \"label col-4 offset-0 col-sm-3 offset-sm-1 col-md-1\" }\nconst _hoisted_31 = { class: \"col-7 col-sm-6 col-md-3 col-xxl-2\" }\nconst _hoisted_32 = { class: \"label col-4 offset-0 col-sm-3 offset-sm-1 col-md-2\" }\nconst _hoisted_33 = { class: \"sumAmountElement col-4 col-sm-3 col-md-2\" }\nconst _hoisted_34 = /*#__PURE__*/_createVNode(\"div\", { class: \"col-4 col-sm-5 col-md-2\" }, null, -1)\nconst _hoisted_35 = { class: \"label col-4 offset-0 col-sm-3 offset-sm-1 col-md-1\" }\nconst _hoisted_36 = { class: \"textInput form-group col-7 col-sm-6 col-md-3 col-xxl-2\" }\nconst _hoisted_37 = { class: \"label col-4 offset-0 col-sm-3 offset-sm-1 col-md-2 offset-md-1\" }\nconst _hoisted_38 = { class: \"col-7 col-sm-6 col-md-3 col-xxl-4 inline\" }\nconst _hoisted_39 = { class: \"customSwitch\" }\nconst _hoisted_40 = /*#__PURE__*/_createVNode(\"span\", { class: \"switch-label-pending\" }, null, -1)\nconst _hoisted_41 = /*#__PURE__*/_createVNode(\"span\", { class: \"switch-handle-pending\" }, null, -1)\nconst _hoisted_42 = {\n  key: 0,\n  class: \"inline textPending\"\n}\nconst _hoisted_43 = /*#__PURE__*/_createVNode(\"div\", { class: \"icon\" }, [\n  /*#__PURE__*/_createVNode(\"button\", { class: \"illustration btn fas fa-hourglass-half\" })\n], -1)\nconst _hoisted_44 = {\n  key: 1,\n  class: \"inline textPending\"\n}\nconst _hoisted_45 = /*#__PURE__*/_createVNode(\"div\", { class: \"icon\" }, [\n  /*#__PURE__*/_createVNode(\"button\", { class: \"illustration btn fas fa-calendar-check\" })\n], -1)\nconst _hoisted_46 = { class: \"containerCross col-12 col-sm-11 col-md-12\" }\nconst _hoisted_47 = { class: \"label col-4 offset-0 col-sm-3 offset-sm-1 col-md-2\" }\nconst _hoisted_48 = { class: \"selectAutoComplete form-group col-7 col-sm-6 col-md-3\" }\nconst _hoisted_49 = { class: \"label col-4 offset-0 col-sm-3 offset-sm-1 col-md-2 offset-md-0\" }\nconst _hoisted_50 = { class: \"amountElement col-7 col-sm-6 col-md-3\" }\nconst _hoisted_51 = { class: \"amountInput input-group flex-nowrap\" }\nconst _hoisted_52 = { class: \"customSwitch\" }\nconst _hoisted_53 = /*#__PURE__*/_createVNode(\"span\", {\n  class: \"switch-label\",\n  \"data-on\": \"+\",\n  \"data-off\": \"-\"\n}, null, -1)\nconst _hoisted_54 = /*#__PURE__*/_createVNode(\"span\", { class: \"switch-handle\" }, null, -1)\nconst _hoisted_55 = { class: \"label col-4 offset-0 col-sm-3 offset-sm-1 col-md-2\" }\nconst _hoisted_56 = { class: \"textInput form-group col-7 col-sm-6 col-md-3\" }\nconst _hoisted_57 = { class: \"col-4 offset-1 col-md-3 offset-md-2\" }\nconst _hoisted_58 = { class: \"col-4 offset-2 col-md-3 offset-md-2\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Multiselect = _resolveComponent(\"Multiselect\")\n  const _component_btn = _resolveComponent(\"btn\")\n\n  return (this.dataOperation.operationsData.length == 1)\n    ? (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n        _createVNode(\"div\", _hoisted_2, [\n          _createVNode(\"div\", _hoisted_3, [\n            _createVNode(\"span\", {\n              class: \"cross fas fa-times-circle\",\n              onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.closeForm()))\n            })\n          ]),\n          _createVNode(\"div\", _hoisted_4, _toDisplayString(_ctx.$t(\"DATE\")), 1),\n          _createVNode(\"div\", _hoisted_5, [\n            _withDirectives(_createVNode(\"input\", {\n              id: \"newOperationDate\",\n              type: \"date\",\n              class: \"form-control\",\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => (_ctx.dataOperation.date = $event))\n            }, null, 512), [\n              [_vModelText, _ctx.dataOperation.date]\n            ])\n          ]),\n          _createVNode(\"div\", _hoisted_6, _toDisplayString(_ctx.$t(\"ENVELOPE\")), 1),\n          _createVNode(\"div\", _hoisted_7, [\n            _createVNode(_component_Multiselect, {\n              modelValue: _ctx.dataOperation.operationsData[0].categoryId,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => (_ctx.dataOperation.operationsData[0].categoryId = $event)),\n              groups: true,\n              searchable: true,\n              options: _ctx.categories,\n              noResultsText: _ctx.$t('NO_RESULT_FOUND'),\n              placeholder: _ctx.$t('SELECT_CATEGORY')\n            }, null, 8, [\"modelValue\", \"options\", \"noResultsText\", \"placeholder\"])\n          ]),\n          _createVNode(\"div\", _hoisted_8, _toDisplayString(_ctx.$t(\"MEMO\")), 1),\n          _createVNode(\"div\", _hoisted_9, [\n            _withDirectives(_createVNode(\"input\", {\n              id: \"newOperationMemo\",\n              class: \"form-control\",\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => (_ctx.dataOperation.memo = $event))\n            }, null, 512), [\n              [_vModelText, _ctx.dataOperation.memo]\n            ])\n          ]),\n          _createVNode(\"div\", _hoisted_10, _toDisplayString(_ctx.$t(\"AMOUNT\")), 1),\n          _createVNode(\"div\", _hoisted_11, [\n            _createVNode(\"div\", _hoisted_12, [\n              _createVNode(\"label\", _hoisted_13, [\n                _withDirectives(_createVNode(\"input\", {\n                  class: \"switch-input\",\n                  type: \"checkbox\",\n                  \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => (_ctx.dataOperation.operationsData[0].incoming = $event))\n                }, null, 512), [\n                  [_vModelCheckbox, _ctx.dataOperation.operationsData[0].incoming]\n                ]),\n                _hoisted_14,\n                _hoisted_15\n              ]),\n              _withDirectives(_createVNode(\"input\", {\n                id: \"newOperationAmount\",\n                class: \"form-control\",\n                \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => (_ctx.dataOperation.operationsData[0].amountString = $event))\n              }, null, 512), [\n                [_vModelText, _ctx.dataOperation.operationsData[0].amountString]\n              ])\n            ])\n          ]),\n          _createVNode(\"div\", _hoisted_16, _toDisplayString(_ctx.$t(\"STATUS\")), 1),\n          _createVNode(\"div\", _hoisted_17, [\n            _createVNode(\"label\", _hoisted_18, [\n              _withDirectives(_createVNode(\"input\", {\n                class: \"switch-input\",\n                type: \"checkbox\",\n                onClick: _cache[7] || (_cache[7] = \n//@ts-ignore\n(...args) => (_ctx.pending && _ctx.pending(...args))),\n                \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => (_ctx.dataOperation.isPending = $event))\n              }, null, 512), [\n                [_vModelCheckbox, _ctx.dataOperation.isPending]\n              ]),\n              _hoisted_19,\n              _hoisted_20\n            ]),\n            (_ctx.isPending)\n              ? (_openBlock(), _createBlock(\"div\", _hoisted_21, [\n                  _hoisted_22,\n                  _createVNode(\"div\", null, _toDisplayString(_ctx.$t(\"PENDING\")), 1)\n                ]))\n              : (_openBlock(), _createBlock(\"div\", _hoisted_23, [\n                  _hoisted_24,\n                  _createVNode(\"div\", null, _toDisplayString(_ctx.$t(\"DEBITED\")), 1)\n                ]))\n          ]),\n          _createVNode(\"div\", _hoisted_25, [\n            _createVNode(_component_btn, {\n              class: \"actionButton\",\n              onClick: _ctx.addCategory\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.$t('ADD_NEW_CATEGORY')), 1)\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _createVNode(\"div\", _hoisted_26, [\n            (this.operation)\n              ? (_openBlock(), _createBlock(_component_btn, {\n                  key: 0,\n                  class: \"actionButton\",\n                  onClick: _ctx.updateOperation,\n                  title: _ctx.$t('UPDATE')\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(_ctx.$t('SUBMIT')), 1)\n                  ]),\n                  _: 1\n                }, 8, [\"onClick\", \"title\"]))\n              : (_openBlock(), _createBlock(_component_btn, {\n                  key: 1,\n                  class: \"actionButton\",\n                  onClick: _cache[9] || (_cache[9] = ($event: any) => {_ctx.addOperation(); _ctx.rebootAddOperationForm();}),\n                  title: _ctx.$t('ADD')\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(_ctx.$t('SUBMIT')), 1)\n                  ]),\n                  _: 1\n                }, 8, [\"title\"]))\n          ])\n        ])\n      ]))\n    : (_openBlock(), _createBlock(\"div\", _hoisted_27, [\n        _createVNode(\"div\", _hoisted_28, [\n          _createVNode(\"div\", _hoisted_29, [\n            _createVNode(\"span\", {\n              class: \"cross fas fa-times-circle\",\n              onClick: _cache[10] || (_cache[10] = ($event: any) => (_ctx.closeForm()))\n            })\n          ]),\n          _createVNode(\"div\", _hoisted_30, _toDisplayString(_ctx.$t(\"DATE\")), 1),\n          _createVNode(\"div\", _hoisted_31, [\n            _withDirectives(_createVNode(\"input\", {\n              id: \"newOperationDate\",\n              type: \"date\",\n              class: \"form-control\",\n              \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event: any) => (_ctx.dataOperation.date = $event))\n            }, null, 512), [\n              [_vModelText, _ctx.dataOperation.date]\n            ])\n          ]),\n          _createVNode(\"div\", _hoisted_32, _toDisplayString(_ctx.$t(\"TOTAL_AMOUNT\")), 1),\n          _createVNode(\"div\", _hoisted_33, _toDisplayString(_ctx.addSpacesInThousand(_ctx.totalAmount)) + \" €\", 1),\n          _hoisted_34,\n          _createVNode(\"div\", _hoisted_35, _toDisplayString(_ctx.$t(\"MEMO\")), 1),\n          _createVNode(\"div\", _hoisted_36, [\n            _withDirectives(_createVNode(\"input\", {\n              id: \"newOperationMemo\",\n              class: \"form-control\",\n              \"onUpdate:modelValue\": _cache[12] || (_cache[12] = ($event: any) => (_ctx.dataOperation.memo = $event))\n            }, null, 512), [\n              [_vModelText, _ctx.dataOperation.memo]\n            ])\n          ]),\n          _createVNode(\"div\", _hoisted_37, _toDisplayString(_ctx.$t(\"STATUS\")), 1),\n          _createVNode(\"div\", _hoisted_38, [\n            _createVNode(\"label\", _hoisted_39, [\n              _withDirectives(_createVNode(\"input\", {\n                class: \"switch-input\",\n                type: \"checkbox\",\n                onClick: _cache[13] || (_cache[13] = \n//@ts-ignore\n(...args) => (_ctx.pending && _ctx.pending(...args))),\n                \"onUpdate:modelValue\": _cache[14] || (_cache[14] = ($event: any) => (_ctx.dataOperation.isPending = $event))\n              }, null, 512), [\n                [_vModelCheckbox, _ctx.dataOperation.isPending]\n              ]),\n              _hoisted_40,\n              _hoisted_41\n            ]),\n            (_ctx.isPending)\n              ? (_openBlock(), _createBlock(\"div\", _hoisted_42, [\n                  _hoisted_43,\n                  _createVNode(\"div\", null, _toDisplayString(_ctx.$t(\"PENDING\")), 1)\n                ]))\n              : (_openBlock(), _createBlock(\"div\", _hoisted_44, [\n                  _hoisted_45,\n                  _createVNode(\"div\", null, _toDisplayString(_ctx.$t(\"DEBITED\")), 1)\n                ]))\n          ]),\n          (_openBlock(true), _createBlock(_Fragment, null, _renderList(this.dataOperation.operationsData, (daughterOperation) => {\n            return (_openBlock(), _createBlock(\"div\", {\n              key: daughterOperation,\n              class: \"flexForm form col-12\"\n            }, [\n              _createVNode(\"div\", _hoisted_46, [\n                _createVNode(\"span\", {\n                  class: \"cross fas fa-trash\",\n                  onClick: ($event: any) => (_ctx.removeCategory(_ctx.dataOperation.operationsData.indexOf(daughterOperation)))\n                }, null, 8, [\"onClick\"])\n              ]),\n              _createVNode(\"div\", _hoisted_47, _toDisplayString(_ctx.$t(\"ENVELOPE\")), 1),\n              _createVNode(\"div\", _hoisted_48, [\n                _createVNode(_component_Multiselect, {\n                  modelValue: _ctx.dataOperation.operationsData[_ctx.dataOperation.operationsData.indexOf(daughterOperation)].categoryId,\n                  \"onUpdate:modelValue\": ($event: any) => (_ctx.dataOperation.operationsData[_ctx.dataOperation.operationsData.indexOf(daughterOperation)].categoryId = $event),\n                  groups: true,\n                  searchable: true,\n                  options: _ctx.categories,\n                  noResultsText: _ctx.$t('NO_RESULT_FOUND'),\n                  placeholder: _ctx.$t('SELECT_CATEGORY')\n                }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"options\", \"noResultsText\", \"placeholder\"])\n              ]),\n              _createVNode(\"div\", _hoisted_49, _toDisplayString(_ctx.$t(\"AMOUNT\")), 1),\n              _createVNode(\"div\", _hoisted_50, [\n                _createVNode(\"div\", _hoisted_51, [\n                  _createVNode(\"label\", _hoisted_52, [\n                    _withDirectives(_createVNode(\"input\", {\n                      class: \"switch-input\",\n                      type: \"checkbox\",\n                      \"onUpdate:modelValue\": ($event: any) => (_ctx.dataOperation.operationsData[_ctx.dataOperation.operationsData.indexOf(daughterOperation)].incoming = $event)\n                    }, null, 8, [\"onUpdate:modelValue\"]), [\n                      [_vModelCheckbox, _ctx.dataOperation.operationsData[_ctx.dataOperation.operationsData.indexOf(daughterOperation)].incoming]\n                    ]),\n                    _hoisted_53,\n                    _hoisted_54\n                  ]),\n                  _withDirectives(_createVNode(\"input\", {\n                    id: \"newOperationAmount\",\n                    class: \"form-control\",\n                    \"onUpdate:modelValue\": ($event: any) => (_ctx.dataOperation.operationsData[_ctx.dataOperation.operationsData.indexOf(daughterOperation)].amountString = $event)\n                  }, null, 8, [\"onUpdate:modelValue\"]), [\n                    [_vModelText, _ctx.dataOperation.operationsData[_ctx.dataOperation.operationsData.indexOf(daughterOperation)].amountString]\n                  ])\n                ])\n              ]),\n              _createVNode(\"div\", _hoisted_55, _toDisplayString(_ctx.$t(\"MEMO\")), 1),\n              _createVNode(\"div\", _hoisted_56, [\n                _withDirectives(_createVNode(\"input\", {\n                  id: \"newOperationMemo\",\n                  class: \"form-control\",\n                  \"onUpdate:modelValue\": ($event: any) => (_ctx.dataOperation.operationsData[_ctx.dataOperation.operationsData.indexOf(daughterOperation)].memo = $event)\n                }, null, 8, [\"onUpdate:modelValue\"]), [\n                  [_vModelText, _ctx.dataOperation.operationsData[_ctx.dataOperation.operationsData.indexOf(daughterOperation)].memo]\n                ])\n              ])\n            ]))\n          }), 128)),\n          _createVNode(\"div\", _hoisted_57, [\n            (this.operation)\n              ? (_openBlock(), _createBlock(_component_btn, {\n                  key: 0,\n                  class: \"actionButton\",\n                  onClick: _ctx.updateOperationMultipleCategories,\n                  title: _ctx.$t('UPDATE')\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(_ctx.$t('SUBMIT')), 1)\n                  ]),\n                  _: 1\n                }, 8, [\"onClick\", \"title\"]))\n              : (_openBlock(), _createBlock(_component_btn, {\n                  key: 1,\n                  class: \"actionButton\",\n                  onClick: _cache[15] || (_cache[15] = ($event: any) => (_ctx.addOperationMultipleCategories())),\n                  title: _ctx.$t('ADD')\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(_ctx.$t('SUBMIT')), 1)\n                  ]),\n                  _: 1\n                }, 8, [\"title\"]))\n          ]),\n          _createVNode(\"div\", _hoisted_58, [\n            _createVNode(_component_btn, {\n              class: \"actionButton\",\n              onClick: _ctx.addCategory\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.$t('ADD_NEW_CATEGORY')), 1)\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ])\n        ])\n      ]))\n}","\nimport { defineComponent } from 'vue'\nimport OperationService from '@/services/OperationService'\nimport { Category, MasterCategory, Operation, Account, incomeCategoryId, transfertCategoryId, GroupSelectOption, SelectOption } from '@/model/model'\nimport Time from '@/utils/Time'\nimport StoreHandler from '@/store/StoreHandler'\nimport Utils from '@/utils/Utils'\nimport Calcul from '@/utils/Calcul'\nimport Multiselect from '@vueform/multiselect'\n\ninterface OperationFormData {\n  dataOperation: {\n    date: string;\n    isPending: boolean;\n    memo: string;\n    operationsData: {\n      incoming: boolean;\n      amountString: string;\n      categoryId: string;\n      memo: string;\n    }[];\n  };\n}\n\ninterface MotherOperation extends Operation {\n  daughters: Operation[];\n}\n\nexport default defineComponent({\n  name: 'OperationForm',\n  components: {\n    Multiselect\n  },\n  data (): OperationFormData {\n    return {\n      dataOperation: {\n        date: this.operation ? Time.getDateStringFromDay(this.operation.day) : Time.getCurrentDateString(),\n        isPending: this.operation?.pending || false,\n        memo: this.operation?.memo || '',\n        operationsData: [{\n          incoming: this.operation?.amount ? this.operation.amount > 0 : false,\n          amountString: Utils.getEurosAmount(Math.abs(this.operation?.amount || 0)).toString(),\n          categoryId: this.operation?.categoryId || '',\n          memo: this.operation?.memo || ''\n        }]\n      }\n    }\n  },\n  created: function () {\n    if (this.operation && this.operation.daughters.length > 0) {\n      this.operation.daughters.forEach(daughter => {\n        const newOperationsData = {\n          incoming: daughter.amount ? daughter.amount > 0 : false,\n          amountString: Utils.getEurosAmount(Math.abs(daughter.amount)).toString(),\n          categoryId: daughter.categoryId,\n          memo: daughter.memo\n        }\n        if (this.operation) {\n          this.dataOperation.operationsData[this.operation.daughters.indexOf(daughter)] = newOperationsData\n        }\n      })\n    }\n  },\n  props: {\n    accountId: {\n      type: String,\n      required: true\n    },\n    operation: {\n      type: Object as () => MotherOperation\n    }\n  },\n  computed: {\n    incomeCategoryId (): string {\n      return incomeCategoryId\n    },\n    transfertCategoryId (): string {\n      return transfertCategoryId\n    },\n    categories (): GroupSelectOption[] {\n      const optionsList = [\n        {\n          label: this.$t('DEFAULT'),\n          options: [\n            { value: incomeCategoryId, label: this.$t('I18N_INCOME') }\n          ]\n        }\n      ]\n      const allAccounts = this.$store.state.accounts\n      optionsList.push(this.createOptionTransfer(allAccounts))\n      for (const masterCategory of this.$store.state.masterCategories) {\n        const categories = this.getCategoriesByMasterCategory(masterCategory)\n        if (categories.length > 0) {\n          optionsList.push(this.createOptionGroup(masterCategory, categories))\n        }\n      }\n      return optionsList\n    },\n    account (): Account | null {\n      return this.getAccountById(this.accountId)\n    },\n    totalAmount (): number {\n      let sum = 0\n      this.dataOperation.operationsData.forEach(daughterOperation => {\n        if (daughterOperation.incoming) {\n          sum += this.entireCalcul(daughterOperation.amountString)\n        } else {\n          sum -= this.entireCalcul(daughterOperation.amountString)\n        }\n      })\n      return sum\n    }\n  },\n  emits: ['updateOperationList', 'closeForm', 'closeUpdate'],\n  methods: {\n    updateOperation () {\n      if (this.operation) {\n        OperationService.updateOperation(this.$store,\n          this.operation.id,\n          this.accountId,\n          Time.getDayFromDateString(this.dataOperation.date),\n          this.dataOperation.operationsData[0].categoryId,\n          this.signedCentsAmount(this.dataOperation.operationsData[0].incoming, this.dataOperation.operationsData[0].amountString),\n          this.dataOperation.memo,\n          this.dataOperation.isPending).then(\n          () => {\n            this.$emit('updateOperationList')\n          }\n        )\n      } else {\n        console.log('warning: tried to update without operation to update')\n      }\n    },\n    addOperation () {\n      const accountForTransfer = this.getAccountById(this.dataOperation.operationsData[0].categoryId)\n      if (this.account && accountForTransfer) {\n        if (this.dataOperation.operationsData[0].incoming) {\n          this.categoryForTransfer(accountForTransfer, this.account)\n        } else {\n          this.categoryForTransfer(this.account, accountForTransfer)\n        }\n      } else {\n        OperationService.addOperation(this.$store,\n          this.accountId,\n          Time.getDayFromDateString(this.dataOperation.date),\n          this.dataOperation.operationsData[0].categoryId,\n          this.signedCentsAmount(this.dataOperation.operationsData[0].incoming,\n            this.dataOperation.operationsData[0].amountString),\n          this.dataOperation.memo,\n          this.dataOperation.isPending)\n      }\n      this.$emit('updateOperationList')\n    },\n    getCategoriesByMasterCategory (masterCategory: MasterCategory): Category[] {\n      return StoreHandler.getCategoriesByMasterCategory(this.$store, masterCategory, false)\n    },\n    rebootAddOperationForm () {\n      this.dataOperation.date = Time.getCurrentDateString()\n      this.dataOperation.isPending = false\n      this.dataOperation.memo = ''\n      this.dataOperation.operationsData = [{\n        incoming: false,\n        amountString: '',\n        categoryId: '',\n        memo: ''\n      }]\n    },\n    createOptionGroup (masterCategory: MasterCategory, categories: Category[]): GroupSelectOption {\n      const group: GroupSelectOption = {\n        label: masterCategory.name,\n        options: []\n      }\n      for (const category of categories) {\n        const option: SelectOption = { value: category.id, label: category.name }\n        group.options.push(option)\n      }\n      return group\n    },\n    pending () {\n      this.dataOperation.isPending = !this.dataOperation.isPending\n    },\n    createOptionTransfer (accounts: Account[]): GroupSelectOption {\n      const group: GroupSelectOption = {\n        label: this.$t('I18N_TRANSFER'),\n        options: []\n      }\n      for (const account of accounts) {\n        if (account.id !== this.accountId) {\n          const option: SelectOption = { value: account.id, label: account.name }\n          group.options.push(option)\n        }\n      }\n      return group\n    },\n    getAccountById (accountId: string): Account | null {\n      return StoreHandler.getAccountById(this.$store, accountId)\n    },\n    categoryForTransfer (debitedAccount: Account, creditedAccount: Account) {\n      const amount = Utils.getCentsAmount(this.entireCalcul(this.dataOperation.operationsData[0].amountString))\n      OperationService.addOperation(this.$store, debitedAccount.id, Time.getDayFromDateString(this.dataOperation.date), transfertCategoryId, amount * -1, this.dataOperation.memo + this.$t('TRANSFER_TO') + creditedAccount.name)\n      OperationService.addOperation(this.$store, creditedAccount.id, Time.getDayFromDateString(this.dataOperation.date), transfertCategoryId, amount, this.dataOperation.memo + this.$t('TRANSFER_FROM') + debitedAccount.name)\n    },\n    entireCalcul (amount: string): number {\n      return Calcul.entireCalcul(amount)\n    },\n    closeForm () {\n      if (this.operation) {\n        this.$emit('closeUpdate', this.operation)\n      }\n      this.$emit('closeForm')\n    },\n    addCategory () {\n      const newOperationData = {\n        incoming: false,\n        amountString: '0',\n        categoryId: '',\n        memo: ''\n      }\n      this.dataOperation.operationsData.push(newOperationData)\n    },\n    removeCategory (index: number) {\n      this.dataOperation.operationsData.splice(index, 1)\n    },\n    async addOperationMultipleCategories () {\n      // mother operation\n      const motherOperation = await OperationService.addOperation(this.$store,\n        this.accountId,\n        Time.getDayFromDateString(this.dataOperation.date),\n        undefined,\n        Utils.getCentsAmount(this.totalAmount),\n        this.dataOperation.memo,\n        this.dataOperation.isPending,\n        undefined\n      )\n      // daughters\n      this.dataOperation.operationsData.forEach(daughterOperation => {\n        let amountCent\n        if (daughterOperation.incoming) {\n          amountCent = Utils.getCentsAmount(this.entireCalcul(daughterOperation.amountString))\n        } else {\n          amountCent = Utils.getCentsAmount(this.entireCalcul(daughterOperation.amountString)) * (-1)\n        }\n        OperationService.addOperation(this.$store,\n          this.accountId,\n          Time.getDayFromDateString(this.dataOperation.date),\n          daughterOperation.categoryId,\n          amountCent,\n          daughterOperation.memo,\n          this.dataOperation.isPending,\n          motherOperation.id\n        )\n      })\n      this.rebootAddOperationForm()\n    },\n    async updateOperationMultipleCategories () {\n      // mother operation\n      if (this.operation) {\n        await OperationService.updateOperation(this.$store,\n          this.operation.id,\n          this.accountId,\n          Time.getDayFromDateString(this.dataOperation.date),\n          undefined,\n          Utils.getCentsAmount(this.totalAmount),\n          this.dataOperation.memo,\n          this.dataOperation.isPending,\n          undefined\n        )\n        // daughters\n        if (this.account) {\n          const daughtersDB = await OperationService.getDaughtersFromMother(this.operation)\n          let difference = daughtersDB.length - this.dataOperation.operationsData.length\n          while (difference !== 0) {\n            if (difference > 0) {\n              const daughterOperations = await OperationService.getDaughtersFromMother(this.operation)\n              OperationService.deleteOperation(this.$store, daughterOperations[-1])\n              difference--\n            } else if (difference < 0) {\n              daughtersDB.push(await OperationService.addOperation(this.$store, this.accountId))\n              difference++\n            } else {\n              difference = 0\n            }\n          }\n          this.dataOperation.operationsData.forEach(daughter => {\n            const index = this.dataOperation.operationsData.indexOf(daughter)\n            let amountCent\n            if (daughter.incoming) {\n              amountCent = Utils.getCentsAmount(this.entireCalcul(daughter.amountString))\n            } else {\n              amountCent = Utils.getCentsAmount(this.entireCalcul(daughter.amountString)) * -1\n            }\n            OperationService.updateOperation(this.$store,\n              daughtersDB[index].id,\n              this.accountId,\n              Time.getDayFromDateString(this.dataOperation.date),\n              daughter.categoryId,\n              amountCent,\n              daughter.memo,\n              this.dataOperation.isPending\n            )\n          })\n        }\n      }\n    },\n    signedCentsAmount (incoming: boolean, amountString: string): number {\n      const amount = this.entireCalcul(amountString)\n      return Utils.getCentsAmount((incoming) ? Math.abs(amount) : Math.abs(amount) * -1)\n    },\n    addSpacesInThousand (amount: number): string {\n      return Utils.addSpacesInThousand(amount)\n    }\n  }\n})\n","import { render } from \"./OperationForm.vue?vue&type=template&id=1333c78e&ts=true\"\nimport script from \"./OperationForm.vue?vue&type=script&lang=ts\"\nexport * from \"./OperationForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { vModelText as _vModelText, createVNode as _createVNode, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = { id: \"accountPageHeader\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"editingNameAccount row\"\n}\nconst _hoisted_3 = { class: \"name col-9 offset-0 col-sm-8 offset-sm-1 col-md-6 offset-md-3 col-lg-4 offset-lg-4 col-xl-4 offset-xl-4 col-xxl-4 offset-xxl-4\" }\nconst _hoisted_4 = { class: \"validation col\" }\nconst _hoisted_5 = {\n  key: 1,\n  class: \"editableNameAccount row\"\n}\nconst _hoisted_6 = {\n  key: 0,\n  class: \"col-10 offset-1\"\n}\nconst _hoisted_7 = { class: \"title\" }\nconst _hoisted_8 = {\n  key: 1,\n  class: \"col-11 offset-0\"\n}\nconst _hoisted_9 = { class: \"displayNameAccount col-12 offset-0 col-sm-8 offset-sm-2 col-xxl-6 offset-xxl-3\" }\nconst _hoisted_10 = /*#__PURE__*/_createVNode(\"button\", { class: \"btn fas fa-pen\" }, null, -1)\nconst _hoisted_11 = {\n  key: 2,\n  class: \"col-1\"\n}\nconst _hoisted_12 = { key: 0 }\nconst _hoisted_13 = { key: 1 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    (this.editingTitle)\n      ? (_openBlock(), _createBlock(\"div\", _hoisted_2, [\n          _createVNode(\"span\", _hoisted_3, [\n            _withDirectives(_createVNode(\"input\", {\n              id: \"accountName\",\n              class: \"form-control\",\n              placeholder: this.currentName,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (_ctx.name = $event))\n            }, null, 8, [\"placeholder\"]), [\n              [_vModelText, _ctx.name]\n            ])\n          ]),\n          _createVNode(\"span\", _hoisted_4, [\n            _createVNode(\"button\", {\n              class: \"illustration btn fas fa-check\",\n              onClick: _cache[2] || (_cache[2] = ($event: any) => (_ctx.updateName()))\n            }),\n            _createVNode(\"button\", {\n              class: \"illustration btn fas fa-times\",\n              onClick: _cache[3] || (_cache[3] = ($event: any) => (this.cancelEditing()))\n            })\n          ])\n        ]))\n      : (_openBlock(), _createBlock(\"div\", _hoisted_5, [\n          (this.displayRealAmount)\n            ? (_openBlock(), _createBlock(\"div\", _hoisted_6, [\n                _createVNode(\"h1\", _hoisted_7, _toDisplayString(_ctx.$t(\"REAL_AMOUNT\")) + \" : \" + _toDisplayString(_ctx.realAmountOnAccount) + \" €\", 1)\n              ]))\n            : (_openBlock(), _createBlock(\"div\", _hoisted_8, [\n                _createVNode(\"span\", {\n                  onClick: _cache[4] || (_cache[4] = ($event: any) => (this.displayTitleEditing())),\n                  class: \"row\"\n                }, [\n                  _createVNode(\"div\", _hoisted_9, [\n                    _createVNode(\"h1\", {\n                      class: [\"title\", this.getClassDependingOnAmount()]\n                    }, [\n                      _createTextVNode(_toDisplayString(this.account.name) + \" : \" + _toDisplayString(_ctx.totalAccount) + \" € \", 1),\n                      _hoisted_10\n                    ], 2)\n                  ])\n                ])\n              ])),\n          (_ctx.existingPendingOperation)\n            ? (_openBlock(), _createBlock(\"div\", _hoisted_11, [\n                (this.displayRealAmount)\n                  ? (_openBlock(), _createBlock(\"div\", _hoisted_12, [\n                      _createVNode(\"button\", {\n                        onClick: _cache[5] || (_cache[5] = \n//@ts-ignore\n(...args) => (_ctx.displayAmount && _ctx.displayAmount(...args))),\n                        class: \"illustration btn fas fa-calendar-check\"\n                      })\n                    ]))\n                  : (_openBlock(), _createBlock(\"div\", _hoisted_13, [\n                      _createVNode(\"button\", {\n                        onClick: _cache[6] || (_cache[6] = \n//@ts-ignore\n(...args) => (_ctx.displayAmount && _ctx.displayAmount(...args))),\n                        class: \"illustration btn fas fa-hourglass-half\"\n                      })\n                    ]))\n              ]))\n            : _createCommentVNode(\"\", true)\n        ]))\n  ]))\n}","\nimport { defineComponent } from 'vue'\nimport AccountService from '@/services/AccountService'\nimport { Account } from '@/model/model'\n\ninterface AccountPageHeaderData {\n    name: string;\n    editingTitle: boolean;\n    displayRealAmount: boolean;\n}\n\nexport default defineComponent({\n  name: 'AccountPageHeader',\n  components: {},\n  watch: {},\n  props: {\n    accountId: {\n      type: String,\n      required: true\n    },\n    totalAccount: {\n      type: Number,\n      required: true\n    },\n    existingPendingOperation: {\n      type: Boolean,\n      required: true\n    },\n    realAmountOnAccount: {\n      type: Number,\n      required: true\n    }\n  },\n  data (): AccountPageHeaderData {\n    return {\n      name: '',\n      editingTitle: false,\n      displayRealAmount: false\n    }\n  },\n  computed: {\n    account (): Account | null {\n      for (const account of this.$store.state.accounts) {\n        if (account.id === this.accountId) {\n          return account\n        }\n      }\n      return null\n    },\n    currentName (): string {\n      return this.account?.name || ''\n    }\n  },\n  emits: [],\n  methods: {\n    updateName () {\n      AccountService.updateAccount(this.$store, this.accountId, this.name)\n      this.editingTitle = false\n    },\n    displayTitleEditing () {\n      this.editingTitle = true\n    },\n    cancelEditing () {\n      this.editingTitle = false\n    },\n    getClassDependingOnAmount (): string {\n      if (this.totalAccount < 0) {\n        return 'negative'\n      } else {\n        return ''\n      }\n    },\n    displayAmount () {\n      this.displayRealAmount = !this.displayRealAmount\n    }\n  }\n})\n","import { render } from \"./AccountPageHeader.vue?vue&type=template&id=d0f28f8c&ts=true\"\nimport script from \"./AccountPageHeader.vue?vue&type=script&lang=ts\"\nexport * from \"./AccountPageHeader.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"container header\" }\nconst _hoisted_2 = { class: \"containerCross col-12\" }\nconst _hoisted_3 = { class: \"importPage\" }\nconst _hoisted_4 = { key: 0 }\nconst _hoisted_5 = { class: \"text\" }\nconst _hoisted_6 = { key: 1 }\nconst _hoisted_7 = { key: 0 }\nconst _hoisted_8 = { class: \"text\" }\nconst _hoisted_9 = { key: 1 }\nconst _hoisted_10 = { class: \"ofxForm\" }\nconst _hoisted_11 = {\n  for: \"importOfxFile\",\n  class: \"actionButton\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(\"div\", _hoisted_2, [\n      _createVNode(\"span\", {\n        class: \"cross fas fa-times-circle\",\n        onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.closeImport && _ctx.closeImport(...args)))\n      })\n    ]),\n    _createVNode(\"div\", _hoisted_3, [\n      (_ctx.fileImported)\n        ? (_openBlock(), _createBlock(\"div\", _hoisted_4, [\n            _createVNode(\"p\", _hoisted_5, _toDisplayString(this.nbOperationImported) + _toDisplayString(_ctx.$t('IMPORTED_OPERATION')), 1)\n          ]))\n        : (_openBlock(), _createBlock(\"div\", _hoisted_6, [\n            (_ctx.fileSelected)\n              ? (_openBlock(), _createBlock(\"div\", _hoisted_7, [\n                  _createVNode(\"p\", _hoisted_8, _toDisplayString(_ctx.$t('FILE_IS_SELECTED')), 1),\n                  _createVNode(\"button\", {\n                    onClick: _cache[2] || (_cache[2] = ($event: any) => (_ctx.importOfxFile())),\n                    class: \"actionButton\"\n                  }, _toDisplayString(_ctx.$t('IMPORT')), 1)\n                ]))\n              : (_openBlock(), _createBlock(\"div\", _hoisted_9, [\n                  _createVNode(\"div\", _hoisted_10, [\n                    _createVNode(\"input\", {\n                      id: \"importOfxFile\",\n                      type: \"file\",\n                      onChange: _cache[3] || (_cache[3] = ($event: any) => (_ctx.onFileChange($event))),\n                      class: \"fileInput\"\n                    }, null, 32),\n                    _createVNode(\"label\", _hoisted_11, _toDisplayString(_ctx.$t('SELECT_FILE')), 1)\n                  ])\n                ]))\n          ]))\n    ])\n  ]))\n}","\nimport { defineComponent } from 'vue'\nimport OperationService from '@/services/OperationService'\n\ninterface ImportOfxData {\n    fileOfx: any;\n    fileImported: boolean;\n    nbOperationImported: string;\n}\n\nexport default defineComponent({\n  name: 'ImportOfx',\n  components: {},\n  props: {\n    accountId: {\n      type: String,\n      required: true\n    }\n  },\n  computed: {\n    fileSelected (): boolean {\n      if (this.fileOfx === '') {\n        return false\n      } else {\n        return true\n      }\n    }\n  },\n  data (): ImportOfxData {\n    return {\n      fileOfx: '',\n      fileImported: false,\n      nbOperationImported: '0'\n    }\n  },\n  emits: ['closeImport'],\n  methods: {\n    onFileChange (event: { target: { files: any[] } }) {\n      const file = event.target.files[0]\n      this.fileOfx = file\n    },\n    async importOfxFile () {\n      const fr = new FileReader()\n      fr.readAsText(this.fileOfx, 'UTF-8')\n      fr.onload = async (evt) => {\n        if (evt.target) {\n          console.log(evt.target.result)\n          if (evt.target.result) {\n            const ofx: string = evt.target.result.toString()\n            this.nbOperationImported = await OperationService.importOfxFile(this.$store, this.accountId, ofx)\n            this.fileImported = true\n          }\n        }\n      }\n      fr.onerror = (evt) => {\n        console.error('Failed to read this file')\n      }\n    },\n    closeImport () {\n      this.$emit('closeImport')\n    }\n  }\n})\n","import { render } from \"./ImportOfx.vue?vue&type=template&id=2e595de7&ts=true\"\nimport script from \"./ImportOfx.vue?vue&type=script&lang=ts\"\nexport * from \"./ImportOfx.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createVNode as _createVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"container header row form\" }\nconst _hoisted_2 = { class: \"containerCross col-12\" }\nconst _hoisted_3 = { class: \"label col-4 offset-0 col-sm-3 offset-sm-1 col-md-1\" }\nconst _hoisted_4 = { class: \"selectAutoComplete col-6 offset-1 col-sm-5 col-md-4\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Multiselect = _resolveComponent(\"Multiselect\")\n\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(\"div\", _hoisted_2, [\n      _createVNode(\"span\", {\n        class: \"cross fas fa-times-circle\",\n        onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.closeFilter && _ctx.closeFilter(...args)))\n      })\n    ]),\n    _createVNode(\"div\", _hoisted_3, _toDisplayString(_ctx.$t(\"CATEGORY\")), 1),\n    _createVNode(\"div\", _hoisted_4, [\n      _createVNode(_component_Multiselect, {\n        modelValue: _ctx.categoryId,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => (_ctx.categoryId = $event)),\n        groups: true,\n        searchable: true,\n        options: _ctx.categories,\n        noResultsText: _ctx.$t('NO_RESULT_FOUND'),\n        placeholder: _ctx.$t('SELECT_CATEGORY')\n      }, null, 8, [\"modelValue\", \"options\", \"noResultsText\", \"placeholder\"])\n    ]),\n    _createVNode(\"button\", {\n      onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.filter && _ctx.filter(...args))),\n      class: \"actionButton col-6 offset-3 col-sm-4 offset-sm-4 col-md-2 offset-md-1\"\n    }, _toDisplayString(_ctx.$t(\"FILTER\")), 1)\n  ]))\n}","\nimport { defineComponent } from 'vue'\nimport { Category, MasterCategory, incomeCategoryId, transfertCategoryId, GroupSelectOption, SelectOption } from '@/model/model'\nimport StoreHandler from '@/store/StoreHandler'\nimport Multiselect from '@vueform/multiselect'\n\ninterface FilterData {\n  categoryId: string;\n}\n\nexport default defineComponent({\n  name: 'FilterCmpt',\n  components: {\n    Multiselect\n  },\n  props: { },\n  computed: {\n    categories (): GroupSelectOption[] {\n      const optionsList = [\n        {\n          label: this.$t('DEFAULT'),\n          options: [\n            { value: incomeCategoryId, label: this.$t('I18N_INCOME') },\n            { value: transfertCategoryId, label: this.$t('I18N_TRASNFERT') }\n          ]\n        }\n      ]\n      for (const masterCategory of this.$store.state.masterCategories) {\n        const categories = this.getCategoriesByMasterCategory(masterCategory)\n        if (categories.length > 0) {\n          optionsList.push(this.createOptionGroup(masterCategory, categories))\n        }\n      }\n      return optionsList\n    }\n  },\n  data (): FilterData {\n    return {\n      categoryId: ''\n    }\n  },\n  emits: ['closeFilter', 'filteringCategory'],\n  methods: {\n    getCategoriesByMasterCategory (masterCategory: MasterCategory): Category[] {\n      return StoreHandler.getCategoriesByMasterCategory(this.$store, masterCategory, false)\n    },\n    createOptionGroup (masterCategory: MasterCategory, categories: Category[]): GroupSelectOption {\n      const group: GroupSelectOption = {\n        label: masterCategory.name,\n        options: []\n      }\n      for (const category of categories) {\n        const option: SelectOption = { value: category.id, label: category.name }\n        group.options.push(option)\n      }\n      return group\n    },\n    closeFilter () {\n      this.$emit('closeFilter')\n    },\n    filter () {\n      this.$emit('filteringCategory', this.categoryId)\n    }\n  }\n})\n","import { render } from \"./FilterCmpt.vue?vue&type=template&id=6d4d1e06&ts=true\"\nimport script from \"./FilterCmpt.vue?vue&type=script&lang=ts\"\nexport * from \"./FilterCmpt.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue'\nimport { redirectToLoginPageIfNotLogged } from '@/router'\nimport { Account, Category, Operation } from '@/model/model'\nimport Time from '@/utils/Time'\nimport StoreHandler from '@/store/StoreHandler'\nimport OperationService from '@/services/OperationService'\nimport OperationForm from '@/components/forms/OperationForm.vue'\nimport Utils from '@/utils/Utils'\nimport NavMenu from '@/components/NavigationMenu.vue'\nimport AccountPageHeader from '@/components/headers/AccountPageHeader.vue'\nimport ImportOfx from '@/components/ImportOfx.vue'\nimport FilterCmpt from '@/components/FilterCmpt.vue'\n\ninterface AccountPageData {\n    operations: EditableOperation[];\n    daughterOperations: Operation[];\n    importBloc: boolean;\n    manualBloc: boolean;\n    filterBloc: boolean;\n    filteringCategoryId: string | null;\n    existingPendingOperation: boolean;\n}\n\ninterface EditableOperation extends Operation {\n  editing: boolean;\n  daughters: Operation[];\n}\n\nexport default defineComponent({\n  name: 'AccountPage',\n  components: {\n    OperationForm,\n    NavMenu,\n    AccountPageHeader,\n    ImportOfx,\n    FilterCmpt\n  },\n  beforeCreate: async function () {\n    redirectToLoginPageIfNotLogged(this.$store)\n  },\n  created: async function () {\n    StoreHandler.initStore(this.$store)\n    this.getAccountOperation()\n  },\n  watch: {\n    account: async function () {\n      await this.getAccountOperation()\n      await this.getDaughterOperations()\n    }\n  },\n  props: {\n    accountId: {\n      type: String,\n      required: true\n    }\n  },\n  data (): AccountPageData {\n    return {\n      operations: [],\n      daughterOperations: [],\n      importBloc: false,\n      manualBloc: false,\n      filterBloc: false,\n      filteringCategoryId: null,\n      existingPendingOperation: false\n    }\n  },\n  computed: {\n    account (): Account | null {\n      for (const account of this.$store.state.accounts) {\n        if (account.id === this.accountId) {\n          return account\n        }\n      }\n      return null\n    },\n    totalAccount (): string {\n      const value = this.account == null ? 0 : this.getEurosAmount(this.account.amount)\n      return this.addSpacesInThousand(value)\n    },\n    realAmount (): string {\n      let value: number = this.account == null ? 0 : this.account.amount\n      this.operations.forEach((operation) => {\n        if (operation.pending === true) {\n          value -= operation.amount\n        }\n      })\n      return this.addSpacesInThousand(value / 100)\n    }\n  },\n  methods: {\n    async getAccountOperation () {\n      if (this.account) {\n        return OperationService.getMotherOperationsByAccount(this.account, this.filteringCategoryId).then(\n          (operations) => {\n            this.operations = this.operationToEditableOperation(operations)\n            this.getDaughterOperations()\n          }\n        )\n      }\n    },\n    async getAccountOperationFilter () {\n      if (this.account) {\n        const filteredOperations = await OperationService.getOperations(this.account, this.filteringCategoryId)\n        filteredOperations.forEach(async operation => {\n          if (this.account) {\n            const mother = await OperationService.getMotherFromDaughter(operation)\n            if (mother) {\n              filteredOperations.splice(filteredOperations.indexOf(operation), 1, mother)\n            }\n          }\n        })\n        this.operations = this.operationToEditableOperation(filteredOperations)\n      }\n    },\n    async getDaughterOperations () {\n      this.operations.forEach(async operation => {\n        if (this.account) {\n          operation.daughters = await OperationService.getDaughtersFromMother(operation)\n        }\n      })\n    },\n    getDayAsDate (dayAsInt: number): Date {\n      return Time.getDateFromDay(dayAsInt)\n    },\n    async deleteOperation (operation: Operation) {\n      if (this.account && !this.filteringCategoryId) {\n        await OperationService.deleteOperation(this.$store, operation)\n        this.getAccountOperation()\n      }\n    },\n    setAsEditing (operation: EditableOperation) {\n      if (!this.filteringCategoryId) {\n        operation.editing = true\n      }\n    },\n    operationToEditableOperation (operations: Operation[]): EditableOperation[] {\n      const editableOperations: EditableOperation[] = []\n      operations.forEach((operation) =>\n        editableOperations.push({\n          id: operation.id,\n          day: operation.day,\n          accountId: operation.accountId,\n          categoryId: operation.categoryId,\n          amount: operation.amount,\n          memo: operation.memo,\n          pending: operation.pending,\n          motherOperationId: operation.motherOperationId,\n          editing: false,\n          daughters: []\n        })\n      )\n      return editableOperations\n    },\n    getCategoryById (categoryId: string): Category | null {\n      return StoreHandler.getCategoryById(this.$store, categoryId)\n    },\n    getEurosAmount (amount: number): number {\n      return Utils.getEurosAmount(amount)\n    },\n    getClassDependingOnAmount (operation: Operation): string {\n      if (operation.amount > 0) {\n        return 'positive'\n      } else {\n        return ''\n      }\n    },\n    addSpacesInThousand (number: number): string {\n      return Utils.addSpacesInThousand(number)\n    },\n    getClassDependingCategory (operation: Operation): string {\n      return (operation.categoryId === null) ? 'negative' : ''\n    },\n    getClassDependingCategoryDaughter (categoryId: string): string {\n      return categoryId === null ? 'negative' : ''\n    },\n    async filter (categoryId: string) {\n      this.filteringCategoryId = categoryId\n      await this.getAccountOperationFilter()\n      await this.getDaughterOperations()\n    },\n    switchAddOperation (type: string) {\n      if (type === 'import') {\n        this.importBloc = !this.importBloc\n        if (this.importBloc === true && this.manualBloc === true) {\n          this.manualBloc = false\n        }\n      } else if (type === 'manual') {\n        this.manualBloc = !this.manualBloc\n        if (this.importBloc === true && this.manualBloc === true) {\n          this.importBloc = false\n        }\n      }\n      this.filterBloc = false\n    },\n    async debited (operation: Operation) {\n      if (operation && this.account) {\n        const daughters = await OperationService.getDaughtersFromMother(operation)\n        if (daughters.length !== 0) {\n          daughters.forEach(daughter => {\n            OperationService.updateOperation(this.$store, daughter.id, this.accountId, undefined, undefined, undefined, undefined, false)\n          })\n          OperationService.updateOperation(this.$store, operation.id, this.accountId, undefined, undefined, undefined, undefined, false)\n        } else {\n          OperationService.updateOperation(this.$store, operation.id, this.accountId, undefined, undefined, undefined, undefined, false)\n        }\n      }\n    },\n    pendingOperation (): boolean {\n      let operationPending = false\n      this.operations.forEach((operation) => {\n        if (operation.pending === true) {\n          operationPending = true\n        }\n      })\n      return operationPending\n    },\n    closeImport () {\n      this.importBloc = false\n    },\n    closeForm () {\n      this.manualBloc = false\n    },\n    async closeFilter () {\n      this.filterBloc = false\n      this.filteringCategoryId = null\n      await this.getAccountOperation()\n      await this.getDaughterOperations()\n    },\n    closeUpdate (operation: EditableOperation) {\n      operation.editing = false\n    },\n    async onClickFilterButton () {\n      this.filterBloc = !this.filterBloc\n      this.manualBloc = false\n      this.importBloc = false\n      if (!this.filterBloc) {\n        this.filteringCategoryId = null\n        await this.getAccountOperation()\n        await this.getDaughterOperations()\n      }\n    }\n  }\n})\n","import { render } from \"./AccountPage.vue?vue&type=template&id=34f89fa2&ts=true\"\nimport script from \"./AccountPage.vue?vue&type=script&lang=ts\"\nexport * from \"./AccountPage.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { toDisplayString as _toDisplayString, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent } from \"vue\"\n\nconst _hoisted_1 = { class: \"subscriptionPage menuLayout row col-md-4 offset-md-4 col-xl-8 offset-xl-2\" }\nconst _hoisted_2 = { class: \"header fixed title\" }\nconst _hoisted_3 = { class: \"title\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"col-12\"\n}\nconst _hoisted_5 = { class: \"placeholder top\" }\nconst _hoisted_6 = { class: \"title\" }\nconst _hoisted_7 = {\n  key: 0,\n  class: \"col-12\"\n}\nconst _hoisted_8 = { key: 0 }\nconst _hoisted_9 = { key: 0 }\nconst _hoisted_10 = { key: 1 }\nconst _hoisted_11 = {\n  key: 0,\n  class: \"content\"\n}\nconst _hoisted_12 = { class: \"essential\" }\nconst _hoisted_13 = { class: \"banner\" }\nconst _hoisted_14 = /*#__PURE__*/_createVNode(\"span\", { class: \"icon icon-paper-plane\" }, null, -1)\nconst _hoisted_15 = { class: \"title\" }\nconst _hoisted_16 = { class: \"integral\" }\nconst _hoisted_17 = { class: \"banner\" }\nconst _hoisted_18 = /*#__PURE__*/_createVNode(\"span\", { class: \"icon icon-plane\" }, null, -1)\nconst _hoisted_19 = { class: \"title\" }\nconst _hoisted_20 = { class: \"solidarity\" }\nconst _hoisted_21 = { class: \"banner\" }\nconst _hoisted_22 = /*#__PURE__*/_createVNode(\"span\", { class: \"icon icon-support\" }, null, -1)\nconst _hoisted_23 = { class: \"title\" }\nconst _hoisted_24 = {\n  key: 1,\n  class: \"content\"\n}\nconst _hoisted_25 = { class: \"businessSide\" }\nconst _hoisted_26 = { class: \"container header\" }\nconst _hoisted_27 = /*#__PURE__*/_createVNode(\"span\", { class: \"icon icon-briefcase\" }, null, -1)\nconst _hoisted_28 = { class: \"title\" }\nconst _hoisted_29 = { class: \"personalSide\" }\nconst _hoisted_30 = { class: \"container header\" }\nconst _hoisted_31 = /*#__PURE__*/_createVNode(\"span\", { class: \"icon icon-home\" }, null, -1)\nconst _hoisted_32 = { class: \"title\" }\nconst _hoisted_33 = { class: \"coaching\" }\nconst _hoisted_34 = { class: \"container header\" }\nconst _hoisted_35 = /*#__PURE__*/_createVNode(\"span\", { class: \"icon icon-compass\" }, null, -1)\nconst _hoisted_36 = { class: \"title\" }\nconst _hoisted_37 = { class: \"placeholder bottom\" }\nconst _hoisted_38 = { class: \"footer fixed\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_NavMenu = _resolveComponent(\"NavMenu\")\n\n  return (_openBlock(), _createBlock(\"div\", {\n    class: this.$store.state.css\n  }, [\n    _createVNode(\"div\", _hoisted_1, [\n      _createVNode(\"div\", _hoisted_2, [\n        _createVNode(\"h1\", _hoisted_3, _toDisplayString(_ctx.$t('SUBSCRIPTION')), 1),\n        (!_ctx.validSubscription)\n          ? (_openBlock(), _createBlock(\"p\", _hoisted_4, _toDisplayString(_ctx.$t('TRIAL_PERIOD_IS_OVER')), 1))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createVNode(\"div\", _hoisted_5, [\n        _createVNode(\"h1\", _hoisted_6, _toDisplayString(_ctx.$t('SUBSCRIPTION')), 1),\n        (!_ctx.validSubscription)\n          ? (_openBlock(), _createBlock(\"p\", _hoisted_7, _toDisplayString(_ctx.$t('TRIAL_PERIOD_IS_OVER')), 1))\n          : _createCommentVNode(\"\", true)\n      ]),\n      (this.managementPage)\n        ? (_openBlock(), _createBlock(\"div\", _hoisted_8, [\n            _createVNode(\"p\", null, _toDisplayString(_ctx.$t('MANAGE_SUBSCRIPTION')) + \" : \", 1),\n            (!_ctx.billingStatus)\n              ? (_openBlock(), _createBlock(\"p\", _hoisted_9, _toDisplayString(_ctx.$t('DEFERMENT_SUBSCRIPTION')), 1))\n              : _createCommentVNode(\"\", true),\n            _createVNode(\"button\", {\n              class: \"actionButton\",\n              onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (this.getInformation && this.getInformation(...args)))\n            }, _toDisplayString(_ctx.$t('MANAGE_SUBSCRIPTION')), 1),\n            _createVNode(\"button\", {\n              class: \"navigationButton\",\n              onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (this.changePage && this.changePage(...args)))\n            }, _toDisplayString(_ctx.$t('SEE_ALL_OFFERS')), 1)\n          ]))\n        : (_openBlock(), _createBlock(\"div\", _hoisted_10, [\n            (_ctx.profile == 'PROFILE_USER')\n              ? (_openBlock(), _createBlock(\"div\", _hoisted_11, [\n                  _createVNode(\"p\", {\n                    class: \"subtitle\",\n                    onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (this.goToContactPage && this.goToContactPage(...args)))\n                  }, _toDisplayString(_ctx.$t('CHOOSE_THE_BEST_FOR_YOU')), 1),\n                  _createVNode(\"p\", {\n                    class: \"subtitle\",\n                    onClick: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (this.goToContactPage && this.goToContactPage(...args)))\n                  }, _toDisplayString(_ctx.$t('ASK_FOR_HELP')), 1),\n                  _createVNode(\"div\", _hoisted_12, [\n                    _createVNode(\"div\", _hoisted_13, [\n                      _hoisted_14,\n                      _createVNode(\"div\", _hoisted_15, _toDisplayString(_ctx.$t('ESSENTIAL')), 1)\n                    ]),\n                    _createVNode(\"p\", null, _toDisplayString(_ctx.$t('TEXT_ESSENTIAL')), 1),\n                    _createVNode(\"button\", {\n                      class: \"actionButton\",\n                      onClick: _cache[5] || (_cache[5] = ($event: any) => (this.goToBillingPortal('MONTHLY_ESSENTIAL')))\n                    }, _toDisplayString(_ctx.$t('PRICE_MONTHLY_ESSENTIAL')), 1),\n                    _createVNode(\"button\", {\n                      class: \"actionButton\",\n                      onClick: _cache[6] || (_cache[6] = ($event: any) => (this.goToBillingPortal('ANNUAL_ESSENTIAL')))\n                    }, _toDisplayString(_ctx.$t('PRICE_ANNUAL_ESSENTIAL')), 1)\n                  ]),\n                  _createVNode(\"div\", _hoisted_16, [\n                    _createVNode(\"div\", _hoisted_17, [\n                      _hoisted_18,\n                      _createVNode(\"div\", _hoisted_19, _toDisplayString(_ctx.$t('INTEGRAL')), 1)\n                    ]),\n                    _createVNode(\"p\", null, _toDisplayString(_ctx.$t('TEXT_INTEGRAL')), 1),\n                    _createVNode(\"button\", {\n                      class: \"actionButton\",\n                      onClick: _cache[7] || (_cache[7] = ($event: any) => (this.goToBillingPortal('MONTHLY_INTEGRAL')))\n                    }, _toDisplayString(_ctx.$t('PRICE_MONTHLY_INTEGRAL')), 1),\n                    _createVNode(\"button\", {\n                      class: \"actionButton\",\n                      onClick: _cache[8] || (_cache[8] = ($event: any) => (this.goToBillingPortal('ANNUAL_INTEGRAL')))\n                    }, _toDisplayString(_ctx.$t('PRICE_ANNUAL_INTEGRAL')), 1)\n                  ]),\n                  _createVNode(\"div\", _hoisted_20, [\n                    _createVNode(\"div\", _hoisted_21, [\n                      _hoisted_22,\n                      _createVNode(\"div\", _hoisted_23, _toDisplayString(_ctx.$t('SOLIDARITY')), 1)\n                    ]),\n                    _createVNode(\"p\", {\n                      onClick: _cache[9] || (_cache[9] = \n//@ts-ignore\n(...args) => (this.goToContactPage && this.goToContactPage(...args)))\n                    }, _toDisplayString(_ctx.$t('TEXT_FOR_USER')) + _toDisplayString(_ctx.$t('PLEASE_CONTACT_US')), 1),\n                    _createVNode(\"button\", {\n                      class: \"actionButton disabled\",\n                      onClick: _cache[10] || (_cache[10] = \n//@ts-ignore\n(...args) => (this.goToContactPage && this.goToContactPage(...args)))\n                    }, _toDisplayString(_ctx.$t('PRICE_MONTHLY_SOLIDARITY')), 1)\n                  ])\n                ]))\n              : (_openBlock(), _createBlock(\"div\", _hoisted_24, [\n                  _createVNode(\"div\", _hoisted_25, [\n                    _createVNode(\"div\", _hoisted_26, [\n                      _hoisted_27,\n                      _createVNode(\"div\", _hoisted_28, _toDisplayString(_ctx.$t('BUSINESS_SIDE')), 1)\n                    ]),\n                    _createVNode(\"p\", null, _toDisplayString(_ctx.$t('TEXT_COMPANY')), 1),\n                    _createVNode(\"button\", {\n                      class: \"actionButton\",\n                      onClick: _cache[11] || (_cache[11] = ($event: any) => (this.goToBillingPortal('MONTHLY_COMPANY')))\n                    }, _toDisplayString(_ctx.$t('PRICE_MONTHLY_COMPANY')), 1),\n                    _createVNode(\"button\", {\n                      class: \"actionButton\",\n                      onClick: _cache[12] || (_cache[12] = ($event: any) => (this.goToBillingPortal('ANNUAL_COMPANY')))\n                    }, _toDisplayString(_ctx.$t('PRICE_ANNUAL_COMPANY')), 1)\n                  ]),\n                  _createVNode(\"div\", _hoisted_29, [\n                    _createVNode(\"div\", _hoisted_30, [\n                      _hoisted_31,\n                      _createVNode(\"div\", _hoisted_32, _toDisplayString(_ctx.$t('PERSONAL_SIDE')), 1)\n                    ]),\n                    _createVNode(\"p\", {\n                      onClick: _cache[13] || (_cache[13] = \n//@ts-ignore\n(...args) => (this.goToContactPage && this.goToContactPage(...args)))\n                    }, _toDisplayString(_ctx.$t('TEXT_PERSONAL_SIDE')) + _toDisplayString(_ctx.$t('PLEASE_CONTACT_US')), 1),\n                    _createVNode(\"button\", {\n                      class: \"actionButton\",\n                      onClick: _cache[14] || (_cache[14] = \n//@ts-ignore\n(...args) => (this.goToContactPage && this.goToContactPage(...args)))\n                    }, _toDisplayString(_ctx.$t('PRICE_PERSONAL_SIDE_MONTHLY')), 1),\n                    _createVNode(\"button\", {\n                      class: \"actionButton\",\n                      onClick: _cache[15] || (_cache[15] = \n//@ts-ignore\n(...args) => (this.goToContactPage && this.goToContactPage(...args)))\n                    }, _toDisplayString(_ctx.$t('PRICE_PERSONAL_SIDE_ANNUAL')), 1)\n                  ]),\n                  _createVNode(\"div\", _hoisted_33, [\n                    _createVNode(\"div\", _hoisted_34, [\n                      _hoisted_35,\n                      _createVNode(\"div\", _hoisted_36, _toDisplayString(_ctx.$t('PERSONAL_SUPPORT')), 1)\n                    ]),\n                    _createVNode(\"p\", {\n                      onClick: _cache[16] || (_cache[16] = \n//@ts-ignore\n(...args) => (this.goToContactPage && this.goToContactPage(...args)))\n                    }, _toDisplayString(_ctx.$t('TEXT_PERSONAL_SUPPORT')) + _toDisplayString(_ctx.$t('PLEASE_CONTACT_US_AND_RDV')), 1),\n                    _createVNode(\"button\", {\n                      class: \"actionButton\",\n                      onClick: _cache[17] || (_cache[17] = \n//@ts-ignore\n(...args) => (this.goToContactPage && this.goToContactPage(...args)))\n                    }, _toDisplayString(_ctx.$t('PRICE_COACHING_1H')), 1),\n                    _createVNode(\"button\", {\n                      class: \"actionButton\",\n                      onClick: _cache[18] || (_cache[18] = \n//@ts-ignore\n(...args) => (this.goToContactPage && this.goToContactPage(...args)))\n                    }, _toDisplayString(_ctx.$t('PRICE_COACHING_5H')), 1)\n                  ])\n                ])),\n            (_ctx.hasBillingId)\n              ? (_openBlock(), _createBlock(\"button\", {\n                  key: 2,\n                  class: \"actionButton\",\n                  onClick: _cache[19] || (_cache[19] = \n//@ts-ignore\n(...args) => (this.changePage && this.changePage(...args)))\n                }, _toDisplayString(_ctx.$t('MANAGE_SUBSCRIPTION')), 1))\n              : _createCommentVNode(\"\", true)\n          ])),\n      _createVNode(\"div\", _hoisted_37, [\n        _createVNode(_component_NavMenu)\n      ]),\n      _createVNode(\"div\", _hoisted_38, [\n        _createVNode(_component_NavMenu)\n      ])\n    ])\n  ], 2))\n}","\nimport { defineComponent } from 'vue'\nimport NavMenu from '@/components/NavigationMenu.vue'\nimport PersonService from '@/services/PersonService'\nimport StoreHandler from '@/store/StoreHandler'\nimport { Person } from '@/model/model'\n\ninterface SubscriptionPageData {\n  hasBillingId: boolean | undefined;\n  managementPage: boolean |undefined;\n  billingStatus: boolean |undefined;\n}\n\nexport default defineComponent({\n  name: 'Subscription',\n  components: { NavMenu },\n  created: async function () {\n    StoreHandler.initStore(this.$store)\n    this.hasBillingId = this.person?.hasBillingId\n    this.managementPage = this.person?.hasBillingId\n    this.billingStatus = this.person?.billingStatus\n  },\n  props: {\n    validSubscription: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data (): SubscriptionPageData {\n    return {\n      hasBillingId: true,\n      managementPage: true,\n      billingStatus: true\n    }\n  },\n  computed: {\n    profile (): string | undefined {\n      return this.$store.state.budget?.profile\n    },\n    person (): Person | null {\n      return this.$store.state.person\n    }\n  },\n  methods: {\n    async goToBillingPortal (selectedPackage: string): Promise<void> {\n      PersonService.redirectToBillingPortalUrl(selectedPackage)\n    },\n    goToContactPage () {\n      window.location.href = 'https://agatha-budget.fr/contact/'\n    },\n    async getInformation () {\n      PersonService.manageSubscription()\n    },\n    changePage () {\n      this.managementPage = !this.managementPage\n    }\n  }\n})\n","import { render } from \"./Subscription.vue?vue&type=template&id=2505c666&ts=true\"\nimport script from \"./Subscription.vue?vue&type=script&lang=ts\"\nexport * from \"./Subscription.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"chartPage menuLayout row col-12 offset-0 col-sm-12 offset-sm-0 col-md-10 offset-md-1 col-lg-12 offset-lg-0 col-xl-10 offset-xl-1 col-xxl-8 offset-xxl-2\" }\nconst _hoisted_2 = { class: \"header fixed title\" }\nconst _hoisted_3 = { class: \"placeholder top\" }\nconst _hoisted_4 = { class: \"mobileVersion\" }\nconst _hoisted_5 = { class: \"deficitMessage\" }\nconst _hoisted_6 = { class: \"draw col-lg-7\" }\nconst _hoisted_7 = { class: \"computerVersion col-lg-5\" }\nconst _hoisted_8 = { class: \"multiselect\" }\nconst _hoisted_9 = { class: \"deficitMessage \" }\nconst _hoisted_10 = { class: \"mobileVersion\" }\nconst _hoisted_11 = { class: \"multiselect\" }\nconst _hoisted_12 = { class: \"placeholder bottom\" }\nconst _hoisted_13 = { class: \"footer fixed\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ChartPageHeader = _resolveComponent(\"ChartPageHeader\")\n  const _component_DateNav = _resolveComponent(\"DateNav\")\n  const _component_PieChart = _resolveComponent(\"PieChart\")\n  const _component_BarChart = _resolveComponent(\"BarChart\")\n  const _component_RadioSelect = _resolveComponent(\"RadioSelect\")\n  const _component_CheckboxSelect = _resolveComponent(\"CheckboxSelect\")\n  const _component_Multiselect = _resolveComponent(\"Multiselect\")\n  const _component_NavMenu = _resolveComponent(\"NavMenu\")\n\n  return (_openBlock(), _createBlock(\"div\", {\n    class: this.$store.state.css\n  }, [\n    _createVNode(\"div\", _hoisted_1, [\n      _createVNode(\"div\", _hoisted_2, [\n        _createVNode(_component_ChartPageHeader, { onChangeGraph: _ctx.changeGraph }, null, 8, [\"onChangeGraph\"])\n      ]),\n      _createVNode(\"div\", _hoisted_3, [\n        _createVNode(_component_ChartPageHeader, { onChangeGraph: _ctx.changeGraph }, null, 8, [\"onChangeGraph\"])\n      ]),\n      _createVNode(\"div\", _hoisted_4, [\n        _createVNode(_component_DateNav, {\n          fromPage: 'chart',\n          onChangeMonth: _ctx.changeMonth\n        }, null, 8, [\"onChangeMonth\"]),\n        _createVNode(\"div\", _hoisted_5, _toDisplayString(_ctx.deficitMessage), 1)\n      ]),\n      _createVNode(\"div\", _hoisted_6, [\n        (_ctx.currentGraph == 'pie')\n          ? (_openBlock(), _createBlock(_component_PieChart, {\n              key: 0,\n              chartData: _ctx.pieChartData\n            }, null, 8, [\"chartData\"]))\n          : _createCommentVNode(\"\", true),\n        (_ctx.currentGraph == 'bar')\n          ? (_openBlock(), _createBlock(_component_BarChart, {\n              key: 1,\n              chartData: _ctx.barChartData\n            }, null, 8, [\"chartData\"]))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createVNode(\"div\", _hoisted_7, [\n        _createVNode(_component_DateNav, {\n          fromPage: 'chart',\n          onChangeMonth: _ctx.changeMonth\n        }, null, 8, [\"onChangeMonth\"]),\n        (_ctx.currentGraph == 'pie')\n          ? (_openBlock(), _createBlock(_component_RadioSelect, {\n              key: 0,\n              choices: _ctx.choicesTypeInformationPie,\n              onHadSelection: _ctx.changeTypeInformationPie\n            }, null, 8, [\"choices\", \"onHadSelection\"]))\n          : _createCommentVNode(\"\", true),\n        (_ctx.currentGraph == 'bar')\n          ? (_openBlock(), _createBlock(_component_CheckboxSelect, {\n              key: 1,\n              choices: _ctx.choicesTypeInformationBar,\n              onHadSelection: _ctx.changeTypeInformationBar\n            }, null, 8, [\"choices\", \"onHadSelection\"]))\n          : _createCommentVNode(\"\", true),\n        _createVNode(\"div\", _hoisted_8, [\n          _createVNode(_component_Multiselect, {\n            onChange: _ctx.recalculate,\n            modelValue: _ctx.masterCategoryId,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (_ctx.masterCategoryId = $event)),\n            groups: true,\n            searchable: true,\n            options: _ctx.masterCategories,\n            noResultsText: _ctx.$t('NO_RESULT_FOUND'),\n            placeholder: _ctx.$t('SELECT_MASTER_CATEGORY'),\n            \"show-labels\": false,\n            onSelect: _ctx.recalculate\n          }, null, 8, [\"onChange\", \"modelValue\", \"options\", \"noResultsText\", \"placeholder\", \"onSelect\"])\n        ]),\n        _createVNode(\"div\", _hoisted_9, _toDisplayString(_ctx.deficitMessage), 1)\n      ]),\n      _createVNode(\"div\", _hoisted_10, [\n        (_ctx.currentGraph == 'pie')\n          ? (_openBlock(), _createBlock(_component_RadioSelect, {\n              key: 0,\n              choices: _ctx.choicesTypeInformationPie,\n              onHadSelection: _ctx.changeTypeInformationPie\n            }, null, 8, [\"choices\", \"onHadSelection\"]))\n          : _createCommentVNode(\"\", true),\n        (_ctx.currentGraph == 'bar')\n          ? (_openBlock(), _createBlock(_component_CheckboxSelect, {\n              key: 1,\n              choices: _ctx.choicesTypeInformationBar,\n              onHadSelection: _ctx.changeTypeInformationBar\n            }, null, 8, [\"choices\", \"onHadSelection\"]))\n          : _createCommentVNode(\"\", true),\n        _createVNode(\"div\", _hoisted_11, [\n          _createVNode(_component_Multiselect, {\n            onChange: _ctx.recalculate,\n            modelValue: _ctx.masterCategoryId,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => (_ctx.masterCategoryId = $event)),\n            groups: true,\n            searchable: true,\n            options: _ctx.masterCategories,\n            noResultsText: _ctx.$t('NO_RESULT_FOUND'),\n            placeholder: _ctx.$t('SELECT_MASTER_CATEGORY'),\n            \"show-labels\": false,\n            onSelect: _ctx.recalculate\n          }, null, 8, [\"onChange\", \"modelValue\", \"options\", \"noResultsText\", \"placeholder\", \"onSelect\"])\n        ])\n      ]),\n      _createVNode(\"div\", _hoisted_12, [\n        _createVNode(_component_NavMenu, { page: 'chart' })\n      ]),\n      _createVNode(\"div\", _hoisted_13, [\n        _createVNode(_component_NavMenu, { page: 'chart' })\n      ])\n    ])\n  ], 2))\n}","import { toDisplayString as _toDisplayString, createVNode as _createVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { value: \"pie\" }\nconst _hoisted_2 = { value: \"bar\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return _withDirectives((_openBlock(), _createBlock(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (_ctx.currentGraph = $event)),\n    class: \"selectGraph\"\n  }, [\n    _createVNode(\"option\", _hoisted_1, _toDisplayString(_ctx.$t('PIE_CHART')), 1),\n    _createVNode(\"option\", _hoisted_2, _toDisplayString(_ctx.$t('BAR_CHART')), 1)\n  ], 512)), [\n    [_vModelSelect, _ctx.currentGraph]\n  ])\n}","\nimport { defineComponent } from 'vue'\n\ninterface ChartPageHeaderData {\n  currentGraph: string;\n}\n\nexport default defineComponent({\n  name: 'ChartPageHeader',\n  watch: {\n    currentGraph: function () {\n      this.$emit('changeGraph', this.currentGraph)\n    }\n  },\n  data (): ChartPageHeaderData {\n    return {\n      currentGraph: 'pie'\n    }\n  }\n})\n","import { render } from \"./ChartPageHeader.vue?vue&type=template&id=52db2fbe&ts=true\"\nimport script from \"./ChartPageHeader.vue?vue&type=script&lang=ts\"\nexport * from \"./ChartPageHeader.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <Pie\n    :chart-options=\"chartOptions\"\n    :chart-data=\"chartData\"\n    :chart-id=\"chartId\"\n    :dataset-id-key=\"datasetIdKey\"\n    :plugins=\"plugins\"\n    :css-classes=\"cssClasses\"\n    :styles=\"styles\"\n    :width=\"width\"\n    :height=\"height\"\n  />\n</template>\n\n<script>\nimport { Pie } from 'vue-chartjs'\n\nimport { Chart as ChartJS, Title, Tooltip, Legend, ArcElement, CategoryScale } from 'chart.js'\n\nChartJS.register(Title, Tooltip, Legend, ArcElement, CategoryScale)\n\nexport default {\n  name: 'PieChart',\n  components: {\n    Pie\n  },\n  props: {\n    chartData: {\n      type: Object\n    },\n    chartId: {\n      type: String,\n      default: 'pie-chart'\n    },\n    datasetIdKey: {\n      type: String,\n      default: 'label'\n    },\n    width: {\n      type: Number,\n      default: 400\n    },\n    height: {\n      type: Number,\n      default: 400\n    },\n    cssClasses: {\n      default: '',\n      type: String\n    },\n    styles: {\n      type: Object\n    },\n    plugins: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data () {\n    return {\n      chartDataDefault: {\n        labels: [],\n        datasets: [\n          {\n            backgroundColor: [],\n            data: []\n          }\n        ]\n      },\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    }\n  }\n}\n</script>\n","import { render } from \"./PieChart.vue?vue&type=template&id=79bf598a\"\nimport script from \"./PieChart.vue?vue&type=script&lang=js\"\nexport * from \"./PieChart.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, vModelRadio as _vModelRadio, createVNode as _createVNode, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { class: \"form-check\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.choices, (element) => {\n    return (_openBlock(), _createBlock(\"div\", {\n      key: element.value,\n      class: \"radioSelect typeSelection\"\n    }, [\n      _createVNode(\"div\", _hoisted_1, [\n        (element.preSelected)\n          ? _withDirectives((_openBlock(), _createBlock(\"input\", {\n              key: 0,\n              class: \"form-check-input\",\n              type: \"radio\",\n              id: element.value,\n              value: element.value,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (_ctx.result = $event)),\n              checked: \"\"\n            }, null, 8, [\"id\", \"value\"])), [\n              [_vModelRadio, _ctx.result]\n            ])\n          : _withDirectives((_openBlock(), _createBlock(\"input\", {\n              key: 1,\n              class: \"form-check-input\",\n              type: \"radio\",\n              id: element.value,\n              value: element.value,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => (_ctx.result = $event))\n            }, null, 8, [\"id\", \"value\"])), [\n              [_vModelRadio, _ctx.result]\n            ]),\n        _createVNode(\"label\", {\n          class: \"form-check-label\",\n          for: element.value\n        }, _toDisplayString(element.label), 9, [\"for\"])\n      ])\n    ]))\n  }), 128))\n}","\nimport { ChoiceElement } from '@/model/model'\nimport { defineComponent } from 'vue'\n\ninterface RadioSelectData {\n  result: string;\n}\n\nexport default defineComponent({\n  name: 'RadioSelect',\n  beforeCreate: function () {\n    this.$props.choices.forEach((element: { label: string; value: string; preSelected: boolean }) => {\n      if (element.preSelected) {\n        this.result = element.value\n      }\n    })\n  },\n  watch: {\n    result: function () {\n      this.$emit('hadSelection', this.result)\n    }\n  },\n  props: {\n    choices: {\n      type: Object as () => ChoiceElement[], // (max one element is preSelected)\n      required: true\n    }\n  },\n  data (): RadioSelectData {\n    return {\n      result: ''\n    }\n  },\n  methods: { }\n})\n","import { render } from \"./RadioSelect.vue?vue&type=template&id=73e091ec&ts=true\"\nimport script from \"./RadioSelect.vue?vue&type=script&lang=ts\"\nexport * from \"./RadioSelect.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, vModelCheckbox as _vModelCheckbox, createVNode as _createVNode, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { class: \"form-check\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.choices, (element) => {\n    return (_openBlock(), _createBlock(\"div\", {\n      key: element.value,\n      class: \"radioSelect typeSelection\"\n    }, [\n      _createVNode(\"div\", _hoisted_1, [\n        (element.preSelected)\n          ? _withDirectives((_openBlock(), _createBlock(\"input\", {\n              key: 0,\n              class: \"form-check-input\",\n              type: \"checkbox\",\n              id: element.value,\n              value: element.value,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (_ctx.result = $event)),\n              checked: \"\"\n            }, null, 8, [\"id\", \"value\"])), [\n              [_vModelCheckbox, _ctx.result]\n            ])\n          : _withDirectives((_openBlock(), _createBlock(\"input\", {\n              key: 1,\n              class: \"form-check-input\",\n              type: \"checkbox\",\n              id: element.value,\n              value: element.value,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => (_ctx.result = $event))\n            }, null, 8, [\"id\", \"value\"])), [\n              [_vModelCheckbox, _ctx.result]\n            ]),\n        _createVNode(\"label\", {\n          class: \"form-check-label\",\n          for: element.value\n        }, _toDisplayString(element.label), 9, [\"for\"])\n      ])\n    ]))\n  }), 128))\n}","\nimport { ChoiceElement } from '@/model/model'\nimport { defineComponent } from 'vue'\n\ninterface CheckboxSelectData {\n  result: string[];\n}\n\nexport default defineComponent({\n  name: 'CheckboxSelect',\n  created: function () {\n    this.$props.choices.forEach((element: { label: string; value: string; preSelected: boolean }) => {\n      if (element.preSelected) {\n        this.result.push(element.value)\n      }\n    })\n  },\n  watch: {\n    result: function () {\n      this.$emit('hadSelection', this.result)\n    }\n  },\n  props: {\n    choices: {\n      type: Object as () => ChoiceElement[], // (max one element is preSelected)\n      required: true\n    }\n  },\n  data (): CheckboxSelectData {\n    return {\n      result: []\n    }\n  },\n  methods: { }\n})\n","import { render } from \"./CheckboxSelect.vue?vue&type=template&id=9fe78e9e&ts=true\"\nimport script from \"./CheckboxSelect.vue?vue&type=script&lang=ts\"\nexport * from \"./CheckboxSelect.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue'\nimport { redirectToLoginPageIfNotLogged } from '@/router'\nimport ChartPageHeader from '@/components/headers/ChartPageHeader.vue'\nimport BarChart from '@/components/charts/BarChart.vue'\nimport PieChart from '@/components/charts/PieChart.vue'\nimport RadioSelect from '@/components/inputs/RadioSelect.vue'\nimport CheckboxSelect from '@/components/inputs/CheckboxSelect.vue'\nimport DateNav from '@/components/inputs/DateNavigation.vue'\nimport NavMenu from '@/components/NavigationMenu.vue'\nimport StoreHandler from '@/store/StoreHandler'\nimport BudgetDataService from '@/services/BudgetDataService'\nimport { CategoryDataList, Budget, GroupSelectOption, Category } from '@/model/model'\nimport Utils from '@/utils/Utils'\nimport Time from '@/utils/Time'\nimport { allocatedColor, spentColor, availableColor, redColor, blueColor, orangeColor, purpleColor, greenColor, yellowColor, navyColor, pinkColor, brownColor, blackColor, lightGreyColor, darkGreyColor, lightGreenColor, salmonColor, lavenderColor, bordeauxColor } from '@/utils/Color'\nimport Multiselect from '@vueform/multiselect'\n\ninterface ChartPageData {\n    barChartData: { labels: string[]; datasets: { label: string; backgroundColor: string;data: number[] }[] };\n    categoryDataList: CategoryDataList;\n    pieChartData: { labels: string[]; datasets: { backgroundColor: string[]; data: number[] }[] };\n    typeInformationPie: string;\n    typeInformationBar: string[];\n    masterCategoryId: string;\n    currentGraph: string;\n    budgetMonth: number;\n    choicesTypeInformationPie: { label: string; value: string; preSelected: boolean }[];\n    choicesTypeInformationBar: { label: string; value: string; preSelected: boolean }[];\n    predefinedListColor: string[];\n    colorListMasterCategories: string[];\n    deficitCategories: string[];\n    deficitMessage: string;\n}\n\nexport default defineComponent({\n  name: 'ChartPage',\n  components: {\n    ChartPageHeader,\n    BarChart,\n    PieChart,\n    RadioSelect,\n    CheckboxSelect,\n    DateNav,\n    NavMenu,\n    Multiselect\n  },\n  props: { },\n  beforeCreate: async function () {\n    redirectToLoginPageIfNotLogged(this.$store)\n  },\n  created: async function () {\n    StoreHandler.initStore(this.$store)\n    await this.getBudgetData()\n    this.recalculate()\n    this.getcolorsMasterCategories()\n  },\n  watch: {\n    typeInformationPie: function () {\n      this.drawPieChart()\n    },\n    typeInformationBar: function () {\n      this.drawBarChart()\n    },\n    deficitCategories: function () {\n      this.writeAlertMessage()\n    }\n  },\n  data (): ChartPageData {\n    return {\n      barChartData: {\n        labels: [],\n        datasets: [{ label: '', backgroundColor: '', data: [] }]\n      },\n      categoryDataList: {},\n      pieChartData: {\n        labels: [],\n        datasets: [{ backgroundColor: [], data: [] }]\n      },\n      typeInformationPie: 'available',\n      typeInformationBar: ['allocated', 'spent'],\n      masterCategoryId: '',\n      currentGraph: 'pie',\n      budgetMonth: Time.getCurrentMonth(),\n      choicesTypeInformationPie: [\n        { label: this.$t('ALLOCATED'), value: 'allocated', preSelected: false },\n        { label: this.$t('SPENT'), value: 'spent', preSelected: false },\n        { label: this.$t('AVAILABLE'), value: 'available', preSelected: true }\n      ],\n      choicesTypeInformationBar: [\n        { label: this.$t('ALLOCATED'), value: 'allocated', preSelected: true },\n        { label: this.$t('SPENT'), value: 'spent', preSelected: true },\n        { label: this.$t('AVAILABLE'), value: 'available', preSelected: false }\n      ],\n      predefinedListColor: [redColor, blueColor, orangeColor, darkGreyColor, purpleColor, greenColor, pinkColor, navyColor, lightGreyColor, salmonColor, brownColor, blackColor, bordeauxColor, lavenderColor, yellowColor, lightGreenColor],\n      colorListMasterCategories: [],\n      deficitCategories: [],\n      deficitMessage: ''\n    }\n  },\n  computed: {\n    budget (): Budget | null {\n      return this.$store.state.budget\n    },\n    masterCategories (): GroupSelectOption[] {\n      const optionsList = [\n        {\n          label: this.$t('SELECT'),\n          options: [\n            { value: '', label: this.$t('ALL_BUDGET') }\n          ]\n        }\n      ]\n      for (const masterCategory of this.$store.state.masterCategories) {\n        const categories = StoreHandler.getCategoriesByMasterCategory(this.$store, masterCategory, false)\n        if (categories.length > 0) {\n          const newOption = { value: masterCategory.id, label: masterCategory.name }\n          optionsList[0].options.push(newOption)\n        }\n      }\n      return optionsList\n    }\n  },\n  methods: {\n    async getBudgetData () {\n      if (this.budget) {\n        await BudgetDataService.getBudgetDataForMonth(this.budget, this.budgetMonth).then(\n          (categoryDataList) => {\n            this.categoryDataList = categoryDataList\n          }\n        )\n      }\n    },\n    getLegend (masterCategorySelectedId: string): string[] {\n      const listName: string[] = []\n      const masterCategorySelected = StoreHandler.getMasterCategoryById(this.$store, masterCategorySelectedId)\n      if (masterCategorySelected) {\n        const categories = StoreHandler.getCategoriesByMasterCategory(this.$store, masterCategorySelected, false)\n        for (const category of categories) {\n          listName.push(category.name)\n        }\n      } else {\n        for (const masterCategory of this.$store.state.masterCategories) {\n          const categories = StoreHandler.getCategoriesByMasterCategory(this.$store, masterCategory, false)\n          const archivedCategories = StoreHandler.getCategoriesByMasterCategory(this.$store, masterCategory, true)\n          if (!(categories.length === 0 && archivedCategories.length > 0)) {\n            listName.push(masterCategory.name)\n          }\n        }\n      }\n      return listName\n    },\n    getDatas (type: string, masterCategorySelectedId: string): number[] {\n      this.deficitCategories = []\n      const listData: number[] = []\n      const masterCategorySelected = StoreHandler.getMasterCategoryById(this.$store, masterCategorySelectedId)\n      if (masterCategorySelected) {\n        const categories = StoreHandler.getCategoriesByMasterCategory(this.$store, masterCategorySelected, false)\n        for (const category of categories) {\n          const data = this.getCategoryDatas(type, category)\n          if (data >= 0 || this.currentGraph === 'bar') {\n            listData.push(Utils.getEurosAmount(data))\n          } else {\n            listData.push(0)\n            this.deficitCategories.push(category.name)\n          }\n        }\n      } else {\n        for (const masterCategory of this.$store.state.masterCategories) {\n          const categories = StoreHandler.getCategoriesByMasterCategory(this.$store, masterCategory, false)\n          const archivedCategories = StoreHandler.getCategoriesByMasterCategory(this.$store, masterCategory, true)\n          if (!(categories.length === 0 && archivedCategories.length > 0)) {\n            let data = 0\n            for (const category of categories) {\n              data += this.getCategoryDatas(type, category)\n            }\n            if (data >= 0 || this.currentGraph === 'bar') {\n              listData.push(Utils.getEurosAmount(data))\n            } else {\n              listData.push(0)\n              this.deficitCategories.push(masterCategory.name)\n            }\n          }\n        }\n      }\n      return listData\n    },\n    getCategoryDatas (type: string, category: Category): number {\n      let data = 0\n      switch (type) {\n        case 'allocated':\n          data = this.categoryDataList[category.id]?.allocated || 0\n          break\n        case 'spent':\n          data = this.categoryDataList[category.id]?.spent * (-1) || 0\n          break\n        case 'available':\n          data = this.categoryDataList[category.id]?.available || 0\n          break\n      }\n      return data\n    },\n    getcolorsMasterCategories () {\n      let indexColor = 0\n      for (const masterCategory of this.$store.state.masterCategories) {\n        const categories = StoreHandler.getCategoriesByMasterCategory(this.$store, masterCategory, false)\n        const archivedCategories = StoreHandler.getCategoriesByMasterCategory(this.$store, masterCategory, true)\n        if (!(categories.length === 0 && archivedCategories.length > 0)) {\n          if (masterCategory.color === null) {\n            this.colorListMasterCategories.push(this.predefinedListColor[indexColor])\n            indexColor < 10 ? indexColor++ : indexColor = 0\n          } else {\n            this.colorListMasterCategories.push(masterCategory.color)\n          }\n        }\n      }\n    },\n    getColorsBarChart (type: string): string {\n      let color = ''\n      switch (type) {\n        case 'allocated':\n          color = allocatedColor\n          break\n        case 'spent':\n          color = spentColor\n          break\n        case 'available':\n          color = availableColor\n          break\n      }\n      return color\n    },\n    drawPieChart () {\n      const labelList = this.getLegend(this.masterCategoryId)\n      const dataList = this.getDatas(this.typeInformationPie, this.masterCategoryId)\n      let colorList: string[] = this.colorListMasterCategories\n      if (this.masterCategoryId !== '') {\n        colorList = this.predefinedListColor\n      }\n      this.pieChartData.labels = labelList\n      this.pieChartData.datasets[0].data = dataList\n      this.pieChartData.datasets[0].backgroundColor = colorList\n    },\n    drawBarChart () {\n      this.barChartData.datasets = []\n      if (this.typeInformationBar.indexOf('available') !== -1) {\n        this.getBarDatasets('available')\n      }\n      if (this.typeInformationBar.indexOf('spent') !== -1) {\n        this.getBarDatasets('spent')\n      }\n      if (this.typeInformationBar.indexOf('allocated') !== -1) {\n        this.getBarDatasets('allocated')\n      }\n      this.barChartData.labels = this.getLegend(this.masterCategoryId)\n    },\n    getBarDatasets (type: string) {\n      let legend = ''\n      switch (type) {\n        case 'allocated':\n          legend = this.$t('ALLOCATED')\n          break\n        case 'spent':\n          legend = this.$t('SPENT')\n          break\n        case 'available':\n          legend = this.$t('AVAILABLE')\n          break\n      }\n      const newDatasets = {\n        label: legend,\n        backgroundColor: this.getColorsBarChart(type),\n        data: this.getDatas(type, this.masterCategoryId)\n      }\n      this.barChartData.datasets.splice(0, 0, newDatasets)\n    },\n    recalculate () {\n      if (this.currentGraph === 'pie') {\n        this.drawPieChart()\n      } else {\n        this.drawBarChart()\n      }\n    },\n    changeGraph (newGraph: string) {\n      this.currentGraph = newGraph\n      this.recalculate()\n    },\n    changeTypeInformationPie (newTypeInformationPie: string) {\n      this.typeInformationPie = newTypeInformationPie\n    },\n    changeTypeInformationBar (newTypeInformationBar: string[]) {\n      this.typeInformationBar = newTypeInformationBar\n    },\n    async changeMonth (message: string) {\n      if (message === 'next') {\n        this.budgetMonth = Time.getNextMonth(this.budgetMonth)\n      } else {\n        this.budgetMonth = Time.getLastMonth(this.budgetMonth)\n      }\n      await this.getBudgetData()\n      this.recalculate()\n    },\n    writeAlertMessage () {\n      if (this.deficitCategories.length === 0) {\n        this.deficitMessage = ''\n      } else if (this.deficitCategories.length === 1) {\n        this.deficitMessage = this.$t('THE_CATEGORY') + this.deficitCategories[0] + this.$t('IS_IN_DEFICIT')\n      } else {\n        this.deficitMessage = this.$t('CATEGORIES') + this.deficitCategories[0]\n        for (let i = 1; i < this.deficitCategories.length; i++) {\n          this.deficitMessage = this.deficitMessage + ', ' + this.deficitCategories[i]\n        }\n        this.deficitMessage += this.$t('ARE_IN_DEFICIT')\n      }\n    }\n  }\n})\n","import { render } from \"./ChartPage.vue?vue&type=template&id=a99112ae&ts=true\"\nimport script from \"./ChartPage.vue?vue&type=script&lang=ts\"\nexport * from \"./ChartPage.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/erica/les_tyches/code/heroku/tresorier-front/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router'\nimport Home from '../views/Home.vue'\nimport Login from '../views/Login.vue'\nimport Profile from '../views/Profile.vue'\nimport Banks from '../views/Banks.vue'\nimport Signup from '../views/Signup.vue'\nimport RedirectToAccountPage from '../views/RedirectToAccountPage.vue'\nimport AccountPage from '../views/AccountPage.vue'\nimport Subscription from '../views/Subscription.vue'\nimport ChartPage from '../views/ChartPage.vue'\nimport { StoreState } from '@/store/index'\nimport { Store } from 'vuex'\nimport { AxiosError } from 'axios'\n\nexport enum RouterPages {\n  home = '/',\n  login = '/login',\n  signup = '/signup',\n  account = '/account',\n  about = '/about',\n  profile = '/profile',\n  banks = '/bank',\n  subscription = '/subscription',\n  invalidSubscription = '/invalidSubscription',\n  redirectToAccountPage = '/redirectToAccountPage',\n  chartPage = '/chart'\n}\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: RouterPages.home,\n    component: Home\n  },\n  {\n    path: RouterPages.login,\n    component: Login\n  },\n  {\n    path: RouterPages.signup,\n    component: Signup\n  },\n  {\n    path: RouterPages.profile,\n    component: Profile\n  },\n  {\n    path: RouterPages.banks,\n    component: Banks,\n    props: route => ({ query: route.query.agreementId })\n  },\n  {\n    path: RouterPages.redirectToAccountPage,\n    component: RedirectToAccountPage\n  },\n  {\n    path: RouterPages.subscription,\n    component: Subscription,\n    props: { validSubscription: true }\n  },\n  {\n    path: RouterPages.invalidSubscription,\n    component: Subscription,\n    props: { validSubscription: false }\n  },\n  {\n    path: RouterPages.account,\n    component: AccountPage,\n    props: route => ({ accountId: route.query.accountId })\n  },\n  {\n    path: RouterPages.about,\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/About.vue')\n  },\n  {\n    path: RouterPages.chartPage,\n    component: ChartPage\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nexport function redirectToLoginPageIfNotLogged (store: Store<StoreState>) {\n  if (!store.state.logged) {\n    router.push(RouterPages.login)\n  }\n}\n\nexport function redirectOnApiError (error: AxiosError) {\n  if (error.response && error.response.status === 402) {\n    router.push(RouterPages.invalidSubscription)\n  } else {\n    router.push(RouterPages.login)\n  }\n}\n\nexport default router\n","import { InjectionKey } from 'vue'\nimport { createStore, Store, useStore as baseUseStore } from 'vuex'\nimport SuperTokensRequest from 'supertokens-website/axios'\nimport { Budget, Account, Category, MasterCategory, Person } from '@/model/model'\nimport StoreHandler from './StoreHandler'\n\nexport interface StoreState {\n  logged: boolean;\n  budget: Budget | null;\n  accounts: Account[];\n  categories: Category[];\n  masterCategories: MasterCategory[];\n  css: string;\n  storeLoaded: boolean;\n  person: Person | null;\n}\n\nexport const key: InjectionKey<Store<StoreState>> = Symbol('injectionKey')\n\nexport const store = createStore<StoreState>({\n  state: {\n    logged: SuperTokensRequest.doesSessionExist(),\n    budget: null,\n    accounts: [],\n    categories: [],\n    masterCategories: [],\n    css: 'default',\n    storeLoaded: false,\n    person: null\n  },\n  mutations: {\n    updateLogged (state) {\n      state.logged = SuperTokensRequest.doesSessionExist()\n      if (state.logged) {\n        StoreHandler.initStore(store)\n      } else {\n        StoreHandler.resetStore(store)\n      }\n    },\n    updateBudget (state, budget: Budget) {\n      if (budget !== state.budget) {\n        state.budget = budget\n        StoreHandler.updateOnBudgetChange(store)\n      }\n    },\n    updateAccounts (state, accounts: Account[]) {\n      state.accounts = accounts\n    },\n    updateCategories (state, categories: Category[]) {\n      state.categories = categories.sort((a, b) => (a.name.toLowerCase() <= b.name.toLowerCase() ? -1 : 1))\n    },\n    updateMasterCategories (state, masterCategories: MasterCategory[]) {\n      state.masterCategories = masterCategories.sort((a, b) => (a.name.toLowerCase() <= b.name.toLowerCase() ? -1 : 1))\n    },\n    updateStoreLoaded (state, storeLoaded: boolean) {\n      state.storeLoaded = storeLoaded\n    },\n    updatePerson (state, person: Person) {\n      state.person = person\n    }\n  },\n  actions: {\n    updateLogged (context) {\n      context.commit('updateLogged')\n    },\n    updateBudget (context, budget: Budget) {\n      context.commit('updateBudget', budget)\n    },\n    updateAccounts (context, accounts: Account[]) {\n      context.commit('updateAccounts', accounts)\n    },\n    updateCategories (context, categories: Category[]) {\n      context.commit('updateCategories', categories)\n    },\n    updateMasterCategories (context, masterCategories: MasterCategory[]) {\n      context.commit('updateMasterCategories', masterCategories)\n    },\n    updateStoreLoaded (context, storeLoaded: boolean) {\n      context.commit('updateStoreLoaded', storeLoaded)\n    },\n    updatePerson (context, person: Person) {\n      context.commit('updatePerson', person)\n    }\n  },\n  modules: {\n  }\n})\n\nexport function useStore (): Store<StoreState> {\n  return baseUseStore(key)\n}\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport './registerServiceWorker'\nimport router from './router'\nimport { store, key } from './store'\nimport 'bootstrap'\nimport { createI18n } from 'vue-i18n'\nimport localeFR from '@/assets/locale/fr.json'\nimport localeEN from '@/assets/locale/en.json'\nimport localeDate from '@/assets/locale/dateformat.json'\nimport Properties from '@/../properties'\n\nconst messages = {\n  fr: localeFR,\n  en: localeEN\n}\n\nconst i18n = createI18n({ locale: 'fr', fallbackLocale: 'en', messages: messages, datetimeFormats: localeDate })\nconsole.log('version : ' + Properties.commitHash)\ncreateApp(App).use(store, key).use(router).use(i18n).mount('#app')\n","module.exports = __webpack_public_path__ + \"img/logo.0ca28574.png\";"],"sourceRoot":""}